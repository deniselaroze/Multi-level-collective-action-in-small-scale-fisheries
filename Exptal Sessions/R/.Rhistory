title = "Regression Results with Clustered Standard Errors",
dep.var.labels = "Extraction OA",
#covariate.labels = c("Beliefs Caleta", "Beliefs Others", "Treatment",
#                     "Confianza Caleta", "Confianza PM",
#                     "Conflicto Caleta", "Conflicto PM",
#                     "Lag Extraction Others Mean"),
notes = "Clustered standard errors by matching group are reported in parentheses.")
lm1 <- lm(extraction_OA ~ lag_beliefs_ingroup_OA_updated + lag_beliefs_outgroup_OA_updated  + treatment + group_size, data = dfs_long)
lm2 <- lm(extraction_OA ~ lag_beliefs_ingroup_OA_updated + lag_beliefs_outgroup_OA_updated + treatment + minority + group_size, data = dfs_long)
lm3<- lm(extraction_OA ~ lag_beliefs_ingroup_OA_updated*minority + lag_beliefs_outgroup_OA_updated  + beliefs_OA_others + treatment+ group_size , data = dfs_long)
lm4<- lm(extraction_OA ~ lag_beliefs_ingroup_OA_updated + lag_beliefs_outgroup_OA_updated*minority  + treatment+ group_size , data = dfs_long)
# Calculate clustered standard errors by 'participant.code'
clustered_se_lm1 <- sqrt(diag(vcovCL(lm1, cluster = ~gid.treat)))
clustered_se_lm2 <- sqrt(diag(vcovCL(lm2, cluster = ~gid.treat)))
clustered_se_lm3 <- sqrt(diag(vcovCL(lm3, cluster = ~gid.treat)))
clustered_se_lm4 <- sqrt(diag(vcovCL(lm4, cluster = ~gid.treat)))
#clustered_se_lm5 <- sqrt(diag(vcovCL(lm5, cluster = ~gid.treat)))
#clustered_se_lm6 <- sqrt(diag(vcovCL(lm6, cluster = ~gid.treat)))
# Export to stargazer with clustered standard errors
stargazer(lm1, lm2, lm3, lm4,
se = list(clustered_se_lm1, clustered_se_lm2, clustered_se_lm3,  clustered_se_lm4),
type = "html",
out = paste0(path_github, "Outputs/extraction_clustered_se_n_ingroup_min_imputed_beliefs.html"),
title = "Regression Results with Clustered Standard Errors",
dep.var.labels = "Extraction OA",
#covariate.labels = c("Beliefs Caleta", "Beliefs Others", "Treatment",
#                     "Confianza Caleta", "Confianza PM",
#                     "Conflicto Caleta", "Conflicto PM",
#                     "Lag Extraction Others Mean"),
notes = "Clustered standard errors by matching group are reported in parentheses.")
# Run models on extraction with number of out_group participants in the area and matching group clustered s.e.
lm1 <- lm(extraction_OA ~ lag_beliefs_ingroup_OA_updated + lag_beliefs_outgroup_OA_updated  + treatment + group_size, data = dfs_long)
lm2 <- lm(extraction_OA ~ lag_beliefs_ingroup_OA_updated + lag_beliefs_outgroup_OA_updated + treatment + minority + group_size, data = dfs_long)
lm3<- lm(extraction_OA ~ lag_beliefs_ingroup_OA_updated*minority + lag_beliefs_outgroup_OA_updated + treatment+ group_size , data = dfs_long)
lm4<- lm(extraction_OA ~ lag_beliefs_ingroup_OA_updated + lag_beliefs_outgroup_OA_updated*minority  + treatment+ group_size , data = dfs_long)
# Calculate clustered standard errors by 'participant.code'
clustered_se_lm1 <- sqrt(diag(vcovCL(lm1, cluster = ~gid.treat)))
clustered_se_lm2 <- sqrt(diag(vcovCL(lm2, cluster = ~gid.treat)))
clustered_se_lm3 <- sqrt(diag(vcovCL(lm3, cluster = ~gid.treat)))
clustered_se_lm4 <- sqrt(diag(vcovCL(lm4, cluster = ~gid.treat)))
#clustered_se_lm5 <- sqrt(diag(vcovCL(lm5, cluster = ~gid.treat)))
#clustered_se_lm6 <- sqrt(diag(vcovCL(lm6, cluster = ~gid.treat)))
# Export to stargazer with clustered standard errors
stargazer(lm1, lm2, lm3, lm4,
se = list(clustered_se_lm1, clustered_se_lm2, clustered_se_lm3,  clustered_se_lm4),
type = "html",
out = paste0(path_github, "Outputs/extraction_clustered_se_n_ingroup_min_imputed_beliefs.html"),
title = "Regression Results with Clustered Standard Errors",
dep.var.labels = "Extraction OA",
#covariate.labels = c("Beliefs Caleta", "Beliefs Others", "Treatment",
#                     "Confianza Caleta", "Confianza PM",
#                     "Conflicto Caleta", "Conflicto PM",
#                     "Lag Extraction Others Mean"),
notes = "Clustered standard errors by matching group are reported in parentheses.")
# Run models on extraction with number of out_group participants in the area and matching group clustered s.e.
lm1 <- lm(extraction_OA ~ lag_extraction_others_OA_mean + beliefs_OA_caleta + beliefs_OA_others + treatment + group_size, data = dfs_long)
lm2 <- lm(extraction_OA ~ lag_extraction_others_OA_mean + beliefs_OA_caleta + beliefs_OA_others + treatment + minority + group_size, data = dfs_long)
lm3 <- lm(extraction_OA ~ lag_extraction_others_OA_mean + beliefs_OA_caleta + beliefs_OA_others + treatment + as.numeric(n_ingroup)+ group_size, data = dfs_long)
# Calculate clustered standard errors by 'participant.code'
clustered_se_lm1 <- sqrt(diag(vcovCL(lm1, cluster = ~gid.treat)))
clustered_se_lm2 <- sqrt(diag(vcovCL(lm2, cluster = ~gid.treat)))
clustered_se_lm3 <- sqrt(diag(vcovCL(lm3, cluster = ~gid.treat)))
# Export to stargazer with clustered standard errors
stargazer(lm1, lm2, lm3,
se = list(clustered_se_lm1, clustered_se_lm2, clustered_se_lm3),
type = "html",
out = paste0(path_github, "Outputs/extraction_clustered_se_n_ingroup.html"),
title = "Regression Results with Clustered Standard Errors",
dep.var.labels = "Extraction OA",
#covariate.labels = c("Beliefs Caleta", "Beliefs Others", "Treatment",
#                     "Confianza Caleta", "Confianza PM",
#                     "Conflicto Caleta", "Conflicto PM",
#                     "Lag Extraction Others Mean"),
notes = "Clustered standard errors by matching group are reported in parentheses.")
lm1 <- lm(extraction_OA ~ lag_extraction_others_OA_mean + beliefs_OA_caleta + beliefs_OA_others  + group_size, data = dfs_long)
lm2 <- lm(extraction_OA ~ lag_extraction_others_OA_mean + beliefs_OA_caleta + beliefs_OA_others  + minority + group_size, data = dfs_long)
lm3 <- lm(extraction_OA ~ lag_extraction_others_OA_mean + beliefs_OA_caleta + beliefs_OA_others  + as.numeric(n_ingroup)+ group_size, data = dfs_long)
# Calculate clustered standard errors by 'participant.code'
clustered_se_lm1 <- sqrt(diag(vcovCL(lm1, cluster = ~gid.treat)))
clustered_se_lm2 <- sqrt(diag(vcovCL(lm2, cluster = ~gid.treat)))
clustered_se_lm3 <- sqrt(diag(vcovCL(lm3, cluster = ~gid.treat)))
# Export to stargazer with clustered standard errors
stargazer(lm1, lm2, lm3,
se = list(clustered_se_lm1, clustered_se_lm2, clustered_se_lm3),
type = "html",
out = paste0(path_github, "Outputs/extraction_clustered_se_n_ingroup.html"),
title = "Regression Results with Clustered Standard Errors",
dep.var.labels = "Extraction OA",
#covariate.labels = c("Beliefs Caleta", "Beliefs Others", "Treatment",
#                     "Confianza Caleta", "Confianza PM",
#                     "Conflicto Caleta", "Conflicto PM",
#                     "Lag Extraction Others Mean"),
notes = "Clustered standard errors by matching group are reported in parentheses.")
# Run models on extraction with number of out_group participants in the area and matching group clustered s.e.
lm1 <- lm(extraction_OA ~ lag_extraction_others_OA_mean + beliefs_OA_caleta + beliefs_OA_others + treatment + group_size, data = dfs_long)
lm2 <- lm(extraction_OA ~ lag_extraction_others_OA_mean + beliefs_OA_caleta + beliefs_OA_others + treatment + minority + group_size, data = dfs_long)
lm3 <- lm(extraction_OA ~ lag_extraction_others_OA_mean + beliefs_OA_caleta + beliefs_OA_others + treatment + as.numeric(n_ingroup)+ group_size, data = dfs_long)
# Calculate clustered standard errors by 'participant.code'
clustered_se_lm1 <- sqrt(diag(vcovCL(lm1, cluster = ~gid.treat)))
clustered_se_lm2 <- sqrt(diag(vcovCL(lm2, cluster = ~gid.treat)))
clustered_se_lm3 <- sqrt(diag(vcovCL(lm3, cluster = ~gid.treat)))
# Export to stargazer with clustered standard errors
stargazer(lm1, lm2, lm3,
se = list(clustered_se_lm1, clustered_se_lm2, clustered_se_lm3),
type = "html",
out = paste0(path_github, "Outputs/extraction_clustered_se_n_ingroup.html"),
title = "Regression Results with Clustered Standard Errors",
dep.var.labels = "Extraction OA",
#covariate.labels = c("Beliefs Caleta", "Beliefs Others", "Treatment",
#                     "Confianza Caleta", "Confianza PM",
#                     "Conflicto Caleta", "Conflicto PM",
#                     "Lag Extraction Others Mean"),
notes = "Clustered standard errors by matching group are reported in parentheses.")
# Run models on extraction with number of out_group participants in the area and matching group clustered s.e.
lm1 <- lm(extraction_OA ~ lag_extraction_others_OA_mean + beliefs_OA_caleta + beliefs_OA_others + treatment + n_identities, data = dfs_long)
lm2 <- lm(extraction_OA ~ lag_extraction_others_OA_mean + beliefs_OA_caleta + beliefs_OA_others + treatment + minority + n_identities, data = dfs_long)
lm3 <- lm(extraction_OA ~ lag_extraction_others_OA_mean + beliefs_OA_caleta + beliefs_OA_others + treatment + as.numeric(n_ingroup)+ n_identities, data = dfs_long)
# Calculate clustered standard errors by 'participant.code'
clustered_se_lm1 <- sqrt(diag(vcovCL(lm1, cluster = ~gid.treat)))
clustered_se_lm2 <- sqrt(diag(vcovCL(lm2, cluster = ~gid.treat)))
clustered_se_lm3 <- sqrt(diag(vcovCL(lm3, cluster = ~gid.treat)))
# Export to stargazer with clustered standard errors
stargazer(lm1, lm2, lm3,
se = list(clustered_se_lm1, clustered_se_lm2, clustered_se_lm3),
type = "html",
out = paste0(path_github, "Outputs/extraction_clustered_se_n_ingroup.html"),
title = "Regression Results with Clustered Standard Errors",
dep.var.labels = "Extraction OA",
#covariate.labels = c("Beliefs Caleta", "Beliefs Others", "Treatment",
#                     "Confianza Caleta", "Confianza PM",
#                     "Conflicto Caleta", "Conflicto PM",
#                     "Lag Extraction Others Mean"),
notes = "Clustered standard errors by matching group are reported in parentheses.")
# Run models on extraction with number of out_group participants in the area and matching group clustered s.e.
lm1 <- lm(extraction_OA ~ lag_extraction_others_OA_mean + beliefs_OA_caleta + beliefs_OA_others + treatment + n_identities, data = dfs_long)
lm2 <- lm(extraction_OA ~ lag_extraction_others_OA_mean + beliefs_OA_caleta + beliefs_OA_others + treatment + minority + n_identities, data = dfs_long)
lm3 <- lm(extraction_OA ~ lag_extraction_others_OA_mean + beliefs_OA_caleta + beliefs_OA_others*as.numeric( minority) + treatment + as.numeric(n_ingroup)+ n_identities, data = dfs_long)
clustered_se_lm1 <- sqrt(diag(vcovCL(lm1, cluster = ~gid.treat)))
clustered_se_lm2 <- sqrt(diag(vcovCL(lm2, cluster = ~gid.treat)))
clustered_se_lm3 <- sqrt(diag(vcovCL(lm3, cluster = ~gid.treat)))
# Export to stargazer with clustered standard errors
stargazer(lm1, lm2, lm3,
se = list(clustered_se_lm1, clustered_se_lm2, clustered_se_lm3),
type = "html",
out = paste0(path_github, "Outputs/extraction_clustered_se_n_ingroup.html"),
title = "Regression Results with Clustered Standard Errors",
dep.var.labels = "Extraction OA",
#covariate.labels = c("Beliefs Caleta", "Beliefs Others", "Treatment",
#                     "Confianza Caleta", "Confianza PM",
#                     "Conflicto Caleta", "Conflicto PM",
#                     "Lag Extraction Others Mean"),
notes = "Clustered standard errors by matching group are reported in parentheses.")
# Run models on extraction with number of out_group participants in the area and matching group clustered s.e.
lm1 <- lm(extraction_OA ~ lag_extraction_others_OA_mean + beliefs_OA_caleta + beliefs_OA_others + treatment + n_identities, data = dfs_long)
lm2 <- lm(extraction_OA ~ lag_extraction_others_OA_mean + beliefs_OA_caleta + beliefs_OA_others + treatment + minority + n_identities, data = dfs_long)
lm3 <- lm(extraction_OA ~ lag_extraction_others_OA_mean + beliefs_OA_caleta + beliefs_OA_others*as.numeric( minority) + treatment + as.numeric(n_ingroup)+ n_identities, data = dfs_long)
lm4 <- lm(extraction_OA ~ lag_extraction_others_OA_mean + beliefs_OA_caleta*as.numeric( minority)  + beliefs_OA_others + treatment + as.numeric(n_ingroup)+ n_identities, data = dfs_long)
# Calculate clustered standard errors by 'participant.code'
clustered_se_lm1 <- sqrt(diag(vcovCL(lm1, cluster = ~gid.treat)))
clustered_se_lm2 <- sqrt(diag(vcovCL(lm2, cluster = ~gid.treat)))
clustered_se_lm3 <- sqrt(diag(vcovCL(lm3, cluster = ~gid.treat)))
clustered_se_lm4 <- sqrt(diag(vcovCL(lm4, cluster = ~gid.treat)))
# Export to stargazer with clustered standard errors
stargazer(lm1, lm2, lm3,
se = list(clustered_se_lm1, clustered_se_lm2, clustered_se_lm3, clustered_se_lm4),
type = "html",
out = paste0(path_github, "Outputs/extraction_clustered_se_n_ingroup.html"),
title = "Regression Results with Clustered Standard Errors",
dep.var.labels = "Extraction OA",
#covariate.labels = c("Beliefs Caleta", "Beliefs Others", "Treatment",
#                     "Confianza Caleta", "Confianza PM",
#                     "Conflicto Caleta", "Conflicto PM",
#                     "Lag Extraction Others Mean"),
notes = "Clustered standard errors by matching group are reported in parentheses.")
stargazer(lm1, lm2, lm3, lm4
se = list(clustered_se_lm1, clustered_se_lm2, clustered_se_lm3, clustered_se_lm4),
stargazer(lm1, lm2, lm3, lm4,
se = list(clustered_se_lm1, clustered_se_lm2, clustered_se_lm3, clustered_se_lm4),
type = "html",
out = paste0(path_github, "Outputs/extraction_clustered_se_n_ingroup.html"),
title = "Regression Results with Clustered Standard Errors",
dep.var.labels = "Extraction OA",
#covariate.labels = c("Beliefs Caleta", "Beliefs Others", "Treatment",
#                     "Confianza Caleta", "Confianza PM",
#                     "Conflicto Caleta", "Conflicto PM",
#                     "Lag Extraction Others Mean"),
notes = "Clustered standard errors by matching group are reported in parentheses.")
# Get predicted interaction values
interaction_data <- ggpredict(lm3, terms = c("beliefs_OA_others", "minority"))
install.packages("ggeffects")
library(ggeffects)
# Get predicted interaction values
interaction_data <- ggpredict(lm3, terms = c("beliefs_OA_others", "minority"))
# Plot the interaction effect
ggplot(interaction_data, aes(x = x, y = predicted, color = group)) +
geom_line(size = 1) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.2) +
labs(
title = "Interaction Effect: beliefs_OA_others * minority",
x = "Beliefs about Others in OA",
y = "Predicted Extraction in OA",
color = "Minority",
fill = "Minority"
) +
theme_minimal()
summary(lm3)
lm1 <- lm(extraction_OA ~ lag_extraction_others_OA_mean + beliefs_OA_caleta + beliefs_OA_others + treatment + n_identities, data = dfs_long)
lm2 <- lm(extraction_OA ~ lag_extraction_others_OA_mean + beliefs_OA_caleta + beliefs_OA_others + treatment + minority + n_identities, data = dfs_long)
lm3 <- lm(extraction_OA ~ lag_extraction_others_OA_mean + beliefs_OA_caleta + beliefs_OA_others*as.numeric( minority) + treatment + n_identities, data = dfs_long)
lm4 <- lm(extraction_OA ~ lag_extraction_others_OA_mean + beliefs_OA_caleta*as.numeric( minority)  + beliefs_OA_others + treatment + n_identities, data = dfs_long)
# Calculate clustered standard errors by 'participant.code'
clustered_se_lm1 <- sqrt(diag(vcovCL(lm1, cluster = ~gid.treat)))
clustered_se_lm2 <- sqrt(diag(vcovCL(lm2, cluster = ~gid.treat)))
clustered_se_lm3 <- sqrt(diag(vcovCL(lm3, cluster = ~gid.treat)))
clustered_se_lm4 <- sqrt(diag(vcovCL(lm4, cluster = ~gid.treat)))
# Export to stargazer with clustered standard errors
stargazer(lm1, lm2, lm3, lm4,
se = list(clustered_se_lm1, clustered_se_lm2, clustered_se_lm3, clustered_se_lm4),
type = "html",
out = paste0(path_github, "Outputs/extraction_clustered_se_n_ingroup.html"),
title = "Regression Results with Clustered Standard Errors",
dep.var.labels = "Extraction OA",
#covariate.labels = c("Beliefs Caleta", "Beliefs Others", "Treatment",
#                     "Confianza Caleta", "Confianza PM",
#                     "Conflicto Caleta", "Conflicto PM",
#                     "Lag Extraction Others Mean"),
notes = "Clustered standard errors by matching group are reported in parentheses.")
# Install necessary package
install.packages("ggeffects")
library(ggeffects)
# Get predicted interaction values
interaction_data <- ggpredict(lm3, terms = c("beliefs_OA_others", "minority"))
# Plot the interaction effect
ggplot(interaction_data, aes(x = x, y = predicted, color = group)) +
geom_line(size = 1) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.2)
labs(
title = "Interaction Effect: beliefs_OA_others * minority",
x = "Beliefs about Others in OA",
y = "Predicted Extraction in OA",
color = "Minority",
fill = "Minority"
) +
theme_minimal()
install.packages("ggeffects")
ggplot(interaction_data, aes(x = x, y = predicted, color = group)) +
geom_line(size = 1) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.2)
labs(
title = "Interaction Effect: beliefs_OA_others * minority",
x = "Beliefs about Others in OA",
y = "Predicted Extraction in OA",
color = "Minority",
fill = "Minority"
) +
theme_minimal()
# Get predicted interaction values
interaction_data <- ggpredict(lm3, terms = c("beliefs_OA_others", "minority"))
# Plot the interaction effect
ggplot(interaction_data, aes(x = x, y = predicted, color = group)) +
geom_line(size = 1) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.2)
labs(
title = "Interaction Effect: beliefs_OA_others * minority",
x = "Beliefs about Others in OA",
y = "Predicted Extraction in OA",
color = "Minority",
fill = "Minority"
) +
theme_minimal()
# Run models on extraction with number of out_group participants in the area and matching group clustered s.e.
lm1 <- lm(extraction_OA ~ lag_extraction_others_OA_mean + beliefs_OA_caleta + beliefs_OA_others + treatment + n_identities, data = dfs_long)
lm2 <- lm(extraction_OA ~ lag_extraction_others_OA_mean + beliefs_OA_caleta + beliefs_OA_others + treatment + minority + n_identities, data = dfs_long)
lm3 <- lm(extraction_OA ~ lag_extraction_others_OA_mean + beliefs_OA_caleta + beliefs_OA_others*as.numeric( minority) + treatment + n_identities, data = dfs_long)
lm4 <- lm(extraction_OA ~ lag_extraction_others_OA_mean + beliefs_OA_caleta*as.numeric( minority)  + beliefs_OA_others + treatment + n_identities, data = dfs_long)
# Calculate clustered standard errors by 'participant.code'
clustered_se_lm1 <- sqrt(diag(vcovCL(lm1, cluster = ~gid.treat)))
clustered_se_lm2 <- sqrt(diag(vcovCL(lm2, cluster = ~gid.treat)))
clustered_se_lm3 <- sqrt(diag(vcovCL(lm3, cluster = ~gid.treat)))
clustered_se_lm4 <- sqrt(diag(vcovCL(lm4, cluster = ~gid.treat)))
#
stargazer(lm1, lm2, lm3, lm4,
se = list(clustered_se_lm1, clustered_se_lm2, clustered_se_lm3, clustered_se_lm4),
type = "html",
out = paste0(path_github, "Outputs/extraction_clustered_se_n_ingroup.html"),
title = "Regression Results with Clustered Standard Errors",
dep.var.labels = "Extraction OA",
#covariate.labels = c("Beliefs Caleta", "Beliefs Others", "Treatment",
#                     "Confianza Caleta", "Confianza PM",
#                     "Conflicto Caleta", "Conflicto PM",
#                     "Lag Extraction Others Mean"),
notes = "Clustered standard errors by matching group are reported in parentheses.")
# Run models on extraction with number of out_group participants in the area and matching group clustered s.e.
lm1 <- lm(extraction_OA ~ lag_extraction_others_OA_mean + beliefs_OA_caleta + beliefs_OA_others + treatment + n_identities, data = dfs_long)
lm2 <- lm(extraction_OA ~ lag_extraction_others_OA_mean + beliefs_OA_caleta + beliefs_OA_others + treatment + minority + n_identities, data = dfs_long)
lm3 <- lm(extraction_OA ~ lag_extraction_others_OA_mean + beliefs_OA_caleta + beliefs_OA_others*minority + treatment + n_identities, data = dfs_long)
lm4 <- lm(extraction_OA ~ lag_extraction_others_OA_mean + beliefs_OA_caleta*minority  + beliefs_OA_others + treatment + n_identities, data = dfs_long)
# Calculate clustered standard errors by 'participant.code'
clustered_se_lm1 <- sqrt(diag(vcovCL(lm1, cluster = ~gid.treat)))
clustered_se_lm2 <- sqrt(diag(vcovCL(lm2, cluster = ~gid.treat)))
clustered_se_lm3 <- sqrt(diag(vcovCL(lm3, cluster = ~gid.treat)))
clustered_se_lm4 <- sqrt(diag(vcovCL(lm4, cluster = ~gid.treat)))
# Export to stargazer with clustered standard errors
stargazer(lm1, lm2, lm3, lm4,
se = list(clustered_se_lm1, clustered_se_lm2, clustered_se_lm3, clustered_se_lm4),
type = "html",
out = paste0(path_github, "Outputs/extraction_clustered_se_n_ingroup.html"),
title = "Regression Results with Clustered Standard Errors",
dep.var.labels = "Extraction OA",
#covariate.labels = c("Beliefs Caleta", "Beliefs Others", "Treatment",
#                     "Confianza Caleta", "Confianza PM",
#                     "Conflicto Caleta", "Conflicto PM",
#                     "Lag Extraction Others Mean"),
notes = "Clustered standard errors by matching group are reported in parentheses.")
# Install necessary package
install.packages("ggeffects")
library(ggeffects)
# Get predicted interaction values
interaction_data <- ggpredict(lm3, terms = c("beliefs_OA_others", "minority"))
# Plot the interaction effect
ggplot(interaction_data, aes(x = x, y = predicted, color = group)) +
geom_line(size = 1) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.2)
labs(
title = "Interaction Effect: beliefs_OA_others * minority",
x = "Beliefs about Others in OA",
y = "Predicted Extraction in OA",
color = "Minority",
fill = "Minority"
) +
theme_minimal()
ggplot(interaction_data, aes(x = x, y = predicted, color = group)) +
geom_line(size = 1) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.2)
labs(
title = "Interaction Effect: beliefs_OA_others * minority",
x = "Beliefs about Others in OA",
y = "Predicted Extraction in OA",
color = "Minority",
fill = "Minority"
) +
theme_minimal()
interaction_data <- ggpredict(lm3, terms = c("beliefs_OA_others", "minority"))
# Plot the interaction using ggplot2
ggplot(interaction_data, aes(x = x, y = predicted, color = group)) +
geom_line(size = 1) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.2) +
labs(
title = "Interaction Effect: beliefs_OA_others * minority",
x = "Beliefs about Others in OA",
y = "Predicted Extraction in OA",
color = "Minority",
fill = "Minority"
) +
theme_minimal()
##### Regressions with imputed beliefs
lm1 <- lm(extraction_OA ~ beliefs_OA_caleta + beliefs_OA_others + treatment, data = dfs_long)
lm2 <- lm(extraction_OA ~ lag_beliefs_ingroup_OA_updated + lag_beliefs_outgroup_OA_updated +
treatment, data = dfs_long)
lm3 <- lm(extraction_OA ~ lag_extraction_others_OA_mean + beliefs_OA_caleta + beliefs_OA_others +
treatment, data = dfs_long)
lm4 <- lm(extraction_OA ~ lag_extraction_others_OA_mean +
lag_beliefs_ingroup_OA_updated + lag_beliefs_outgroup_OA_updated+
treatment, data = dfs_long)
# Calculate clustered standard errors by 'participant.code'
clustered_se_lm1 <- sqrt(diag(vcovCL(lm1, cluster = ~gid.treat)))
clustered_se_lm2 <- sqrt(diag(vcovCL(lm2, cluster = ~gid.treat)))
clustered_se_lm3 <- sqrt(diag(vcovCL(lm3, cluster = ~gid.treat)))
clustered_se_lm4 <- sqrt(diag(vcovCL(lm4, cluster = ~gid.treat)))
# Export to stargazer with clustered standard errors
stargazer(lm1, lm2, lm3, lm4,
se = list(clustered_se_lm1, clustered_se_lm2, clustered_se_lm3, clustered_se_lm4),
type = "html",
out = paste0(path_github, "Outputs/extraction_imput_beliefs_clustered_se.html"),
title = "Regression Results with Clustered Standard Errors",
dep.var.labels = "Extraction OA",
#covariate.labels = c("Beliefs Caleta", "Beliefs Others", "Treatment",
#                     "Confianza Caleta", "Confianza PM",
#                     "Conflicto Caleta", "Conflicto PM",
#                     "Lag Extraction Others Mean"),
notes = "Clustered standard errors by participant code are reported in parentheses.")
names(dfs_long)
dfs_long <- dfs_long %>%
mutate(
# For T1 - Caleta
imputed_belief_T1_caleta = if_else(
round == 1,
beliefsT1inicial.1.player.T1_belief_caleta_en_libre_ini,
beliefsT1inicial.1.player.T1_belief_caleta_en_libre_ini +
((beliefsT1final.1.player.T1_belief_caleta_en_libre_fin -
beliefsT1inicial.1.player.T1_belief_caleta_en_libre_ini) / 8) * round
),
# For T1 - PM
imputed_belief_T1_pm = if_else(
round == 1,
beliefsT1inicial.1.player.T1_belief_pm_en_libre_ini,
beliefsT1inicial.1.player.T1_belief_pm_en_libre_ini +
((beliefsT1final.1.player.T1_belief_pm_en_libre_fin -
beliefsT1inicial.1.player.T1_belief_pm_en_libre_ini) / 8) * round
),
# For T2 - Caleta Conocida Mean
imputed_belief_T2_caleta_conocida_mean = if_else(
round == 1,
beliefsT2inicial.1.player.T2_belief_caleta_conocida_mean_ini,
beliefsT2inicial.1.player.T2_belief_caleta_conocida_mean_ini +
((beliefsT2final.1.player.T2_belief_caleta_conocida_mean_fin -
beliefsT2inicial.1.player.T2_belief_caleta_conocida_mean_ini) / 8) * round
),
# For T2 - Caleta
imputed_belief_T2_caleta = if_else(
round == 1,
beliefsT2inicial.1.player.T2_belief_caleta_ini,
beliefsT2inicial.1.player.T2_belief_caleta_ini +
((beliefsT2final.1.player.T2_belief_caleta_fin -
beliefsT2inicial.1.player.T2_belief_caleta_ini) / 8) * round
)
)
dfs_long %>%
select(
participant.code, round,
beliefsT1inicial.1.player.T1_belief_caleta_en_libre_ini,
beliefsT1final.1.player.T1_belief_caleta_en_libre_fin,
imputed_belief_T1_caleta,
beliefsT1inicial.1.player.T1_belief_pm_en_libre_ini,
beliefsT1final.1.player.T1_belief_pm_en_libre_fin,
imputed_belief_T1_pm,
beliefsT2inicial.1.player.T2_belief_caleta_conocida_mean_ini,
beliefsT2final.1.player.T2_belief_caleta_conocida_mean_fin,
imputed_belief_T2_caleta_conocida_mean,
beliefsT2inicial.1.player.T2_belief_caleta_ini,
beliefsT2final.1.player.T2_belief_caleta_fin,
imputed_belief_T2_caleta
) %>%
View()
# Create new variables based on the treatment
dfs_long <- dfs_long %>%
mutate(
# Impute beliefs for OA Caleta
imputed_beliefs_OA_caleta = if_else(
treatment == "T1",
imputed_belief_T1_caleta,
imputed_belief_T2_caleta
),
# Impute beliefs for OA Others
imputed_beliefs_OA_others = if_else(
treatment == "T1",
imputed_belief_T1_pm,
imputed_belief_T2_caleta_conocida_mean
)
)
# View the updated data frame with the new variables
dfs_long %>%
select(
participant.code, round, treatment,
imputed_beliefs_OA_caleta, imputed_beliefs_OA_others,
imputed_belief_T1_caleta, imputed_belief_T2_caleta,
imputed_belief_T1_pm, imputed_belief_T2_caleta_conocida_mean
) %>%
View()
### Robustness checks on the number/ minority status in the round
# Run models on extraction with number of out_group participants in the area and matching group clustered s.e.
lm1 <- lm(extraction_OA ~ lag_extraction_others_OA_mean +  imputed_beliefs_OA_caleta, imputed_beliefs_OA_others, + treatment + n_identities, data = dfs_long)
lm1 <- lm(extraction_OA ~ lag_extraction_others_OA_mean +  imputed_beliefs_OA_caleta + imputed_beliefs_OA_others + treatment + n_identities, data = dfs_long)
lm2 <- lm(extraction_OA ~ lag_extraction_others_OA_mean +  imputed_beliefs_OA_caleta + imputed_beliefs_OA_others + treatment + minority + n_identities, data = dfs_long)
lm3 <- lm(extraction_OA ~ lag_extraction_others_OA_mean +  imputed_beliefs_OA_caleta + imputed_beliefs_OA_others*minority + treatment + n_identities, data = dfs_long)
lm4 <- lm(extraction_OA ~ lag_extraction_others_OA_mean +  imputed_beliefs_OA_caleta*minority, imputed_beliefs_OA_others, + treatment + n_identities, data = dfs_long)
lm1 <- lm(extraction_OA ~ lag_extraction_others_OA_mean +  imputed_beliefs_OA_caleta + imputed_beliefs_OA_others + treatment + n_identities, data = dfs_long)
lm2 <- lm(extraction_OA ~ lag_extraction_others_OA_mean +  imputed_beliefs_OA_caleta + imputed_beliefs_OA_others + treatment + minority + n_identities, data = dfs_long)
lm3 <- lm(extraction_OA ~ lag_extraction_others_OA_mean +  imputed_beliefs_OA_caleta + imputed_beliefs_OA_others*minority + treatment + n_identities, data = dfs_long)
lm4 <- lm(extraction_OA ~ lag_extraction_others_OA_mean +  imputed_beliefs_OA_caleta*minority + imputed_beliefs_OA_others + treatment + n_identities, data = dfs_long)
# Calculate clustered standard errors by 'participant.code'
clustered_se_lm1 <- sqrt(diag(vcovCL(lm1, cluster = ~gid.treat)))
clustered_se_lm2 <- sqrt(diag(vcovCL(lm2, cluster = ~gid.treat)))
clustered_se_lm3 <- sqrt(diag(vcovCL(lm3, cluster = ~gid.treat)))
clustered_se_lm4 <- sqrt(diag(vcovCL(lm4, cluster = ~gid.treat)))
# Export to stargazer with clustered standard errors
stargazer(lm1, lm2, lm3, lm4,
se = list(clustered_se_lm1, clustered_se_lm2, clustered_se_lm3, clustered_se_lm4),
type = "html",
out = paste0(path_github, "Outputs/extraction_imputed_beliefs_cl_se.html"),
title = "Regression Results with Clustered Standard Errors",
dep.var.labels = "Extraction OA",
#covariate.labels = c("Beliefs Caleta", "Beliefs Others", "Treatment",
#                     "Confianza Caleta", "Confianza PM",
#                     "Conflicto Caleta", "Conflicto PM",
#                     "Lag Extraction Others Mean"),
notes = "Clustered standard errors by matching group are reported in parentheses.")
interaction_data <- ggpredict(lm3, terms = c("imputed_beliefs_OA_others", "minority"))
# Plot the interaction using ggplot2
ggplot(interaction_data, aes(x = x, y = predicted, color = group)) +
geom_line(size = 1) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.2) +
labs(
title = "Interaction Effect: imputed_beliefs_OA_others * minority",
x = "Beliefs about Others in OA",
y = "Predicted Extraction in OA",
color = "Minority",
fill = "Minority"
) +
theme_minimal()
p<-ggplot(interaction_data, aes(x = x, y = predicted, color = group)) +
geom_line(size = 1) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.2) +
labs(
title = "Interaction Effect: imputed_beliefs_OA_others * minority",
x = "Beliefs about Others in OA",
y = "Predicted Extraction in OA",
color = "Minority",
fill = "Minority"
) +
theme_minimal()
ggsave( file=paste0(path_github, "Outputs/interaction_minority_beliefs.pdf") , plot = p, device = "pdf", width = 12, height = 6)
