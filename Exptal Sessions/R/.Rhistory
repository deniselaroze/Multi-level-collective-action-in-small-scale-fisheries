#path_datos <- "C:/Users/DCCS2/Dropbox/Sitios web/Datos Laboratorio/Videos/"
path_github <- "C:/Users/DCCS2/Documents/GitHub/Pensions-Website-Design/"
df<-read.csv(paste0(path_datos,"dataset_con_columnas.csv"))
View(df)
df$Profile_Video<-ifelse(df$sitio=="VideoPerfil", "Profile_Video", "Other")
View(df)
df<-read.csv2(paste0(path_datos,"dataset_con_columnas.csv"))
###############################
##### Data Management #########
###############################
df$Profile_Video<-ifelse(df$sitio=="VideoPerfil", "Profile_Video", "Other")
df$t_perfil <- factor(df$t_perfil, levels = c("producto", "perfil"))
#####################
library(stargazer)
lm1<-lm(ValenceX2 ~ t_perfil + t_video + Profile_Video , data = df)
lm2<-lm(ArousalX2 ~ t_perfil + t_video + Profile_Video , data = df)
lm3<-lm(Happy2 ~ t_perfil + t_video + Profile_Video , data = df)
lm4<-lm(Sad2 ~ t_perfil + t_video + Profile_Video , data = df)
lm5<-lm(Angry2 ~ t_perfil + t_video + Profile_Video , data = df)
lm6<-lm(Surprised2 ~ t_perfil + t_video + Profile_Video , data = df)
lm7<-lm(Scared2 ~ t_perfil + t_video + Profile_Video , data = df)
lm8<-lm(Disgusted2 ~ t_perfil + t_video + Profile_Video , data = df)
#stargazer(lm1, lm2, lm3, lm4, lm5, lm6, lm7, lm8)
stargazer(lm1, lm2, lm3, lm4, lm5, lm6, lm7, lm8, out=paste0(path_datos,"emotions.html"), type="html")
rm(list=ls())
path_github <-"C:/Users/DCCS2/Documents/GitHub/Multi-level-collective-action-in-small-scale-fisheries/Exptal Sessions/R/"
path_datos<-"C:/Users/DCCS2/Dropbox/CICS/Experiments/Islitas/Data/Sessions"
setwd(path_github)
load(paste0(path_datos, "/Datos_islitas.Rdata"))
View(df)
# T1
rounds <- 1:8  # Sequence from 1 to 10
treats <- c("T1")  # Time periods T1 and T2
vars <- c("amerb", "libre")  # Extraction types
# Generate the list of variables using expand.grid to generate all combinations
combinations <- expand.grid(treats, rounds, vars)
# Create the final object with formatted strings
variable_names1 <- paste0(
"", combinations$Var1, "juegoalgas.", combinations$Var2,
".player.", combinations$Var1, "_extraccion_", combinations$Var3
)
# T2"
rounds <- 1:8  # Sequence from 1 to 10
treats <- c("T2")  # Time periods T1 and T2
vars <- c("amerb", "metat")  # Extraction types
# Generate the list of variables using expand.grid to generate all combinations
combinations <- expand.grid(treats, rounds, vars)
# Create the final object with formatted strings
variable_names2 <- paste0(
"", combinations$Var1, "juegoalgas.", combinations$Var2,
".player.", combinations$Var1, "_extraccion_", combinations$Var3
)
# Print or use the variable_names
variable_names<-c(variable_names1, variable_names2, "gid.amerb", "gid.treat")
##### Treatment variables subset
dfs<-(df[, variable_names])
View(dfs)
#### Long data frame all observations
dfs_long <- dfs %>%
pivot_longer(
cols = starts_with("T"),   # All columns starting with "T" (T1 and T2 variables)
names_to = c("treatment", "round", "area"),  # Split the names into three parts
names_pattern = "(T\\d)juegoalgas\\.(\\d+)\\.player\\..+_extraccion_(.+)",  # Regex to extract treatment, round, and variable
values_to = "extraction"   # Name of the column for values
) %>%
mutate(round = as.integer(round))  # Ensure round is numeric
library(dplyr)
#### Long data frame all observations
dfs_long <- dfs %>%
pivot_longer(
cols = starts_with("T"),   # All columns starting with "T" (T1 and T2 variables)
names_to = c("treatment", "round", "area"),  # Split the names into three parts
names_pattern = "(T\\d)juegoalgas\\.(\\d+)\\.player\\..+_extraccion_(.+)",  # Regex to extract treatment, round, and variable
values_to = "extraction"   # Name of the column for values
) %>%
mutate(round = as.integer(round))  # Ensure round is numeric
library(foreign)
library(dplyr)
library(stringr)
library(ggplot2)
library(gridExtra)
library(tidyr)
#### Long data frame all observations
dfs_long <- dfs %>%
pivot_longer(
cols = starts_with("T"),   # All columns starting with "T" (T1 and T2 variables)
names_to = c("treatment", "round", "area"),  # Split the names into three parts
names_pattern = "(T\\d)juegoalgas\\.(\\d+)\\.player\\..+_extraccion_(.+)",  # Regex to extract treatment, round, and variable
values_to = "extraction"   # Name of the column for values
) %>%
mutate(round = as.integer(round))  # Ensure round is numeric
#
View(dfs_long)
library(stargazer)
library(MASS)
library(broom)
library(ggpubr)
library(naniar)
library(nnet)
library(lmtest)
library(sandwich)
library(lubridate)
library(dplyr)
library(tidyr)
library(xtable)
#rm(list=ls())
path_github <- "C:/Users/DCCS2/Documents/GitHub/Pensions-Website-Design/Data and analysis/Online/"
path_datos<-"C:/Users/DCCS2/Documents/GitHub/Pensions-Website-Design/Data and analysis/Online/Online Data/"
df <- readRDS(paste0(path_datos, "online_data.rds"))
df.f<-df[!is.na(df$correct_response),]
df.en <- readRDS(paste0(path_datos, "encuestas_clean.rds"))
# Ensure financial_lit_b is a factor
df$financial_lit_b <- as.factor(df$financial_lit_b)
# Define consistent column names
names <- c("Variable", "Treatment", "N")
# Summarize the data for Gender and Treatments
s1 <- df %>%
group_by(Gender, Treatments) %>%
summarise(N = length(unique(uemail)), .groups = "drop")
names(s1) <- names
# Perform Chi-squared test for Gender
contingency_table <- xtabs(N ~ Variable + Treatment, data = s1)
chi.s1 <- chisq.test(contingency_table)
chi.s1
contingency_table
male_table <- contingency_table["M", , drop = FALSE]
# Perform chi-square test for males
chi_male <- chisq.test(male_table)
print(chi_male)
female_table <- contingency_table["F", , drop = FALSE]
# Perform chi-square test for males
chi_female <- chisq.test(female_table)
print(chi_female)
s2 <- df %>%
group_by(financial_lit_b, Treatments) %>%
summarise(N = length(unique(uemail)), .groups = "drop")
names(s2) <- names
s2 <- s2[-c(13:16), ]  # Remove extraneous rows
View(s2)
contingency_table <- xtabs(N ~ Variable + Treatment, data = s2)
chi.s2 <- chisq.test(contingency_table)
contingency_table
chi.s2
chi_female <- chisq.test(contingency_table["F", , drop = FALSE])
contingency_table <- xtabs(N ~ Variable + Treatment, data = s1)
male_table <- contingency_table["M", , drop = FALSE]
# Perform chi-square test for males
chi_male <- chisq.test(male_table)
print(chi_male)
female_table <- contingency_table["F", , drop = FALSE]
# Perform chi-square test for males
chi_female <- chisq.test(contingency_table["F", , drop = FALSE])
print(chi_female)
s1 <- df %>%
group_by(Gender, Treatments) %>%
summarise(N = length(unique(uemail)), .groups = "drop")
names(s1) <- names
# Perform Chi-squared test for Gender
contingency_table <- xtabs(N ~ Variable + Treatment, data = s1)
# Perform chi-square test for males
chi_male <- chisq.test(contingency_table["M", , drop = FALSE])
chi_female <- chisq.test(contingency_table["F", , drop = FALSE])
print(chi_female)
print(chi_male)
contingency_table <- xtabs(N ~ Variable + Treatment, data = s2)
# Summarize the data for Financial Literacy and Treatments
s2 <- df %>%
group_by(financial_lit_b, Treatments) %>%
summarise(N = length(unique(uemail)), .groups = "drop")
names(s2) <- names
s2 <- s2[-c(13:16), ]  # Remove extraneous rows
# Perform Chi-squared test for Financial Literacy
contingency_table <- xtabs(N ~ Variable + Treatment, data = s2)
contingency_table
chi.FL0 <- chisq.test(contingency_table["0", , drop = FALSE])
chi.FL1 <- chisq.test(contingency_table["1", , drop = FALSE])
chi.FL2 <- chisq.test(contingency_table["2", , drop = FALSE])
chi.FL0
chi.FL1
chi.FL2
s3 <- df %>%
group_by(educ_eng, Treatments) %>%
summarise(N = length(unique(uemail)), .groups = "drop")
names(s3) <- names
# Perform Chi-squared test for Education
contingency_table <- xtabs(N ~ Variable + Treatment, data = s3)
chi.s3 <- chisq.test(contingency_table)
chi.s3
contingency_table
contingency_table <- xtabs(N ~ Variable + Treatment, data = s3)
chi.pg <- chisq.test(contingency_table["Post-graduate degree", , drop = FALSE])
chi.hs <- chisq.test(contingency_table["Primary or high-school degree", , drop = FALSE])
chi.ug <- chisq.test(contingency_table["University degree", , drop = FALSE])
chi.pg
chi.hs
chi.ug
s4 <- df %>%
group_by(private_health, Treatments) %>%
summarise(N = length(unique(uemail)), .groups = "drop")
names(s4) <- names
# Perform Chi-squared test for Health
contingency_table <- xtabs(N ~ Variable + Treatment, data = s4)
chi.s4 <- chisq.test(contingency_table)
contingency_table
### Balance summary statistics full sample
# Ensure financial_lit_b is a factor
df$financial_lit_b <- as.factor(df$financial_lit_b)
# Define consistent column names
names <- c("Variable", "Treatment", "N")
# Summarize the data for Gender and Treatments
s1 <- df %>%
group_by(Gender, Treatments) %>%
summarise(N = length(unique(uemail)), .groups = "drop")
names(s1) <- names
# Perform Chi-squared test for Gender
contingency_table <- xtabs(N ~ Variable + Treatment, data = s1)
# Perform chi-square test for males
chi_male <- chisq.test(contingency_table["M", , drop = FALSE])
chi_female <- chisq.test(contingency_table["F", , drop = FALSE])
# Summarize the data for Financial Literacy and Treatments
s2 <- df %>%
group_by(financial_lit_b, Treatments) %>%
summarise(N = length(unique(uemail)), .groups = "drop")
names(s2) <- names
s2 <- s2[-c(13:16), ]  # Remove extraneous rows
# Perform Chi-squared test for Financial Literacy
contingency_table <- xtabs(N ~ Variable + Treatment, data = s2)
chi.FL0 <- chisq.test(contingency_table["0", , drop = FALSE])
chi.FL1 <- chisq.test(contingency_table["1", , drop = FALSE])
chi.FL2 <- chisq.test(contingency_table["2", , drop = FALSE])
# Summarize the data for Education and Treatments
s3 <- df %>%
group_by(educ_eng, Treatments) %>%
summarise(N = length(unique(uemail)), .groups = "drop")
names(s3) <- names
# Perform Chi-squared test for Education
contingency_table <- xtabs(N ~ Variable + Treatment, data = s3)
chi.pg <- chisq.test(contingency_table["Post-graduate degree", , drop = FALSE])
chi.hs <- chisq.test(contingency_table["Primary or high-school degree", , drop = FALSE])
chi.ug <- chisq.test(contingency_table["University degree", , drop = FALSE])
# Summarize the data for Health and Treatments
s4 <- df %>%
group_by(private_health, Treatments) %>%
summarise(N = length(unique(uemail)), .groups = "drop")
names(s4) <- names
# Perform Chi-squared test for Health
contingency_table <- xtabs(N ~ Variable + Treatment, data = s4)
chi.pubh <- chisq.test(contingency_table["Public Health or other", , drop = FALSE])
chi.privh <- chisq.test(contingency_table["Public Health or other", , drop = FALSE])
# Combine summaries into a single table
tbl <- bind_rows(s1, s2, s3, s4)
# Pivot table to wide format for summary
tbl_wide <- tbl %>%
pivot_wider(names_from = Treatment, values_from = N) %>%
mutate(Total = rowSums(across(where(is.numeric)), na.rm = TRUE))
# Add percentages for each Treatment group
tbl_wide <- tbl_wide %>%
mutate(
`% Baseline` = round(Baseline / Total, 4) * 100,
`% Profile` = round(Perfil / Total, 4) * 100,
`% Video` = round(Video / Total, 4) * 100,
`% Profile and Video` = round(VideoPerfil / Total, 4) * 100
)
# Summarize data for Age (mean and SD)
s5 <- df %>%
group_by(Treatments) %>%
summarise(
Age_mean = round(mean(Age, na.rm = TRUE), 2),
Age_sd = round(sd(Age, na.rm = TRUE), 2),
.groups = "drop"
) %>%
pivot_longer(cols = c(Age_mean, Age_sd), names_to = "Variable", values_to = "Value") %>%
pivot_wider(names_from = Treatments, values_from = Value)
# Perform ANOVA for Age across Treatments
anova_result <- aov(Age ~ Treatments, data = df)
anova_summary <- summary(anova_result)
print(anova_summary)
p_value_anova <- anova_summary[[1]]$`Pr(>F)`[1]
# Add ANOVA p-value to Age summary
s5$p_value <- ifelse(s5$Variable == "Age_mean", round(p_value_anova, 4), NA)
# Combine Age summary with previous table
tbl_final <- bind_rows(tbl_wide, s5)
# Add variable names to the table
tbl_final$Variable <- c(
"Female", "Male", "Low Fin. Lit.", "Mid Fin. Lit.", "High Fin. Lit.",
"Post-graduate degree", "Primary or high-school degree", "University degree",
"Public Health or other", "Private healthcare", "Age (mean)", "Age (sd)"
)
# Compute p-values for all variables
p_values <- c(
chi_male$p.value, chi_female$p.value, chi.FL0$p.value, chi.FL1$p.value, chi.FL2$p.value,
chi.FL0$p.value, chi.pg$p.value, chi.hs$p.value, chi.ug$p.value, chi.pubh$p.value,  chi.priv$p.value,
s5$p_value
# NA for Age SD
)
# Compute p-values for all variables
p_values <- c(
chi_male$p.value, chi_female$p.value, chi.FL0$p.value, chi.FL1$p.value, chi.FL2$p.value,
chi.FL0$p.value, chi.pg$p.value, chi.hs$p.value, chi.ug$p.value, chi.pubh$p.value,  chi.privh$p.value,
s5$p_value
# NA for Age SD
)
tbl_final$`P-value` <- round(p_values, 4)
### Balance summary statistics full sample
# Ensure financial_lit_b is a factor
df$financial_lit_b <- as.factor(df$financial_lit_b)
# Define consistent column names
names <- c("Variable", "Treatment", "N")
# Summarize the data for Gender and Treatments
s1 <- df %>%
group_by(Gender, Treatments) %>%
summarise(N = length(unique(uemail)), .groups = "drop")
names(s1) <- names
# Perform Chi-squared test for Gender
contingency_table <- xtabs(N ~ Variable + Treatment, data = s1)
# Perform chi-square test for males
chi_male <- chisq.test(contingency_table["M", , drop = FALSE])
chi_female <- chisq.test(contingency_table["F", , drop = FALSE])
# Summarize the data for Financial Literacy and Treatments
s2 <- df %>%
group_by(financial_lit_b, Treatments) %>%
summarise(N = length(unique(uemail)), .groups = "drop")
names(s2) <- names
s2 <- s2[-c(13:16), ]  # Remove extraneous rows
# Perform Chi-squared test for Financial Literacy
contingency_table <- xtabs(N ~ Variable + Treatment, data = s2)
chi.FL0 <- chisq.test(contingency_table["0", , drop = FALSE])
chi.FL1 <- chisq.test(contingency_table["1", , drop = FALSE])
chi.FL2 <- chisq.test(contingency_table["2", , drop = FALSE])
# Summarize the data for Education and Treatments
s3 <- df %>%
group_by(educ_eng, Treatments) %>%
summarise(N = length(unique(uemail)), .groups = "drop")
names(s3) <- names
# Perform Chi-squared test for Education
contingency_table <- xtabs(N ~ Variable + Treatment, data = s3)
chi.pg <- chisq.test(contingency_table["Post-graduate degree", , drop = FALSE])
chi.hs <- chisq.test(contingency_table["Primary or high-school degree", , drop = FALSE])
chi.ug <- chisq.test(contingency_table["University degree", , drop = FALSE])
# Summarize the data for Health and Treatments
s4 <- df %>%
group_by(private_health, Treatments) %>%
summarise(N = length(unique(uemail)), .groups = "drop")
names(s4) <- names
# Perform Chi-squared test for Health
contingency_table <- xtabs(N ~ Variable + Treatment, data = s4)
chi.pubh <- chisq.test(contingency_table["Public Health or other", , drop = FALSE])
chi.privh <- chisq.test(contingency_table["Private healthcare", , drop = FALSE])
# Combine summaries into a single table
tbl <- bind_rows(s1, s2, s3, s4)
# Pivot table to wide format for summary
tbl_wide <- tbl %>%
pivot_wider(names_from = Treatment, values_from = N) %>%
mutate(Total = rowSums(across(where(is.numeric)), na.rm = TRUE))
# Add percentages for each Treatment group
tbl_wide <- tbl_wide %>%
mutate(
`% Baseline` = round(Baseline / Total, 4) * 100,
`% Profile` = round(Perfil / Total, 4) * 100,
`% Video` = round(Video / Total, 4) * 100,
`% Profile and Video` = round(VideoPerfil / Total, 4) * 100
)
# Summarize data for Age (mean and SD)
s5 <- df %>%
group_by(Treatments) %>%
summarise(
Age_mean = round(mean(Age, na.rm = TRUE), 2),
Age_sd = round(sd(Age, na.rm = TRUE), 2),
.groups = "drop"
) %>%
pivot_longer(cols = c(Age_mean, Age_sd), names_to = "Variable", values_to = "Value") %>%
pivot_wider(names_from = Treatments, values_from = Value)
# Perform ANOVA for Age across Treatments
anova_result <- aov(Age ~ Treatments, data = df)
anova_summary <- summary(anova_result)
print(anova_summary)
p_value_anova <- anova_summary[[1]]$`Pr(>F)`[1]
# Add ANOVA p-value to Age summary
s5$p_value <- ifelse(s5$Variable == "Age_mean", round(p_value_anova, 4), NA)
# Combine Age summary with previous table
tbl_final <- bind_rows(tbl_wide, s5)
# Add variable names to the table
tbl_final$Variable <- c(
"Female", "Male", "Low Fin. Lit.", "Mid Fin. Lit.", "High Fin. Lit.",
"Post-graduate degree", "Primary or high-school degree", "University degree",
"Public Health or other", "Private healthcare", "Age (mean)", "Age (sd)"
)
# Compute p-values for all variables
p_values <- c(
chi_male$p.value, chi_female$p.value, chi.FL0$p.value, chi.FL1$p.value, chi.FL2$p.value,
chi.FL0$p.value, chi.pg$p.value, chi.hs$p.value, chi.ug$p.value, chi.pubh$p.value,  chi.privh$p.value,
s5$p_value
# NA for Age SD
)
# p_values_repeated <- c(
#   rep(p_values[1], 2),  # s1 has two rows (Female, Male)
#   rep(p_values[2], 3),  # s2 has three rows (Financial Literacy)
#   rep(p_values[3], 3),  # s3 has three rows (Education)
#   rep(p_values[4], 2),  # s4 has two rows (Health)
#   rep(p_values[5], 2)   # s5 has two rows (Age mean and Age SD)
# )
tbl_final$`P-value` <- round(p_values, 4)
nrow(tbl_final)  # Should return 12
length(p_values)
p_values
tbl_final
# Define consistent column names
names <- c("Variable", "Treatment", "N")
# Summarize the data for Gender and Treatments
s1 <- df %>%
group_by(Gender, Treatments) %>%
summarise(N = length(unique(uemail)), .groups = "drop")
names(s1) <- names
# Perform Chi-squared test for Gender
contingency_table <- xtabs(N ~ Variable + Treatment, data = s1)
# Perform chi-square test for males
chi_male <- chisq.test(contingency_table["M", , drop = FALSE])
chi_female <- chisq.test(contingency_table["F", , drop = FALSE])
# Summarize the data for Financial Literacy and Treatments
s2 <- df %>%
group_by(financial_lit_b, Treatments) %>%
summarise(N = length(unique(uemail)), .groups = "drop")
names(s2) <- names
s2 <- s2[-c(13:16), ]  # Remove extraneous rows
# Perform Chi-squared test for Financial Literacy
contingency_table <- xtabs(N ~ Variable + Treatment, data = s2)
chi.FL0 <- chisq.test(contingency_table["0", , drop = FALSE])
chi.FL1 <- chisq.test(contingency_table["1", , drop = FALSE])
chi.FL2 <- chisq.test(contingency_table["2", , drop = FALSE])
# Summarize the data for Education and Treatments
s3 <- df %>%
group_by(educ_eng, Treatments) %>%
summarise(N = length(unique(uemail)), .groups = "drop")
names(s3) <- names
# Perform Chi-squared test for Education
contingency_table <- xtabs(N ~ Variable + Treatment, data = s3)
chi.pg <- chisq.test(contingency_table["Post-graduate degree", , drop = FALSE])
chi.hs <- chisq.test(contingency_table["Primary or high-school degree", , drop = FALSE])
chi.ug <- chisq.test(contingency_table["University degree", , drop = FALSE])
# Summarize the data for Health and Treatments
s4 <- df %>%
group_by(private_health, Treatments) %>%
summarise(N = length(unique(uemail)), .groups = "drop")
names(s4) <- names
# Perform Chi-squared test for Health
contingency_table <- xtabs(N ~ Variable + Treatment, data = s4)
chi.pubh <- chisq.test(contingency_table["Public Health or other", , drop = FALSE])
chi.privh <- chisq.test(contingency_table["Private healthcare", , drop = FALSE])
# Combine summaries into a single table
tbl <- bind_rows(s1, s2, s3, s4)
# Pivot table to wide format for summary
tbl_wide <- tbl %>%
pivot_wider(names_from = Treatment, values_from = N) %>%
mutate(Total = rowSums(across(where(is.numeric)), na.rm = TRUE))
# Add percentages for each Treatment group
tbl_wide <- tbl_wide %>%
mutate(
`% Baseline` = round(Baseline / Total, 4) * 100,
`% Profile` = round(Perfil / Total, 4) * 100,
`% Video` = round(Video / Total, 4) * 100,
`% Profile and Video` = round(VideoPerfil / Total, 4) * 100
)
# Summarize data for Age (mean and SD)
s5 <- df %>%
group_by(Treatments) %>%
summarise(
Age_mean = round(mean(Age, na.rm = TRUE), 2),
Age_sd = round(sd(Age, na.rm = TRUE), 2),
.groups = "drop"
) %>%
pivot_longer(cols = c(Age_mean, Age_sd), names_to = "Variable", values_to = "Value") %>%
pivot_wider(names_from = Treatments, values_from = Value)
# Perform ANOVA for Age across Treatments
anova_result <- aov(Age ~ Treatments, data = df)
anova_summary <- summary(anova_result)
print(anova_summary)
p_value_anova <- anova_summary[[1]]$`Pr(>F)`[1]
# Add ANOVA p-value to Age summary
s5$p_value <- ifelse(s5$Variable == "Age_mean", round(p_value_anova, 4), NA)
# Combine Age summary with previous table
tbl_final <- bind_rows(tbl_wide, s5)
# Add variable names to the table
tbl_final$Variable <- c(
"Female", "Male", "Low Fin. Lit.", "Mid Fin. Lit.", "High Fin. Lit.",
"Post-graduate degree", "Primary or high-school degree", "University degree",
"Public Health or other", "Private healthcare", "Age (mean)", "Age (sd)"
)
# Compute p-values for all variables
p_values <- c(
chi_male$p.value, chi_female$p.value, chi.FL0$p.value, chi.FL1$p.value, chi.FL2$p.value,
chi.pg$p.value, chi.hs$p.value, chi.ug$p.value, chi.pubh$p.value,  chi.privh$p.value,
s5$p_value
# NA for Age SD
)
# p_values_repeated <- c(
#   rep(p_values[1], 2),  # s1 has two rows (Female, Male)
#   rep(p_values[2], 3),  # s2 has three rows (Financial Literacy)
#   rep(p_values[3], 3),  # s3 has three rows (Education)
#   rep(p_values[4], 2),  # s4 has two rows (Health)
#   rep(p_values[5], 2)   # s5 has two rows (Age mean and Age SD)
# )
tbl_final$`P-value` <- round(p_values, 4)
# Rename columns for final table
colnames(tbl_final) <- c(
"Variable", "Baseline", "Profile", "Video", "Profile and Video",
"Total", "% Baseline", "% Profile", "% Video", "% Profile and Video", "P-value"
)
# Export table to LaTeX
xt <- xtable(tbl_final)
xt
print(xt, type = "latex", file = paste0(path_github, "/Outputs/balance_numbers_online.tex"),
floating = FALSE, include.rownames = FALSE)
