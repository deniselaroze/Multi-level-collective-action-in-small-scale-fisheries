model_formula = formula_plm1, cluster_var = "gid.amerb")
boot_se_plm2 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm2, cluster_var = "gid.amerb")
boot_se_plm3 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm3, cluster_var = "gid.treat")
boot_se_plm4 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm4, cluster_var = "gid.treat")
# Extract Bootstrapped SEs
se_list_boot <- list(apply(boot_se_plm1$t, 2, sd),
apply(boot_se_plm2$t, 2, sd),
apply(boot_se_plm3$t, 2, sd),
apply(boot_se_plm4$t, 2, sd)
)
# Fit models on full dataset to get coefficient estimates
plm1 <- plm(formula_plm1, data = dfs_long, model = "pooling")
plm2 <- plm(formula_plm2, data = dfs_long, model = "pooling")
plm3 <- plm(formula_plm3, data = dfs_long, model = "pooling")
plm4 <- plm(formula_plm4, data = dfs_long, model = "pooling")
stargazer(plm1, plm2, plm3, plm4)
# Stargazer Table with Corrected Bootstrapped Standard Errors
stargazer(plm1, plm2, plm3, plm4,
se = se_list_boot,
type = "html",  # Change to "html" or "latex" if needed
title = "Random Effects Panel Models",
order = c(1, 2, 3, 4, 5, 6, 7, 12, 8, 9, 10, 11, 13 ),
#covariate.labels = c("Mean Compliance by Group TURF (t-1)", "Beliefs Compliance by Ingroup in TURF",
#                     "Mean Compliance by Group OA (t-1)",
#                     "Beliefs Compliance by Ingroup in OA", "Beliefs Compliance by Outsiders in OA",
#                     "Scenario Know Outsiders (dummy)", "Sessions with 3 Unions (Dummy)" , "Minority (Dummy)",
#                     "Female (Dummy)", "Fishing h/w",
#                     "Level of Education" ,"Held Leadership Role (Dummy)",
#                     "Constant" ),
dep.var.labels = c("Compliance Extraction Amerb", "Compliance Extraction OA"),
#column.labels = c("Model 1", "Model 2", "Model 3", "Model 4"),
star.cutoffs = c(0.1, 0.05, 0.01),
notes = paste0("Bootstrapped SEs of ", B , " samples of expt. matching groups (TURF group for M1-2, OA group M3-4)."),
notes.align = "l",
out = paste0(path_github, "Outputs/tests.html")
)
# Define model formulas
formula_plm1 <- compliance_extraction_amerb ~ compliance_lag_extraction_others_amerb_mean +
compliance_beliefs_turf_caleta +
treatment + n_identities
formula_plm2 <- compliance_extraction_amerb ~ compliance_lag_extraction_others_amerb_mean +
compliance_beliefs_turf_caleta +
treatment +  n_identities +
survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta
formula_plm3 <- compliance_extraction_OA ~ compliance_lag_extraction_others_OA_mean +
compliance_beliefs_OA_caleta + compliance_beliefs_OA_others +
treatment + minority+ n_identities+
survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta +
conflicto_OA +confianza_OA
formula_plm4 <- compliance_extraction_OA ~ compliance_lag_extraction_others_OA_mean +
compliance_beliefs_OA_caleta + compliance_beliefs_OA_others +
treatment + minority + n_identities+
survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta +
conflicto_OA + confianza_OA
# Run bootstrap with correct cluster resampling
boot_se_plm1 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm1, cluster_var = "gid.amerb")
boot_se_plm2 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm2, cluster_var = "gid.amerb")
boot_se_plm3 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm3, cluster_var = "gid.treat")
boot_se_plm4 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm4, cluster_var = "gid.treat")
# Extract Bootstrapped SEs
se_list_boot <- list(apply(boot_se_plm1$t, 2, sd),
apply(boot_se_plm2$t, 2, sd),
apply(boot_se_plm3$t, 2, sd),
apply(boot_se_plm4$t, 2, sd)
)
# Fit models on full dataset to get coefficient estimates
plm1 <- plm(formula_plm1, data = dfs_long, model = "pooling")
plm2 <- plm(formula_plm2, data = dfs_long, model = "pooling")
plm3 <- plm(formula_plm3, data = dfs_long, model = "pooling")
plm4 <- plm(formula_plm4, data = dfs_long, model = "pooling")
stargazer(plm1, plm2, plm3, plm4)
# Stargazer Table with Corrected Bootstrapped Standard Errors
stargazer(plm1, plm2, plm3, plm4,
se = se_list_boot,
type = "html",  # Change to "html" or "latex" if needed
title = "Random Effects Panel Models",
#order = c(1, 2, 3, 4, 5, 6, 7, 12, 8, 9, 10, 11, 13 ),
#covariate.labels = c("Mean Compliance by Group TURF (t-1)", "Beliefs Compliance by Ingroup in TURF",
#                     "Mean Compliance by Group OA (t-1)",
#                     "Beliefs Compliance by Ingroup in OA", "Beliefs Compliance by Outsiders in OA",
#                     "Scenario Know Outsiders (dummy)", "Sessions with 3 Unions (Dummy)" , "Minority (Dummy)",
#                     "Female (Dummy)", "Fishing h/w",
#                     "Level of Education" ,"Held Leadership Role (Dummy)",
#                     "Constant" ),
dep.var.labels = c("Compliance Extraction Amerb", "Compliance Extraction OA"),
#column.labels = c("Model 1", "Model 2", "Model 3", "Model 4"),
star.cutoffs = c(0.1, 0.05, 0.01),
notes = paste0("Bootstrapped SEs of ", B , " samples of expt. matching groups (TURF group for M1-2, OA group M3-4)."),
notes.align = "l",
out = paste0(path_github, "Outputs/tests.html")
)
# Fit models on full dataset to get coefficient estimates
plm1 <- plm(formula_plm1, data = dfs_long, model = "random")
plm2 <- plm(formula_plm2, data = dfs_long, model = "random")
plm3 <- plm(formula_plm3, data = dfs_long, model = "random")
plm4 <- plm(formula_plm4, data = dfs_long, model = "random")
stargazer(plm1, plm2, plm3, plm4)
# Stargazer Table with Corrected Bootstrapped Standard Errors
stargazer(plm1, plm2, plm3, plm4,
se = se_list_boot,
type = "html",  # Change to "html" or "latex" if needed
title = "Random Effects Panel Models",
#order = c(1, 2, 3, 4, 5, 6, 7, 12, 8, 9, 10, 11, 13 ),
#covariate.labels = c("Mean Compliance by Group TURF (t-1)", "Beliefs Compliance by Ingroup in TURF",
#                     "Mean Compliance by Group OA (t-1)",
#                     "Beliefs Compliance by Ingroup in OA", "Beliefs Compliance by Outsiders in OA",
#                     "Scenario Know Outsiders (dummy)", "Sessions with 3 Unions (Dummy)" , "Minority (Dummy)",
#                     "Female (Dummy)", "Fishing h/w",
#                     "Level of Education" ,"Held Leadership Role (Dummy)",
#                     "Constant" ),
dep.var.labels = c("Compliance Extraction Amerb", "Compliance Extraction OA"),
#column.labels = c("Model 1", "Model 2", "Model 3", "Model 4"),
star.cutoffs = c(0.1, 0.05, 0.01),
notes = paste0("Bootstrapped SEs of ", B , " samples of expt. matching groups (TURF group for M1-2, OA group M3-4)."),
notes.align = "l",
out = paste0(path_github, "Outputs/tests.html")
)
formula_plm3 <- compliance_extraction_OA ~ compliance_lag_extraction_others_OA_mean +
compliance_beliefs_OA_caleta + compliance_beliefs_OA_others +
treatment + minority+ n_identities+
formula_plm4 <- compliance_extraction_OA ~ compliance_lag_extraction_others_OA_mean +
compliance_beliefs_OA_caleta + compliance_beliefs_OA_others +
treatment + minority + n_identities+
survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta +
conflicto_OA + confianza_OA
formula_plm3 <- compliance_extraction_OA ~ compliance_lag_extraction_others_OA_mean +
compliance_beliefs_OA_caleta + compliance_beliefs_OA_others +
treatment + minority+ n_identities
formula_plm4 <- compliance_extraction_OA ~ compliance_lag_extraction_others_OA_mean +
compliance_beliefs_OA_caleta + compliance_beliefs_OA_others +
treatment + minority + n_identities+
survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta +
conflicto_OA + confianza_OA
boot_se_plm3 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm3, cluster_var = "gid.treat")
boot_se_plm4 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm4, cluster_var = "gid.treat")
# Extract Bootstrapped SEs
se_list_boot <- list(apply(boot_se_plm1$t, 2, sd),
apply(boot_se_plm2$t, 2, sd),
apply(boot_se_plm3$t, 2, sd),
apply(boot_se_plm4$t, 2, sd)
)
# Fit models on full dataset to get coefficient estimates
plm1 <- plm(formula_plm1, data = dfs_long, model = "pooling")
plm2 <- plm(formula_plm2, data = dfs_long, model = "pooling")
plm3 <- plm(formula_plm3, data = dfs_long, model = "pooling")
plm4 <- plm(formula_plm4, data = dfs_long, model = "pooling")
stargazer(plm1, plm2, plm3, plm4)
# Stargazer Table with Corrected Bootstrapped Standard Errors
stargazer(plm1, plm2, plm3, plm4,
se = se_list_boot,
type = "html",  # Change to "html" or "latex" if needed
title = "Random Effects Panel Models",
#order = c(1, 2, 3, 4, 5, 6, 7, 12, 8, 9, 10, 11, 13 ),
#covariate.labels = c("Mean Compliance by Group TURF (t-1)", "Beliefs Compliance by Ingroup in TURF",
#                     "Mean Compliance by Group OA (t-1)",
#                     "Beliefs Compliance by Ingroup in OA", "Beliefs Compliance by Outsiders in OA",
#                     "Scenario Know Outsiders (dummy)", "Sessions with 3 Unions (Dummy)" , "Minority (Dummy)",
#                     "Female (Dummy)", "Fishing h/w",
#                     "Level of Education" ,"Held Leadership Role (Dummy)",
#                     "Constant" ),
dep.var.labels = c("Compliance Extraction Amerb", "Compliance Extraction OA"),
#column.labels = c("Model 1", "Model 2", "Model 3", "Model 4"),
star.cutoffs = c(0.1, 0.05, 0.01),
notes = paste0("Bootstrapped SEs of ", B , " samples of expt. matching groups (TURF group for M1-2, OA group M3-4)."),
notes.align = "l",
out = paste0(path_github, "Outputs/tests.html")
)
library(plm)
library(boot)
library(stargazer)
rm(list=ls())
path_github <-"C:/Users/DCCS2/Documents/GitHub/Multi-level-collective-action-in-small-scale-fisheries/Exptal Sessions/R/"
path_datos<-"C:/Users/DCCS2/Dropbox/CICS/Experiments/Islitas/Data/Sessions"
#path_github <-"C:/Users/Denise Laroze/Documents/GitHub/Multi-level-collective-action-in-small-scale-fisheries/Exptal Sessions/R/"
#path_datos<-"C:/Users/Denise Laroze/Dropbox/CICS/Experiments/Islitas/Data/Sessions"
setwd(path_github)
#load(paste0(path_datos, "/Datos_islitas.Rdata"))
load(paste0(path_datos, "/Datos_islitas_recode.Rdata"))
load(paste0(path_datos, "/Datos_islitas_long.Rdata"))
dfs_long$round.plm<-ifelse(dfs_long$treatment=="T2", as.numeric(dfs_long$round)+8, as.numeric(dfs_long$round))
dfs_long$participant.code.plm<-ifelse(dfs_long$treatment=="T2", paste0(dfs_long$participant.code, ".T2"), dfs_long$participant.code)
dfs_long$compliance_beliefs_turf_caleta<-ifelse(dfs_long$treatment=="T1", dfs_long$compliance_beliefsT1inicial.1.player.T1_belief_caleta_en_amerb_ini,
dfs_long$compliance_beliefsT1final.1.player.T1_belief_caleta_en_amerb_fin)
dfs_long$conflicto_OA<-ifelse(dfs_long$treatment=="T1", dfs_long$survey1.1.player.conflicto_pm,
dfs_long$survey2.1.player.conflicto_caleta_conocida_mean)
dfs_long$confianza_OA<-ifelse(dfs_long$treatment=="T1", dfs_long$survey1.1.player.confianza_pm,
dfs_long$survey2.1.player.confianza_caleta_conocida_mean)
# Convert panel data correctly
dfs_long <- pdata.frame(dfs_long, index = c("participant.code.plm", "round.plm"))
# Define a function to resample clusters and fit a plm model
bootstrap_model <- function(data, indices, model_formula, cluster_var) {
# Get unique clusters
unique_clusters <- unique(data[[cluster_var]])
# Sample clusters (with replacement)
sampled_clusters <- sample(unique_clusters, length(unique_clusters), replace = TRUE)
# Subset data based on sampled clusters
data_sample <- data[data[[cluster_var]] %in% sampled_clusters, ]
# Fit the model
model <- plm(model_formula, data = data_sample, model = "random")
# Return coefficients
return(coef(model))
}
# Number of bootstrap replications
B <- 500
set.seed(62354)
# Define model formulas
formula_plm1 <- compliance_extraction_amerb ~ compliance_lag_extraction_others_amerb_mean +
compliance_beliefs_turf_caleta +
treatment + n_identities
formula_plm2 <- compliance_extraction_amerb ~ compliance_lag_extraction_others_amerb_mean +
compliance_beliefs_turf_caleta +
treatment +  n_identities +
survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta
formula_plm3 <- compliance_extraction_OA ~ compliance_lag_extraction_others_OA_mean +
compliance_beliefs_OA_caleta + compliance_beliefs_OA_others +
treatment + minority+ n_identities
formula_plm4 <- compliance_extraction_OA ~ compliance_lag_extraction_others_OA_mean +
compliance_beliefs_OA_caleta + compliance_beliefs_OA_others +
treatment + minority + n_identities+
survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta +
conflicto_OA + confianza_OA
# Run bootstrap with correct cluster resampling
boot_se_plm1 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm1, cluster_var = "gid.amerb")
boot_se_plm2 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm2, cluster_var = "gid.amerb")
boot_se_plm3 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm3, cluster_var = "gid.treat")
boot_se_plm4 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm4, cluster_var = "gid.treat")
# Extract Bootstrapped SEs
se_list_boot <- list(apply(boot_se_plm1$t, 2, sd),
apply(boot_se_plm2$t, 2, sd),
apply(boot_se_plm3$t, 2, sd),
apply(boot_se_plm4$t, 2, sd)
)
# Fit models on full dataset to get coefficient estimates
plm1 <- plm(formula_plm1, data = dfs_long, model = "pooling")
plm2 <- plm(formula_plm2, data = dfs_long, model = "pooling")
plm3 <- plm(formula_plm3, data = dfs_long, model = "pooling")
plm4 <- plm(formula_plm4, data = dfs_long, model = "pooling")
stargazer(plm1, plm2, plm3, plm4)
# Stargazer Table with Corrected Bootstrapped Standard Errors
stargazer(plm1, plm2, plm3, plm4,
se = se_list_boot,
type = "html",  # Change to "html" or "latex" if needed
title = "Random Effects Panel Models",
#order = c(1, 2, 3, 4, 5, 6, 7, 12, 8, 9, 10, 11, 13 ),
#covariate.labels = c("Mean Compliance by Group TURF (t-1)", "Beliefs Compliance by Ingroup in TURF",
#                     "Mean Compliance by Group OA (t-1)",
#                     "Beliefs Compliance by Ingroup in OA", "Beliefs Compliance by Outsiders in OA",
#                     "Scenario Know Outsiders (dummy)", "Sessions with 3 Unions (Dummy)" , "Minority (Dummy)",
#                     "Female (Dummy)", "Fishing h/w",
#                     "Level of Education" ,"Held Leadership Role (Dummy)",
#                     "Constant" ),
dep.var.labels = c("Compliance Extraction Amerb", "Compliance Extraction OA"),
#column.labels = c("Model 1", "Model 2", "Model 3", "Model 4"),
star.cutoffs = c(0.1, 0.05, 0.01),
notes = paste0("Bootstrapped SEs of ", B , " samples of expt. matching groups (TURF group for M1-2, OA group M3-4)."),
notes.align = "l",
out = paste0(path_github, "Outputs/tests.html")
)
library(dplyr)
library(ggplot2)
library(viridis)
df_payoff <- df[, grep("payoff", names(df), ignore.case = TRUE)]
View(df_payoff)
View(df)
df_payoff <- df[, grep("payoff|pago", names(df), ignore.case = TRUE)]
View(df_payoff)
df_payoff <- df[, grep("pago_acumulado", names(df), ignore.case = TRUE)]
View(df_payoff)
tmp<-df %>%
group_by(gid.amerb) %>%
summarise(
mean_belief = mean(belief_compliance_union, na.rm = TRUE),
sd_belief   = sd(belief_compliance_union, na.rm = TRUE),
.groups     = "drop"
)
View(tmp)
df %>%
group_by(gid.amerb) %>%
summarise(
mean_belief  = mean(belief_compliance_union, na.rm = TRUE),
sd_belief    = sd(belief_compliance_union,   na.rm = TRUE),
range_belief = abs(max(belief_compliance_union, na.rm = TRUE) -
min(belief_compliance_union, na.rm = TRUE))),
df %>%
group_by(gid.amerb) %>%
summarise(
mean_belief  = mean(belief_compliance_union, na.rm = TRUE),
sd_belief    = sd(belief_compliance_union,   na.rm = TRUE),
range_belief = abs(max(belief_compliance_union, na.rm = TRUE) -
min(belief_compliance_union, na.rm = TRUE))),
tmp<-df %>%
group_by(gid.amerb) %>%
summarise(
mean_belief  = mean(belief_compliance_union, na.rm = TRUE),
sd_belief    = sd(belief_compliance_union,   na.rm = TRUE),
range_belief = abs(
max(belief_compliance_union, na.rm = TRUE) -
min(belief_compliance_union, na.rm = TRUE)
),
.groups = "drop"
)
View(tmp)
df_with_stats <- df %>%
group_by(gid.amerb) %>%
mutate(
mean_belief  = mean(belief_compliance_union, na.rm = TRUE),
sd_belief    = sd(belief_compliance_union,   na.rm = TRUE),
range_belief = abs(
max(belief_compliance_union, na.rm = TRUE) -
min(belief_compliance_union, na.rm = TRUE)
)
) %>%
ungroup()
head(
df_with_stats[, c("participant.code", "gid.amerb", "mean_belief", "sd_belief", "range_belief")],
10
)
df <- df %>%
group_by(gid.amerb) %>%
mutate(
mean_belief  = mean(belief_compliance_union, na.rm = TRUE),
sd_belief    = sd(belief_compliance_union,   na.rm = TRUE),
range_belief = abs(
max(belief_compliance_union, na.rm = TRUE) -
min(belief_compliance_union, na.rm = TRUE)
)
) %>%
ungroup()
df$ganancias_amerb<-df$T1juegoalgas.8.player.T1_pago_acumulado_amerb + df$T2juegoalgas.8.player.T2_pago_acumulado_metat
mean(df$ganancias_amerb)
df$ganancias_amerb<-df$T1juegoalgas.8.player.T1_pago_acumulado_amerb + df$T2juegoalgas.8.player.T2_pago_acumulado_metat
lm<-lm(ganancias_amerb~ mean_belief+ sd_belief+ range_belief, df)
summary(lm)
lm<-lm(ganancias_amerb~ mean_belief, df)
summary(lm)
lm<-lm(ganancias_amerb~ sd_belief, df)
summary(lm)
lm<-lm(ganancias_amerb~ range_belief, df)
summary(lm)
tmp<-df %>%
group_by(gid.amerb) %>%
summarise(
mean_belief  = mean(belief_compliance_union, na.rm = TRUE),
sd_belief    = sd(belief_compliance_union,   na.rm = TRUE),
range_belief = abs(
max(belief_compliance_union, na.rm = TRUE) -
min(belief_compliance_union, na.rm = TRUE)
),
group_payoff_t1 = mean(T1juegoalgas.8.player.T1_pago_acumulado_amerb , na.rm = TRUE),
.groups = "drop"
)
View(tmp)
tmp<-df %>%
group_by(gid.amerb) %>%
summarise(
mean_belief  = mean(belief_compliance_union, na.rm = TRUE),
sd_belief    = sd(belief_compliance_union,   na.rm = TRUE),
range_belief = abs(
max(belief_compliance_union, na.rm = TRUE) -
min(belief_compliance_union, na.rm = TRUE)
),
group_payoff_t1 = mean(T1juegoalgas.8.player.T1_pago_acumulado_amerb , na.rm = TRUE),
group_payoff_t2 = mean(T2juegoalgas.8.player.T2_pago_acumulado_amerb , na.rm = TRUE),
group_payoff_tot = mean(ganancias_amerb , na.rm = TRUE),
.groups = "drop"
)
lm<-lm(group_payoff_t1~ mean_belief+ sd_belief+ range_belief, tmp)
summary(lm)
lm<-lm(group_payoff_t1~ mean_belief, tmp)
summary(lm)
lm<-lm(group_payoff_t1~ sd_belief, tmp)
summary(lm)
lm<-lm(group_payoff_t1~ range_belief, tmp)
summary(lm)
lm<-lm(group_payoff_tot~ mean_belief+ sd_belief+ range_belief, tmp)
summary(lm)
lm<-lm(group_payoff_t2~ mean_belief+ sd_belief+ range_belief, tmp)
summary(lm)
lm<-lm(group_payoff_t1~ mean_belief+ sd_belief+ range_belief, tmp)
summary(lm)
lm<-lm(group_payoff_tot~ mean_belief+ sd_belief+ range_belief, tmp)
summary(lm)
names(df)
tmp<-df %>%
group_by(gid.amerb) %>%
summarise(
mean_belief_ini  = mean(belief_compliance_union, na.rm = TRUE),
sd_belief_ini    = sd(belief_compliance_union,   na.rm = TRUE),
range_belief_ini = abs(
max(belief_compliance_union, na.rm = TRUE) -
min(belief_compliance_union, na.rm = TRUE)
),
mean_belief_fin  = mean(compliance_beliefsT1final.1.player.T1_belief_caleta_en_amerb_fin, na.rm = TRUE),
sd_belief_fin    = sd(compliance_beliefsT1final.1.player.T1_belief_caleta_en_amerb_fin,   na.rm = TRUE),
range_belief_fin = abs(
max(compliance_beliefsT1final.1.player.T1_belief_caleta_en_amerb_fin, na.rm = TRUE) -
min(compliance_beliefsT1final.1.player.T1_belief_caleta_en_amerb_fin, na.rm = TRUE)
),
group_payoff_t1 = mean(T1juegoalgas.8.player.T1_pago_acumulado_amerb , na.rm = TRUE),
group_payoff_t2 = mean(T2juegoalgas.8.player.T2_pago_acumulado_amerb , na.rm = TRUE),
group_payoff_tot = mean(ganancias_amerb , na.rm = TRUE),
.groups = "drop"
)
rlang::last_trace()
table(compliance_beliefsT1final.1.player.T1_belief_caleta_en_amerb_fin)
table(df$compliance_beliefsT1final.1.player.T1_belief_caleta_en_amerb_fin)
df$belief_compliance_union_fin<-1-(compliance_beliefsT1final.1.player.T1_belief_caleta_en_amerb_fin/50)
df$belief_compliance_union_fin<-1-(df$compliance_beliefsT1final.1.player.T1_belief_caleta_en_amerb_fin/50)
df$belief_compliance_union_fin<-1-(df$beliefsT1final.1.player.T1_belief_caleta_en_amerb_fin/50)
tmp<-df %>%
group_by(gid.amerb) %>%
summarise(
mean_belief_ini  = mean(belief_compliance_union, na.rm = TRUE),
sd_belief_ini    = sd(belief_compliance_union,   na.rm = TRUE),
range_belief_ini = abs(
max(belief_compliance_union, na.rm = TRUE) -
min(belief_compliance_union, na.rm = TRUE)
),
mean_belief_fin  = mean(belief_compliance_union_fin, na.rm = TRUE),
sd_belief_fin    = sd(belief_compliance_union_fin,   na.rm = TRUE),
range_belief_fin = abs(
max(belief_compliance_union_fin, na.rm = TRUE) -
min(belief_compliance_union_fin, na.rm = TRUE)
),
group_payoff_t1 = mean(T1juegoalgas.8.player.T1_pago_acumulado_amerb , na.rm = TRUE),
group_payoff_t2 = mean(T2juegoalgas.8.player.T2_pago_acumulado_amerb , na.rm = TRUE),
group_payoff_tot = mean(ganancias_amerb , na.rm = TRUE),
.groups = "drop"
)
View(tmp)
lm<-lm(group_payoff_t1~ mean_belief_ini+ sd_belief_ini+ range_belief_ini, tmp)
summary(lm)
lm<-lm(group_payoff_t2~ mean_belief_fin+ sd_belief_fin+ range_belief_fin, tmp)
summary(lm)
lm<-lm(group_payoff_tot~ mean_belief_fin+ sd_belief_fin+ range_belief_fin, tmp)
summary(lm)
lm<-lm(group_payoff_tot~ mean_belief_ini+ sd_belief_ini+ range_belief_ini +mean_belief_fin+ sd_belief_fin+ range_belief_fin, tmp)
summary(lm)
lm<-lm(ganancias_amerb~ mean_belief_ini+ sd_belief_ini+ range_belief_ini +mean_belief_fin+ sd_belief_fin+ range_belief_fin, tmp)
df$ganancias_OA<-df$df$T1juegoalgas.8.player.T1_pago_acumulado_libre + df$T2juegoalgas.8.player.T2_pago_acumulado_metat
df$ganancias_OA<-df$T1juegoalgas.8.player.T1_pago_acumulado_libre + df$T2juegoalgas.8.player.T2_pago_acumulado_metat
table(df$belief_compliance_pm)
df$belief_compliance_union_ini<-1-(df$beliefsT1inicial.1.player.T1_belief_caleta_en_amerb_ini/50)
df$belief_compliance_pm_OA_T1 <- 1 - (df$beliefsT1inicial.1.player.T1_belief_pm_en_libre_ini / 50)
df$belief_compliance_pm_OA_T2 <- 1 - (df$beliefsT2inicial.1.player.T2_belief_caleta_conocida_mean_ini / 50)
df$belief_compliance_union_OA_T1 <- 1 - (df$beliefsT1inicial.1.player.T1_belief_caleta_en_libre_ini / 50)
df$belief_compliance_union_OA_T2 <- 1 - (df$beliefsT2inicial.1.player.T2_belief_caleta_conocida_mean_ini  / 50)
df$belief_compliance_pm_OA_T1 <- 1 - (df$beliefsT1inicial.1.player.T1_belief_pm_en_libre_ini / 50)
df$belief_compliance_pm_OA_T2 <- 1 - (df$beliefsT2inicial.1.player.T2_belief_caleta_conocida_mean_ini / 50)
df$belief_compliance_union_OA_T1 <- 1 - (df$beliefsT1inicial.1.player.T1_belief_caleta_en_libre_ini / 50)
df$belief_compliance_union_OA_T2 <- 1 - (df$beliefsT2inicial.1.player.T2_belief_caleta_ini / 50)
tmp2 <- df %>%
group_by(gid.treat) %>%
summarise(
# PM OA T1
mean_pm_OA_T1  = mean(belief_compliance_pm_OA_T1, na.rm = TRUE),
sd_pm_OA_T1    = sd(  belief_compliance_pm_OA_T1, na.rm = TRUE),
range_pm_OA_T1 = abs(
max(belief_compliance_pm_OA_T1, na.rm = TRUE) -
min(belief_compliance_pm_OA_T1, na.rm = TRUE)
),
# PM OA T2
mean_pm_OA_T2  = mean(belief_compliance_pm_OA_T2, na.rm = TRUE),
sd_pm_OA_T2    = sd(  belief_compliance_pm_OA_T2, na.rm = TRUE),
range_pm_OA_T2 = abs(
max(belief_compliance_pm_OA_T2, na.rm = TRUE) -
min(belief_compliance_pm_OA_T2, na.rm = TRUE)
),
# UNION OA T1
mean_union_OA_T1  = mean(belief_compliance_union_OA_T1, na.rm = TRUE),
sd_union_OA_T1    = sd(  belief_compliance_union_OA_T1, na.rm = TRUE),
range_union_OA_T1 = abs(
max(belief_compliance_union_OA_T1, na.rm = TRUE) -
min(belief_compliance_union_OA_T1, na.rm = TRUE)
),
# UNION OA T2
mean_union_OA_T2  = mean(belief_compliance_union_OA_T2, na.rm = TRUE),
sd_union_OA_T2    = sd(  belief_compliance_union_OA_T2, na.rm = TRUE),
range_union_OA_T2 = abs(
max(belief_compliance_union_OA_T2, na.rm = TRUE) -
min(belief_compliance_union_OA_T2, na.rm = TRUE)
),
group_payoff_OA_t1 = mean(T1juegoalgas.8.player.T1_pago_acumulado_libre , na.rm = TRUE),
group_payoff_OA_t2 = mean(df$T2juegoalgas.8.player.T2_pago_acumulado_metat , na.rm = TRUE),
group_payoff_OA_tot = mean(ganancias_OA , na.rm = TRUE),
.groups = "drop"
)
View(tmp2)
lm<-lm(group_payoff_OA_t1~ mean_pm_OA_T1 + mean_union_OA_T1, tmp2)
summary(lm)
lm<-lm(group_payoff_OA_t2~ mean_pm_OA_T2 + mean_union_OA_T2 , tmp2)
summary(lm)
lm<-lm(group_payoff_OA_t2~ mean_pm_OA_T2 + mean_union_OA_T2 , tmp2)
summary(lm)
lm<-lm(group_payoff_OA_t2~ mean_pm_OA_T2 , tmp2)
summary(lm)
lm<-lm(group_payoff_OA_tot~ mean_pm_OA_T1 + mean_union_OA_T1 mean_pm_OA_T2 + mean_union_OA_T2, tmp2)
lm<-lm(group_payoff_OA_tot~ mean_pm_OA_T1 + mean_union_OA_T1+ mean_pm_OA_T2 + mean_union_OA_T2, tmp2)
summary(lm)
