one_rep <- function(d, i_unused) {
# unique, non-missing clusters
clusters <- unique(stats::na.omit(d[[cluster_var]]))
# if too few clusters, return NAs
if (length(clusters) < 2L) return(setNames(rep(NA_real_, length(coef_names)), coef_names))
# resample cluster ids (with replacement), keep all rows from chosen clusters
samp <- sample(clusters, length(clusters), replace = TRUE)
d_b  <- dplyr::bind_rows(lapply(samp, function(cl) d[d[[cluster_var]] == cl, , drop = FALSE]))
# fit
fit <- try(lmer(model_formula, data = d_b, control = ctrl, REML = FALSE), silent = TRUE)
out <- setNames(rep(NA_real_, length(coef_names)), coef_names)
if (inherits(fit, "try-error")) return(out)
cf <- try(fixef(fit), silent = TRUE)
if (!inherits(cf, "try-error")) out[names(cf)] <- as.numeric(cf)
out
}
set.seed(seed)
bt <- boot::boot(
data = data,
statistic = function(d, i) one_rep(d, i),  # i is unused; we resample clusters internally
R = B,
parallel = "no"  # set to "multicore"/"snow" if you want parallelism
)
draws <- bt$t
colnames(draws) <- coef_names
# Covariance & SEs from the bootstrap draws
V  <- stats::cov(draws, use = "pairwise.complete.obs")
se <- sqrt(diag(V))
# Percentile CIs (quick, vectorized)
qs <- apply(draws, 2, quantile, probs = c(0.025, 0.975), na.rm = TRUE)
ci_lower <- qs[1,]
ci_upper <- qs[2,]
list(
base_fit  = base_fit,   # lmer fit on full data (ML)
boot      = bt,         # full boot object
draws     = draws,      # B x p matrix of bootstrap coefficients
V         = V,          # bootstrap covariance (cluster-robust)
se        = se,         # bootstrap SEs
ci_lower  = ci_lower,   # 2.5% percentile CI
ci_upper  = ci_upper,   # 97.5% percentile CI
coef_names = coef_names
)
}
#----------- Estimate models ##############
# Your models (ML fits are inside the bootstrap anyway)
model  <- lmer(compliance ~ treat.area + (1 | participant.code), data = df_long_ext)
model2 <- lmer(compliance ~ area * treatment + (1 | participant.code), data = df_long_ext)
# Cluster variable is the subject id:
clvar <- "gid.treat" # for TURF or "gid.treat" for Shared Area
# Run the cluster bootstrap (increase B for publication results)
res1 <- bootstrap_lmer(compliance ~ treat.area + (1 | participant.code),
data = df_long_ext, cluster_var = clvar, B = 2000)
res2 <- bootstrap_lmer(compliance ~ area * treatment + (1 | participant.code),
data = df_long_ext, cluster_var = clvar, B = 2000)
# If you use modelsummary, pass the bootstrap vcov so p-values/SEs reflect the cluster bootstrap:
library(modelsummary)
# Optional: label coefficients
my_labels <- c(
"(Intercept)"              = "Intercept (TURF, T1)",
"treat.areaTURF_T2"        = "TURF rounds 9–16 (dummy)",
"treat.areaShared_Area_T1" = "Shared Area Unknown (dummy)",
"treat.areaShared_Area_T2" = "Shared Area Known (dummy)",
"areaShared_Area"          = "Shared Area (vs TURF)",
"treatmentT2"              = "Rounds 9–16 (vs 1–8)",
"areaShared_Area:treatmentT2" = "Shared Area × Rounds 9–16"
)
# Make sure the vcov matrices align with the fitted object coef order
vcov1 <- res1$V[ names(fixef(res1$base_fit)), names(fixef(res1$base_fit)) ]
vcov2 <- res2$V[ names(fixef(res2$base_fit)), names(fixef(res2$base_fit)) ]
modelsummary(
list("H1/H2: treat dummies" = res1$base_fit,
"H1/H2: area × treatment" = res2$base_fit),
vcov      = list(vcov1, vcov2),
coef_map  = my_labels,
stars     = c("*" = .05, "**" = .01, "***" = .001),  # only these three
gof_omit  = "IC|Log.Lik|AIC|BIC",                    # cleaner table
output    = paste0(path_github, "Outputs/LMM_H1_H2_boot_gid.treat.docx")
)
# Optional: label coefficients
my_labels <- c(
"(Intercept)"              = "Intercept (TURF rounds 1–8)",
"treat.areaTURF_T2"        = "TURF rounds 9–16",
"treat.areaShared_Area_T1" = "Shared Area Unknown Out-group",
"treat.areaShared_Area_T2" = "Shared Area Known Out-group",
"areaShared_Area"          = "Area (Shared)",
"treatmentT2"              = "Stage (Rounds 9–16)",
"areaShared_Area:treatmentT2" = "Area × Stage"
)
# Make sure the vcov matrices align with the fitted object coef order
vcov1 <- res1$V[ names(fixef(res1$base_fit)), names(fixef(res1$base_fit)) ]
vcov2 <- res2$V[ names(fixef(res2$base_fit)), names(fixef(res2$base_fit)) ]
modelsummary(
list("H1: TURF vs Shared Area" = res1$base_fit,
"H2: Area × Stage" = res2$base_fit),
vcov      = list(vcov1, vcov2),
coef_map  = my_labels,
stars     = c("*" = .05, "**" = .01, "***" = .001),  # only these three
gof_omit  = "IC|Log.Lik|AIC|BIC",                    # cleaner table
output    = paste0(path_github, "Outputs/LMM_H1_H2_boot_gid.treat.docx")
)
# --- generate scaled variables in df ---
df <- df %>%
mutate(
confianza_pm_scaled     = (survey1.1.player.confianza_pm   - 1) / 3,
conflicto_pm_scaled     = (survey1.1.player.conflicto_pm   - 1) / 3,
confianza_caleta_scaled = (survey1.1.player.confianza_caleta - 1) / 3,
conflicto_caleta_scaled = (survey1.1.player.conflicto_caleta - 1) / 3
)
# --- variables to summarise ---
vars_df <- c(
"treatment",
"survey1.1.player.confianza_pm", "confianza_pm_scaled",
"survey1.1.player.conflicto_pm", "conflicto_pm_scaled",
"survey1.1.player.confianza_caleta", "confianza_caleta_scaled",
"survey1.1.player.conflicto_caleta", "conflicto_caleta_scaled",
"compliance_beliefs_OA_caleta", "compliance_beliefs_OA_others",
"minority", "n_identities",
"survey3.1.player.sexo", "survey3.1.player.horas_trabajo",
"survey3.1.player.estudios", "survey3.1.player.liderazgo"
)
vars_dfs_long <- c(
"compliance_extraction_OA",
"compliance_lag_extraction_others_OA_mean"
)
# --- summarise helper ---
summarize_vars <- function(df, vars) {
df %>%
select(all_of(vars)) %>%
summarise(across(
everything(),
list(
mean = ~mean(., na.rm = TRUE),
sd   = ~sd(., na.rm = TRUE),
n    = ~sum(!is.na(.))
),
.names = "{.col}_{.fn}"
))
}
# --- summaries ---
summary_df       <- summarize_vars(df, vars_df)
# --- variables to summarise ---
vars_df <- c(
"treatment",
"survey1.1.player.confianza_pm", "confianza_pm_scaled",
"survey1.1.player.conflicto_pm", "conflicto_pm_scaled",
"survey1.1.player.confianza_caleta", "confianza_caleta_scaled",
"survey1.1.player.conflicto_caleta", "conflicto_caleta_scaled",
"compliance_beliefsT1inicial.1.player.T1_belief_caleta_en_libre_ini",
"compliance_beliefsT2inicial.1.player.T2_belief_caleta_ini",
"compliance_beliefsT1inicial.1.player.T1_belief_pm_en_libre_ini",
"compliance_beliefsT2inicial.1.player.T2_belief_caleta_conocida_mean_ini",
"survey3.1.player.sexo", "survey3.1.player.horas_trabajo",
"survey3.1.player.estudios", "survey3.1.player.liderazgo"
)
vars_dfs_long <- c(
"compliance_extraction_OA",
"compliance_lag_extraction_others_OA_mean"
)
# --- summarise helper ---
summarize_vars <- function(df, vars) {
df %>%
select(all_of(vars)) %>%
summarise(across(
everything(),
list(
mean = ~mean(., na.rm = TRUE),
sd   = ~sd(., na.rm = TRUE),
n    = ~sum(!is.na(.))
),
.names = "{.col}_{.fn}"
))
}
# --- summaries ---
summary_df       <- summarize_vars(df, vars_df)
vars_df <- c(
"survey1.1.player.confianza_pm", "confianza_pm_scaled",
"survey1.1.player.conflicto_pm", "conflicto_pm_scaled",
"survey1.1.player.confianza_caleta", "confianza_caleta_scaled",
"survey1.1.player.conflicto_caleta", "conflicto_caleta_scaled",
"compliance_beliefsT1inicial.1.player.T1_belief_caleta_en_libre_ini",
"compliance_beliefsT2inicial.1.player.T2_belief_caleta_ini",
"compliance_beliefsT1inicial.1.player.T1_belief_pm_en_libre_ini",
"compliance_beliefsT2inicial.1.player.T2_belief_caleta_conocida_mean_ini",
"survey3.1.player.sexo", "survey3.1.player.horas_trabajo",
"survey3.1.player.estudios", "survey3.1.player.liderazgo"
)
# --- summaries ---
summary_df       <- summarize_vars(df, vars_df)
library(dplyr)
library(tidyr)
library(lme4)
library(boot)
library(modelsummary)
library(broom.mixed)
library(tinytable)
library(rlang)
library(flextable)     # for DOCX
library(officer)       # for DOCX
options(modelsummary_factory_default = "flextable")  # force DOCX via flextable
rm(list=ls())
path_github <-"C:/Users/DCCS2/Documents/GitHub/Multi-level-collective-action-in-small-scale-fisheries/Exptal Sessions/R/"
path_datos<-"C:/Users/DCCS2/Dropbox/CICS/Experiments/Islitas/Data/Sessions"
#path_github <-"C:/Users/Denise Laroze/Documents/GitHub/Multi-level-collective-action-in-small-scale-fisheries/Exptal Sessions/R/"
#path_datos<-"C:/Users/Denise Laroze/Dropbox/CICS/Experiments/Islitas/Data/Sessions"
setwd(path_github)
#load(paste0(path_datos, "/Datos_islitas.Rdata"))
load(paste0(path_datos, "/Datos_islitas_recode.Rdata"))
load(paste0(path_datos, "/Datos_islitas_long.Rdata"))
df <- df %>%
mutate(
confianza_pm_scaled     = (survey1.1.player.confianza_pm   - 1) / 3,
conflicto_pm_scaled     = (survey1.1.player.conflicto_pm   - 1) / 3,
confianza_caleta_scaled = (survey1.1.player.confianza_caleta - 1) / 3,
conflicto_caleta_scaled = (survey1.1.player.conflicto_caleta - 1) / 3
)
names(df)
vars_df <- c(
"survey1.1.player.confianza_pm", "confianza_pm_scaled",
"survey1.1.player.conflicto_pm", "conflicto_pm_scaled",
"survey1.1.player.confianza_caleta", "confianza_caleta_scaled",
"survey1.1.player.conflicto_caleta", "conflicto_caleta_scaled",
"beliefsT1inicial.1.player.T1_belief_caleta_en_libre_ini",
"beliefsT2inicial.1.player.T2_belief_caleta_ini",
"beliefsT1inicial.1.player.T1_belief_pm_en_libre_ini",
"beliefsT2inicial.1.player.T2_belief_caleta_conocida_mean_ini",
"survey3.1.player.sexo", "survey3.1.player.horas_trabajo",
"survey3.1.player.estudios", "survey3.1.player.liderazgo"
)
vars_dfs_long <- c( "treatment",
"compliance_extraction_OA",
"compliance_lag_extraction_others_OA_mean"
)
# --- summarise helper ---
summarize_vars <- function(df, vars) {
df %>%
select(all_of(vars)) %>%
summarise(across(
everything(),
list(
mean = ~mean(., na.rm = TRUE),
sd   = ~sd(., na.rm = TRUE),
n    = ~sum(!is.na(.))
),
.names = "{.col}_{.fn}"
))
}
# --- summaries ---
summary_df       <- summarize_vars(df, vars_df)
summary_dfs_long <- summarize_vars(dfs_long, vars_dfs_long)
View(summary_df)
# --- reshape into long form ---
make_summary_table <- function(summary_data) {
summary_data %>%
pivot_longer(
cols = everything(),
names_to = c("variable", ".value"),
names_sep = "_"
)
}
summary_table_df       <- make_summary_table(summary_df)
summary_table_dfs_long <- make_summary_table(summary_dfs_long)
# --- combine both sets of variables ---
summary_all <- bind_rows(summary_table_df, summary_table_dfs_long)
View(summary_table_dfs_long)
View(summary_table_df)
library(dplyr)
library(tidyr)
library(modelsummary)
# --- generate scaled variables in df ---
df <- df %>%
mutate(
confianza_pm_scaled     = (survey1.1.player.confianza_pm   - 1) / 3,
conflicto_pm_scaled     = (survey1.1.player.conflicto_pm   - 1) / 3,
confianza_caleta_scaled = (survey1.1.player.confianza_caleta - 1) / 3,
conflicto_caleta_scaled = (survey1.1.player.conflicto_caleta - 1) / 3
)
# --- variables to summarise ---
vars_df <- c(
"survey1.1.player.confianza_pm", "confianza_pm_scaled",
"survey1.1.player.conflicto_pm", "conflicto_pm_scaled",
"survey1.1.player.confianza_caleta", "confianza_caleta_scaled",
"survey1.1.player.conflicto_caleta", "conflicto_caleta_scaled",
"beliefsT1inicial.1.player.T1_belief_caleta_en_libre_ini",
"beliefsT2inicial.1.player.T2_belief_caleta_ini",
"beliefsT1inicial.1.player.T1_belief_pm_en_libre_ini",
"beliefsT2inicial.1.player.T2_belief_caleta_conocida_mean_ini",
"survey3.1.player.sexo", "survey3.1.player.horas_trabajo",
"survey3.1.player.estudios", "survey3.1.player.liderazgo"
)
# --- summarise helper ---
summarize_vars <- function(df, vars) {
df %>%
select(all_of(vars)) %>%
summarise(across(
everything(),
list(
mean = ~mean(., na.rm = TRUE),
sd   = ~sd(., na.rm = TRUE),
n    = ~sum(!is.na(.))
),
.names = "{.col}_{.fn}"
))
}
# --- summaries ---
summary_df       <- summarize_vars(df, vars_df)
# --- reshape into long form ---
make_summary_table <- function(summary_data) {
summary_data %>%
pivot_longer(
cols = everything(),
names_to = c("variable", ".value"),
names_sep = "_"
)
}
summary_table_df       <- make_summary_table(summary_df)
summary_table_dfs_long <- make_summary_table(summary_dfs_long)
# --- combine both sets of variables ---
summary_all <- bind_rows(summary_table_df, summary_table_dfs_long)
# --- nice output ---
datasummary_df(summary_all,
title = "Summary Statistics",
output    = paste0(path_github, "Outputs/summary.docx"))
# or output = "flextable" / "kableExtra" for docx/latex
rm(list=ls())
path_github <-"C:/Users/DCCS2/Documents/GitHub/Multi-level-collective-action-in-small-scale-fisheries/Exptal Sessions/R/"
path_datos<-"C:/Users/DCCS2/Dropbox/CICS/Experiments/Islitas/Data/Sessions"
#path_github <-"C:/Users/Denise Laroze/Documents/GitHub/Multi-level-collective-action-in-small-scale-fisheries/Exptal Sessions/R/"
#path_datos<-"C:/Users/Denise Laroze/Dropbox/CICS/Experiments/Islitas/Data/Sessions"
setwd(path_github)
#load(paste0(path_datos, "/Datos_islitas.Rdata"))
load(paste0(path_datos, "/Datos_islitas_recode.Rdata"))
load(paste0(path_datos, "/Datos_islitas_long.Rdata"))
# --- generate scaled variables in df ---
df <- df %>%
mutate(
confianza_pm_scaled     = (survey1.1.player.confianza_pm   - 1) / 3,
conflicto_pm_scaled     = (survey1.1.player.conflicto_pm   - 1) / 3,
confianza_caleta_scaled = (survey1.1.player.confianza_caleta - 1) / 3,
conflicto_caleta_scaled = (survey1.1.player.conflicto_caleta - 1) / 3
)
# --- variables to summarise ---
vars_df <- c(
"survey1.1.player.confianza_pm", "confianza_pm_scaled",
"survey1.1.player.conflicto_pm", "conflicto_pm_scaled",
"survey1.1.player.confianza_caleta", "confianza_caleta_scaled",
"survey1.1.player.conflicto_caleta", "conflicto_caleta_scaled",
"beliefsT1inicial.1.player.T1_belief_caleta_en_libre_ini",
"beliefsT2inicial.1.player.T2_belief_caleta_ini",
"beliefsT1inicial.1.player.T1_belief_pm_en_libre_ini",
"beliefsT2inicial.1.player.T2_belief_caleta_conocida_mean_ini",
"survey3.1.player.sexo", "survey3.1.player.horas_trabajo",
"survey3.1.player.estudios", "survey3.1.player.liderazgo"
)
# --- summarise helper ---
summarize_vars <- function(df, vars) {
df %>%
select(all_of(vars)) %>%
summarise(across(
everything(),
list(
mean = ~mean(., na.rm = TRUE),
sd   = ~sd(., na.rm = TRUE),
n    = ~sum(!is.na(.))
),
.names = "{.col}_{.fn}"
))
}
# --- summaries ---
summary_df       <- summarize_vars(df, vars_df)
# --- reshape into long form ---
make_summary_table <- function(summary_data) {
summary_data %>%
pivot_longer(
cols = everything(),
names_to = c("variable", ".value"),
names_sep = "_"
)
}
summary_table_df       <- make_summary_table(summary_df)
summary_table_dfs_long <- make_summary_table(summary_dfs_long)
# --- combine both sets of variables ---
summary_all <- bind_rows(summary_table_df)
# --- nice output ---
datasummary_df(summary_all,
title = "Summary Statistics",
output    = paste0(path_github, "Outputs/summary.docx"))
# or output = "flextable" / "kableExtra" for docx/latex
library(dplyr)
library(modelsummary)
# --- create scaled variables ---
df <- df %>%
mutate(
confianza_pm_scaled     = (survey1.1.player.confianza_pm   - 1) / 3,
conflicto_pm_scaled     = (survey1.1.player.conflicto_pm   - 1) / 3,
confianza_caleta_scaled = (survey1.1.player.confianza_caleta - 1) / 3,
conflicto_caleta_scaled = (survey1.1.player.conflicto_caleta - 1) / 3
)
# --- variables of interest ---
vars_df <- c(
"treatment",
"survey1.1.player.confianza_pm", "confianza_pm_scaled",
"survey1.1.player.conflicto_pm", "conflicto_pm_scaled",
"survey1.1.player.confianza_caleta", "confianza_caleta_scaled",
"survey1.1.player.conflicto_caleta", "conflicto_caleta_scaled",
"compliance_beliefs_OA_caleta", "compliance_beliefs_OA_others",
"minority", "n_identities",
"survey3.1.player.sexo", "survey3.1.player.horas_trabajo",
"survey3.1.player.estudios", "survey3.1.player.liderazgo"
)
vars_dfs_long <- c(
"compliance_extraction_OA",
"compliance_lag_extraction_others_OA_mean"
)
# --- summarise helper: one row per variable ---
summarize_vars <- function(df, vars) {
df %>%
select(all_of(vars)) %>%
summarise(across(
everything(),
list(
Mean = ~mean(., na.rm = TRUE),
SD   = ~sd(., na.rm = TRUE),
N    = ~sum(!is.na(.))
),
.names = "{.col}__{.fn}"
)) %>%
tidyr::pivot_longer(
everything(),
names_to = c("Variable", ".value"),
names_sep = "__"
)
}
# --- summaries ---
summary_df       <- summarize_vars(df, vars_df)
vars_df <- c(
"treatment",
"survey1.1.player.confianza_pm", "confianza_pm_scaled",
"survey1.1.player.conflicto_pm", "conflicto_pm_scaled",
"survey1.1.player.confianza_caleta", "confianza_caleta_scaled",
"survey1.1.player.conflicto_caleta", "conflicto_caleta_scaled",
#"compliance_beliefs_OA_caleta", "compliance_beliefs_OA_others",
#"minority", "n_identities",
"survey3.1.player.sexo", "survey3.1.player.horas_trabajo",
"survey3.1.player.estudios", "survey3.1.player.liderazgo"
)
vars_dfs_long <- c(
"compliance_extraction_OA",
"compliance_lag_extraction_others_OA_mean"
)
# --- summarise helper: one row per variable ---
summarize_vars <- function(df, vars) {
df %>%
select(all_of(vars)) %>%
summarise(across(
everything(),
list(
Mean = ~mean(., na.rm = TRUE),
SD   = ~sd(., na.rm = TRUE),
N    = ~sum(!is.na(.))
),
.names = "{.col}__{.fn}"
)) %>%
tidyr::pivot_longer(
everything(),
names_to = c("Variable", ".value"),
names_sep = "__"
)
}
# --- summaries ---
summary_df       <- summarize_vars(df, vars_df)
vars_df <- c(
"survey1.1.player.confianza_pm", "confianza_pm_scaled",
"survey1.1.player.conflicto_pm", "conflicto_pm_scaled",
"survey1.1.player.confianza_caleta", "confianza_caleta_scaled",
"survey1.1.player.conflicto_caleta", "conflicto_caleta_scaled",
#"compliance_beliefs_OA_caleta", "compliance_beliefs_OA_others",
#"minority", "n_identities",
"survey3.1.player.sexo", "survey3.1.player.horas_trabajo",
"survey3.1.player.estudios", "survey3.1.player.liderazgo"
)
vars_dfs_long <- c(
"compliance_extraction_OA",
"compliance_lag_extraction_others_OA_mean"
)
# --- summarise helper: one row per variable ---
summarize_vars <- function(df, vars) {
df %>%
select(all_of(vars)) %>%
summarise(across(
everything(),
list(
Mean = ~mean(., na.rm = TRUE),
SD   = ~sd(., na.rm = TRUE),
N    = ~sum(!is.na(.))
),
.names = "{.col}__{.fn}"
)) %>%
tidyr::pivot_longer(
everything(),
names_to = c("Variable", ".value"),
names_sep = "__"
)
}
# --- summaries ---
summary_df       <- summarize_vars(df, vars_df)
summary_dfs_long <- summarize_vars(dfs_long, vars_dfs_long)
# --- combine ---
summary_all <- bind_rows(summary_df, summary_dfs_long)
# --- pretty table ---
datasummary_df(summary_all,
title = "Summary Statistics",
output    = paste0(path_github, "Outputs/summary.docx"))
