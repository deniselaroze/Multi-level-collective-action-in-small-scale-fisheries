# Fit the model
model <- plm(model_formula, data = data_sample, model = "random")
# Return coefficients
return(coef(model))
}
# Define model formulas
formula_plm1 <- compliance_extraction_amerb ~ compliance_lag_extraction_others_amerb_mean +
compliance_beliefsT1inicial.1.player.T1_belief_caleta_en_amerb_ini +
treatment + n_identities
formula_plm2 <- compliance_extraction_amerb ~ compliance_lag_extraction_others_amerb_mean +
compliance_beliefsT1inicial.1.player.T1_belief_caleta_en_amerb_ini +
treatment + n_identities + survey3.1.player.sexo +
survey3.1.player.horas_trabajo + survey3.1.player.estudios +
survey3.1.player.liderazgo
formula_plm3 <- compliance_extraction_OA ~ compliance_lag_extraction_others_OA_mean +
compliance_beliefs_OA_caleta + compliance_beliefs_OA_others +
treatment + n_identities + minority
formula_plm4 <- compliance_extraction_OA ~ compliance_lag_extraction_others_OA_mean +
compliance_beliefs_OA_caleta + compliance_beliefs_OA_others +
treatment +  n_identities + minority +
survey3.1.player.sexo + survey3.1.player.horas_trabajo +
survey3.1.player.estudios + survey3.1.player.liderazgo
# Run bootstrap with correct cluster resampling
boot_se_plm1 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm1, cluster_var = "gid.amerb")
boot_se_plm2 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm2, cluster_var = "gid.amerb")
boot_se_plm3 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm3, cluster_var = "gid.treat")
boot_se_plm4 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm4, cluster_var = "gid.treat")
####################################
# Define model formulas
formula_plm1 <- compliance_extraction_amerb ~ compliance_lag_extraction_others_amerb_mean +
compliance_beliefsT1inicial.1.player.T1_belief_caleta_en_amerb_ini +
treatment
formula_plm2 <- compliance_extraction_amerb ~ compliance_lag_extraction_others_amerb_mean +
compliance_beliefsT1inicial.1.player.T1_belief_caleta_en_amerb_ini +
treatment  +
survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta
formula_plm3 <- compliance_extraction_amerb ~ compliance_lag_extraction_others_amerb_mean +
compliance_beliefsT1inicial.1.player.T1_belief_caleta_en_amerb_ini +
treatment +
survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta+
survey1.1.player.T1_motiv_legit_amerb + survey1.1.player.T1_motiv_instr_amerb + survey1.1.player.T1_motiv_socnorm_amerb
formula_plm4 <- compliance_extraction_amerb ~ compliance_lag_extraction_others_amerb_mean +
compliance_beliefsT1inicial.1.player.T1_belief_caleta_en_amerb_ini +
treatment +
survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta+
survey3.1.player.sexo + survey3.1.player.horas_trabajo + survey3.1.player.estudios + survey3.1.player.liderazgo
# Fit models on full dataset to get coefficient estimates
plm1 <- plm(formula_plm1, data = dfs_long, model = "random")
plm2 <- plm(formula_plm2, data = dfs_long, model = "random")
plm3 <- plm(formula_plm3, data = dfs_long, model = "random")
plm4 <- plm(formula_plm4, data = dfs_long, model = "random")
# Run bootstrap with correct cluster resampling
boot_se_plm1 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm1, cluster_var = "gid.amerb")
boot_se_plm2 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm2, cluster_var = "gid.amerb")
boot_se_plm3 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm3, cluster_var = "gid.amerb")
boot_se_plm4 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm4, cluster_var = "gid.amerb")
# Extract Bootstrapped SEs
se_list_boot <- list(apply(boot_se_plm1$t, 2, sd),
apply(boot_se_plm2$t, 2, sd),
apply(boot_se_plm3$t, 2, sd),
apply(boot_se_plm4$t, 2, sd)
)
stargazer(plm1, plm2, plm3, plm4)
# Stargazer Table with Corrected Bootstrapped Standard Errors
stargazer(plm1, plm2, plm3, plm4,
se = se_list_boot,
type = "html",  # Change to "html" or "latex" if needed
title = "Random Effects Panel Models",
#order = c(1, 2, 3, 4, 5, 6, 7, 12, 8, 9, 10, 11, 13 ),
star.cutoffs = c(0.05, 0.01, 0.001),
notes = paste0("Bootstrapped SEs of ", B , " samples of expt. matching groups (TURF group for M1-2, OA group M3-4)."),
notes.align = "l",
out = paste0(path_github, "Outputs/model_pre_reg_boot.html")
)
# Convert panel data correctly
dfs_long <- pdata.frame(dfs_long, index = c("participant.code", "round.plm"))
# Define a function to resample clusters and fit a plm model
bootstrap_model <- function(data, indices, model_formula, cluster_var) {
# Get unique clusters
unique_clusters <- unique(data[[cluster_var]])
# Sample clusters (with replacement)
sampled_clusters <- sample(unique_clusters, length(unique_clusters), replace = TRUE)
# Subset data based on sampled clusters
data_sample <- data[data[[cluster_var]] %in% sampled_clusters, ]
# Fit the model
model <- plm(model_formula, data = data_sample, model = "random")
# Return coefficients
return(coef(model))
}
# Number of bootstrap replications
B <- 100
set.seed(62354)
###############################
###### Shared area models
###############################
formula_plm1 <- compliance_extraction_OA ~ compliance_lag_extraction_others_OA_mean +
compliance_beliefs_OA_caleta + compliance_beliefs_OA_others +
treatment + minority
formula_plm2 <- compliance_extraction_OA ~ compliance_lag_extraction_others_OA_mean +
compliance_beliefs_OA_caleta + compliance_beliefs_OA_others +
treatment + minority +
survey1.1.player.confianza_pm + survey1.1.player.conflicto_pm + survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta
formula_plm3 <- compliance_extraction_OA ~ compliance_lag_extraction_others_OA_mean +
compliance_beliefs_OA_caleta + compliance_beliefs_OA_others +
treatment + minority +
survey1.1.player.confianza_pm + survey1.1.player.conflicto_pm + survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta +
survey3.1.player.sexo + survey3.1.player.horas_trabajo +
survey3.1.player.estudios + survey3.1.player.liderazgo
# Run bootstrap with correct cluster resampling
boot_se_plm1 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm1, cluster_var = "gid.treat")
boot_se_plm2 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm2, cluster_var = "gid.treat")
boot_se_plm3 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm3, cluster_var = "gid.treat")
# Extract Bootstrapped SEs
se_list_boot <- list(apply(boot_se_plm1$t, 2, sd),
apply(boot_se_plm2$t, 2, sd),
apply(boot_se_plm3$t, 2, sd)
)
# Fit models on full dataset to get coefficient estimates
plm1 <- plm(formula_plm1, data = dfs_long, model = "random")
plm2 <- plm(formula_plm2, data = dfs_long, model = "random")
plm3 <- plm(formula_plm3, data = dfs_long, model = "random")
stargazer(plm1, plm2, plm3)
# Stargazer Table with Corrected Bootstrapped Standard Errors
stargazer(plm1, plm2, plm3,
se = se_list_boot,
type = "html",  # Change to "html" or "latex" if needed
title = "Random Effects Panel Models",
#order = c(1, 2, 3, 4, 5, 6, 7, 12, 8, 9, 10, 11, 13 ),
star.cutoffs = c(0.05, 0.01, 0.001),
notes = paste0("Bootstrapped SEs of ", B , " samples of expt. matching groups (TURF group for M1-2, OA group M3-4)."),
notes.align = "l",
out = paste0(path_github, "Outputs/model_pre_reg_boot.html")
)
####################################
# Run bootstrap with correct cluster resampling
boot_se_plm1 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm1, cluster_var = "participant.code")
boot_se_plm2 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm2, cluster_var = "participant.code")
boot_se_plm3 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm3, cluster_var = "participant.code")
# Extract Bootstrapped SEs
se_list_boot <- list(apply(boot_se_plm1$t, 2, sd),
apply(boot_se_plm2$t, 2, sd),
apply(boot_se_plm3$t, 2, sd)
)
# Fit models on full dataset to get coefficient estimates
plm1 <- plm(formula_plm1, data = dfs_long, model = "random")
plm2 <- plm(formula_plm2, data = dfs_long, model = "random")
plm3 <- plm(formula_plm3, data = dfs_long, model = "random")
stargazer(plm1, plm2, plm3)
# Stargazer Table with Corrected Bootstrapped Standard Errors
stargazer(plm1, plm2, plm3,
se = se_list_boot,
type = "html",  # Change to "html" or "latex" if needed
title = "Random Effects Panel Models",
#order = c(1, 2, 3, 4, 5, 6, 7, 12, 8, 9, 10, 11, 13 ),
star.cutoffs = c(0.05, 0.01, 0.001),
notes = paste0("Bootstrapped SEs of ", B , " samples of expt. matching groups (TURF group for M1-2, OA group M3-4)."),
notes.align = "l",
out = paste0(path_github, "Outputs/model_pre_reg_boot_SA.html")
)
# Convert panel data correctly
dfs_long <- pdata.frame(dfs_long, index = c("participant.code.plm", "round.plm"))
set.seed(62354)
###############################
###### Shared area models
###############################
formula_plm1 <- compliance_extraction_OA ~ compliance_lag_extraction_others_OA_mean +
compliance_beliefs_OA_caleta + compliance_beliefs_OA_others +
treatment + minority
formula_plm2 <- compliance_extraction_OA ~ compliance_lag_extraction_others_OA_mean +
compliance_beliefs_OA_caleta + compliance_beliefs_OA_others +
treatment + minority +
survey1.1.player.confianza_pm + survey1.1.player.conflicto_pm + survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta
formula_plm3 <- compliance_extraction_OA ~ compliance_lag_extraction_others_OA_mean +
compliance_beliefs_OA_caleta + compliance_beliefs_OA_others +
treatment + minority +
survey1.1.player.confianza_pm + survey1.1.player.conflicto_pm + survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta +
survey3.1.player.sexo + survey3.1.player.horas_trabajo +
survey3.1.player.estudios + survey3.1.player.liderazgo
# Run bootstrap with correct cluster resampling
boot_se_plm1 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm1, cluster_var = "participant.code")
boot_se_plm2 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm2, cluster_var = "participant.code")
boot_se_plm3 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm3, cluster_var = "participant.code")
# Extract Bootstrapped SEs
se_list_boot <- list(apply(boot_se_plm1$t, 2, sd),
apply(boot_se_plm2$t, 2, sd),
apply(boot_se_plm3$t, 2, sd)
)
# Fit models on full dataset to get coefficient estimates
plm1 <- plm(formula_plm1, data = dfs_long, model = "random")
plm2 <- plm(formula_plm2, data = dfs_long, model = "random")
plm3 <- plm(formula_plm3, data = dfs_long, model = "random")
stargazer(plm1, plm2, plm3)
# Stargazer Table with Corrected Bootstrapped Standard Errors
stargazer(plm1, plm2, plm3,
se = se_list_boot,
type = "html",  # Change to "html" or "latex" if needed
title = "Random Effects Panel Models",
#order = c(1, 2, 3, 4, 5, 6, 7, 12, 8, 9, 10, 11, 13 ),
star.cutoffs = c(0.05, 0.01, 0.001),
notes = paste0("Bootstrapped SEs of ", B , " samples of expt. matching groups (TURF group for M1-2, OA group M3-4)."),
notes.align = "l",
out = paste0(path_github, "Outputs/model_pre_reg_boot_SA.html")
)
formula_plm1 <- compliance_extraction_OA ~ compliance_lag_extraction_others_OA_mean +
compliance_beliefs_OA_caleta + compliance_beliefs_OA_others +
treatment + minority
formula_plm2 <- compliance_extraction_OA ~ compliance_lag_extraction_others_OA_mean +
compliance_beliefs_OA_caleta + compliance_beliefs_OA_others +
treatment + minority +
survey1.1.player.confianza_pm + survey1.1.player.conflicto_pm + survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta
formula_plm3 <- compliance_extraction_OA ~ compliance_lag_extraction_others_OA_mean +
compliance_beliefs_OA_caleta + compliance_beliefs_OA_others +
treatment + minority +
survey1.1.player.confianza_pm + survey1.1.player.conflicto_pm + survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta +
survey3.1.player.sexo + survey3.1.player.horas_trabajo +
survey3.1.player.estudios + survey3.1.player.liderazgo
# Run bootstrap with correct cluster resampling
boot_se_plm1 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm1, cluster_var = "gid.treat")
boot_se_plm2 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm2, cluster_var = "gid.treat")
boot_se_plm3 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm3, cluster_var = "gid.treat")
# Extract Bootstrapped SEs
se_list_boot <- list(apply(boot_se_plm1$t, 2, sd),
apply(boot_se_plm2$t, 2, sd),
apply(boot_se_plm3$t, 2, sd)
)
# Fit models on full dataset to get coefficient estimates
plm1 <- plm(formula_plm1, data = dfs_long, model = "random")
plm2 <- plm(formula_plm2, data = dfs_long, model = "random")
plm3 <- plm(formula_plm3, data = dfs_long, model = "random")
#stargazer(plm1, plm2, plm3)
# Stargazer Table with Corrected Bootstrapped Standard Errors
stargazer(plm1, plm2, plm3,
se = se_list_boot,
type = "html",  # Change to "html" or "latex" if needed
title = "Random Effects Panel Models",
#order = c(1, 2, 3, 4, 5, 6, 7, 12, 8, 9, 10, 11, 13 ),
star.cutoffs = c(0.05, 0.01, 0.001),
notes = paste0("Bootstrapped SEs of ", B , " samples of expt. matching groups (TURF group for M1-2, OA group M3-4)."),
notes.align = "l",
out = paste0(path_github, "Outputs/model_pre_reg_boot_SA.html")
)
formula_plm1 <- compliance_extraction_OA ~ compliance_lag_extraction_others_OA_mean +
compliance_beliefs_OA_caleta + compliance_beliefs_OA_others +
treatment + minority
formula_plm2 <- compliance_extraction_OA ~ compliance_lag_extraction_others_OA_mean +
compliance_beliefs_OA_caleta + compliance_beliefs_OA_others +
treatment + minority +
survey1.1.player.confianza_pm + survey1.1.player.conflicto_pm + survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta
formula_plm3 <- compliance_extraction_OA ~ compliance_lag_extraction_others_OA_mean +
#compliance_beliefs_OA_caleta + compliance_beliefs_OA_others +
treatment + minority +
survey1.1.player.confianza_pm + survey1.1.player.conflicto_pm + survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta
formula_plm4 <- compliance_extraction_OA ~ compliance_lag_extraction_others_OA_mean +
compliance_beliefs_OA_caleta*treatment + compliance_beliefs_OA_others*treatment +
treatment + minority
# Run bootstrap with correct cluster resampling
boot_se_plm1 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm1, cluster_var = "gid.treat")
boot_se_plm2 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm2, cluster_var = "gid.treat")
boot_se_plm3 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm3, cluster_var = "gid.treat")
boot_se_plm4 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm4, cluster_var = "gid.treat")
# Extract Bootstrapped SEs
se_list_boot <- list(apply(boot_se_plm1$t, 2, sd),
apply(boot_se_plm2$t, 2, sd),
apply(boot_se_plm3$t, 2, sd),
apply(boot_se_plm4$t, 2, sd)
)
# Fit models on full dataset to get coefficient estimates
plm1 <- plm(formula_plm1, data = dfs_long, model = "random")
plm2 <- plm(formula_plm2, data = dfs_long, model = "random")
plm3 <- plm(formula_plm3, data = dfs_long, model = "random")
plm4 <- plm(formula_plm4, data = dfs_long, model = "random")
#stargazer(plm1, plm2, plm3)
# Stargazer Table with Corrected Bootstrapped Standard Errors
stargazer(plm1, plm2, plm3, plm4,
se = se_list_boot,
type = "html",  # Change to "html" or "latex" if needed
title = "Random Effects Panel Models",
#order = c(1, 2, 3, 4, 5, 6, 7, 12, 8, 9, 10, 11, 13 ),
star.cutoffs = c(0.05, 0.01, 0.001),
notes = paste0("Bootstrapped SEs of ", B , " samples of expt. matching groups (TURF group for M1-2, OA group M3-4)."),
notes.align = "l",
out = paste0(path_github, "Outputs/model_pre_reg_boot_SA.html")
)
# Stargazer Table with Corrected Bootstrapped Standard Errors
stargazer(plm1, plm2, plm3, plm4,
se = se_list_boot,
type = "html",  # Change to "html" or "latex" if needed
title = "Random Effects Panel Models",
#order = c(1, 2, 3, 4, 5, 6, 7, 12, 8, 9, 10, 11, 13 ),
star.cutoffs = c(0.05, 0.01, 0.001),
notes = paste0("Bootstrapped SEs of ", B , " samples of expt. matching groups (TURF group for M1-2, OA group M3-4)."),
notes.align = "l",
out = paste0(path_github, "Outputs/model_pre_reg_boot_SA_alternative.html")
)
# Run bootstrap with correct cluster resampling
boot_se_plm1 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm1, cluster_var = "participant.code")
boot_se_plm2 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm2, cluster_var = "participant.code")
boot_se_plm3 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm3, cluster_var = "participant.code")
boot_se_plm4 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm4, cluster_var = "participant.code")
# Extract Bootstrapped SEs
se_list_boot <- list(apply(boot_se_plm1$t, 2, sd),
apply(boot_se_plm2$t, 2, sd),
apply(boot_se_plm3$t, 2, sd),
apply(boot_se_plm4$t, 2, sd)
)
# Fit models on full dataset to get coefficient estimates
plm1 <- plm(formula_plm1, data = dfs_long, model = "random")
plm2 <- plm(formula_plm2, data = dfs_long, model = "random")
plm3 <- plm(formula_plm3, data = dfs_long, model = "random")
plm4 <- plm(formula_plm4, data = dfs_long, model = "random")
#stargazer(plm1, plm2, plm3)
# Stargazer Table with Corrected Bootstrapped Standard Errors
stargazer(plm1, plm2, plm3, plm4,
se = se_list_boot,
type = "html",  # Change to "html" or "latex" if needed
title = "Random Effects Panel Models",
#order = c(1, 2, 3, 4, 5, 6, 7, 12, 8, 9, 10, 11, 13 ),
star.cutoffs = c(0.05, 0.01, 0.001),
notes = paste0("Bootstrapped SEs of ", B , " samples of expt. matching groups (TURF group for M1-2, OA group M3-4)."),
notes.align = "l",
out = paste0(path_github, "Outputs/model_pre_reg_boot_SA_alternative.html")
)
formula_plm1 <- compliance_extraction_OA ~ compliance_lag_extraction_others_OA_mean +
compliance_beliefs_OA_caleta + compliance_beliefs_OA_others +
treatment + minority
formula_plm2 <- compliance_extraction_OA ~ compliance_lag_extraction_others_OA_mean +
compliance_beliefs_OA_caleta + compliance_beliefs_OA_others +
treatment + minority +
survey1.1.player.confianza_pm + survey1.1.player.conflicto_pm + survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta
formula_plm3 <- compliance_extraction_OA ~ compliance_lag_extraction_others_OA_mean +
#compliance_beliefs_OA_caleta + compliance_beliefs_OA_others +
treatment + minority +
survey1.1.player.confianza_pm + survey1.1.player.conflicto_pm + survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta
formula_plm4 <- compliance_extraction_OA ~ compliance_lag_extraction_others_OA_mean +
compliance_beliefs_OA_caleta + compliance_beliefs_OA_others*treatment +
treatment + minority
# Run bootstrap with correct cluster resampling
boot_se_plm1 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm1, cluster_var = "participant.code")
boot_se_plm2 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm2, cluster_var = "participant.code")
boot_se_plm3 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm3, cluster_var = "participant.code")
boot_se_plm4 <- boot(data = dfs_long, statistic = bootstrap_model, R = B,
model_formula = formula_plm4, cluster_var = "participant.code")
# Extract Bootstrapped SEs
se_list_boot <- list(apply(boot_se_plm1$t, 2, sd),
apply(boot_se_plm2$t, 2, sd),
apply(boot_se_plm3$t, 2, sd),
apply(boot_se_plm4$t, 2, sd)
)
# Fit models on full dataset to get coefficient estimates
plm1 <- plm(formula_plm1, data = dfs_long, model = "random")
plm2 <- plm(formula_plm2, data = dfs_long, model = "random")
plm3 <- plm(formula_plm3, data = dfs_long, model = "random")
plm4 <- plm(formula_plm4, data = dfs_long, model = "random")
#stargazer(plm1, plm2, plm3)
# Stargazer Table with Corrected Bootstrapped Standard Errors
stargazer(plm1, plm2, plm3, plm4,
se = se_list_boot,
type = "html",  # Change to "html" or "latex" if needed
title = "Random Effects Panel Models",
#order = c(1, 2, 3, 4, 5, 6, 7, 12, 8, 9, 10, 11, 13 ),
star.cutoffs = c(0.05, 0.01, 0.001),
notes = paste0("Bootstrapped SEs of ", B , " samples of expt. matching groups (TURF group for M1-2, OA group M3-4)."),
notes.align = "l",
out = paste0(path_github, "Outputs/model_pre_reg_boot_SA_alternative.html")
# Load necessary libraries
library(dplyr)
# Load necessary libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(stargazer)
library(sandwich)   # For robust and clustered standard errors
library(lmtest)
library(lme4)
library(modelsummary)
library(tinytable)
library(rlang)
library(pandoc)
if (!requireNamespace("semPlot", quietly = TRUE)) install.packages("semPlot")
if (!requireNamespace("lavaan", quietly = TRUE)) install.packages("lavaan")
library(lavaan)
library(semPlot)
rm(list=ls())
path_github <-"C:/Users/DCCS2/Documents/GitHub/Multi-level-collective-action-in-small-scale-fisheries/Exptal Sessions/R/"
path_datos<-"C:/Users/DCCS2/Dropbox/CICS/Experiments/Islitas/Data/Sessions"
#path_github <-"C:/Users/Denise Laroze/Documents/GitHub/Multi-level-collective-action-in-small-scale-fisheries/Exptal Sessions/R/"
#path_datos<-"C:/Users/Denise Laroze/Dropbox/CICS/Experiments/Islitas/Data/Sessions"
setwd(path_github)
#load(paste0(path_datos, "/Datos_islitas.Rdata"))
load(paste0(path_datos, "/Datos_islitas_recode.Rdata"))
load(paste0(path_datos, "/Datos_islitas_long.Rdata"))
df_long_ext <- dfs_long %>%
pivot_longer(
cols = c(extraction_amerb, extraction_OA),
names_to = "area",
values_to = "extraction"
) %>%
mutate(
# simplify area labels
area = recode(
area,
extraction_amerb = "TURF",
extraction_OA    = "Shared_Area"
),
# compute compliance
compliance = 1 - (extraction / 50)
)
View(df_long_ext)
did_df <- df_long_ext %>%
group_by(participant.code, treat.area) %>%
summarise(mean_comp = mean(compliance, na.rm = TRUE), .groups = "drop") %>%
pivot_wider(
names_from = treat.area,
values_from = mean_comp
) %>%
mutate(
diff_turf   = TURF_T2 - TURF_T1,
diff_shared = `Shared Area_T2` - `Shared Area_T1`,
DiD         = diff_turf - diff_shared
)
did_df <- df_long_ext %>%
group_by(participant.code, treat.area) %>%
summarise(mean_comp = mean(compliance, na.rm = TRUE), .groups = "drop") %>%
pivot_wider(
names_from = treat.area,
values_from = mean_comp
) %>%
mutate(
diff_turf   = TURF_T2 - TURF_T1,
diff_shared = Shared_Area_T2 - Shared_Area_T1,
DiD         = diff_turf - diff_shared
)
did_df <- df_long_ext %>%
group_by(participant.code, treat_area) %>%
summarise(mean_comp = mean(compliance, na.rm = TRUE), .groups = "drop") %>%
pivot_wider(
names_from = treat.area,
values_from = mean_comp
) %>%
mutate(
diff_turf   = TURF_T2 - TURF_T1,
diff_shared = Shared_Area_T2 - Shared_Area_T1,
DiD         = diff_turf - diff_shared
)
with(df_long_ext, {
treat.area <- paste0(area, "_", treatment)
# Define factor with desired order
treat.area <- factor(treat.area,
levels = c(
"TURF_T1", "TURF_T2",
"Shared_Area_T1", "Shared_Area_T2"
))
# Explicitly relevel to ensure baseline
treat.area <- relevel(treat.area, ref = "TURF_T1")
df_long_ext$treat.area <<- treat.area
})
did_df <- df_long_ext %>%
group_by(participant.code, treat.area) %>%
summarise(mean_comp = mean(compliance, na.rm = TRUE), .groups = "drop") %>%
pivot_wider(
names_from = treat.area,
values_from = mean_comp
) %>%
mutate(
diff_turf   = TURF_T2 - TURF_T1,
diff_shared = Shared_Area_T2 - Shared_Area_T1,
DiD         = diff_turf - diff_shared
)
# View the first few rows of DiD calculations
print(head(did_df))
# 9. Test if mean DiD differs from zero
# 9a. One-sample t-test
t_test_did <- t.test(did_df$DiD, mu = 0)
cat("One-sample t-test for DiD ≠ 0:
")
print(t_test_did)
# 9b. Wilcoxon signed-rank test (non-parametric)
wilcox_did <- wilcox.test(did_df$DiD, mu = 0)
cat("Wilcoxon signed-rank test for DiD ≠ 0:
")
print(wilcox_did)
