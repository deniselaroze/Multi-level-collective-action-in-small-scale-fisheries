)
# Added shape palette
predictor_shapes <- setNames(
c(16, 17, 15, 18, 4, 3, 8), # A set of distinct shapes
all_predictor_labels
)
# --- 2. Iterative Analysis for Compliance in TURF (Known Outsiders) ---
################################################
#### TURF Rounds 2-8 (Stage 2)
################################################
set.seed(53698)
# SEM fit function for the full TURF model
coef_TURF_T2_sem <- function(data, R, N) {
# Compute averages and compliance for the given window (R to N)
cols_t2 <- declare_get_columns("T2juegoalgas", "extraccion_amerb", R, N, data)
subset_ini <- data[, cols_t2, drop = FALSE]
data$average_extraction_ini  <- rowMeans(subset_ini, na.rm = TRUE)
data$average_compliance_ini  <- 1 - data$average_extraction_ini / 50
data$belief_compliance_amerb <- 1 - data$beliefsT1final.1.player.T1_belief_caleta_en_amerb_fin / 50
# Lagged observed compliance from the previous round (R-1)
if (R > 1) {
cols_obs <- declare_get_columns("T2juegoalgas", "extraccion_otros_amerb", R - 1, R - 1, data)
subset_obs <- data[, cols_obs, drop = FALSE]
data$average_extraction_observed_ini      <- rowMeans(subset_obs, na.rm = TRUE)
data$average_compliance_observed_ini_lag <- 1 - data$average_extraction_observed_ini / (50 * length(cols_obs))
} else {
data$average_compliance_observed_ini_lag <- NA
}
# SEM model specification for TURF
sem_model <- '
# Belief formation
belief_compliance_amerb ~ survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta
# Compliance
average_compliance_ini    ~ belief_compliance_amerb + survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta + average_compliance_observed_ini_lag
# Covariance constraint
average_compliance_observed_ini_lag ~~ 0*belief_compliance_amerb
'
# Fit SEM with bootstrap standard errors
fit <- sem(sem_model,
data      = data,
estimator = "ML",
se        = "bootstrap",
bootstrap = 200,
parallel  = "multicore",
ncpus     = 4,
warn      = FALSE)
return(fit)
}
# Loop over rounds 2:8, collect ALL coefficients
round_vals_t2 <- 2:8
N_t2 <- 8
sem_results_TURF_t2 <- data.frame(
round  = integer(),
lhs    = character(),
rhs    = character(),
est    = numeric(),
se     = numeric(),
pvalue = numeric(),
stringsAsFactors = FALSE
)
for (R in round_vals_t2) {
fit <- coef_TURF_T2_sem(df, R, N_t2)
pe  <- parameterEstimates(fit)
all_coefs <- subset(pe, op == "~",
select = c("lhs", "rhs", "est", "se", "pvalue"))
if (nrow(all_coefs) > 0) {
all_coefs$round <- R
all_coefs$endR <- N_t2
sem_results_TURF_t2 <- rbind(sem_results_TURF_t2, all_coefs)
}
}
set.seed(53698)
# SEM fit function, returns lavaan fit
coef_TURF_T2_sem <- function(data, R, N) {
# compute averages and compliance
cols_t1 <- declare_get_columns("T2juegoalgas", "T2_extraccion_amerb", R, N, data)
subset_ini <- data[, cols_t1, drop = FALSE]
data$average_extraction_ini   <- rowMeans(subset_ini, na.rm = TRUE)
data$average_compliance_ini   <- 1 - data$average_extraction_ini / 50
data$belief_compliance_amerb  <- 1 - data$beliefsT1final.1.player.T1_belief_caleta_en_amerb_fin / 50
# lagged observed compliance
if (R > 1) {
cols_obs <- declare_get_columns("T2juegoalgas", "T2_extraccion_otros_amerb", R - 1, R - 1, data)
subset_obs <- data[, cols_obs, drop = FALSE]
data$average_extraction_observed_ini     <- rowMeans(subset_obs, na.rm = TRUE)
data$average_compliance_observed_ini_lag <- 1 - data$average_extraction_observed_ini / (50 * length(cols_obs))
} else {
data$average_compliance_observed_ini_lag <- NA
}
# specify SEM
sem_model <- '
belief_compliance_amerb ~ survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta
average_compliance_ini    ~ belief_compliance_amerb + survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta + average_compliance_observed_ini_lag
average_compliance_observed_ini_lag ~~ 0*belief_compliance_amerb
'
# fit
fit <- sem(sem_model,
data      = data,
estimator = "ML",
se        = "bootstrap",
bootstrap = 200,
parallel  = "multicore",
ncpus     = 4)
return(fit)
}
# Loop over rounds 2:8, collect significant coefficients
round_vals  <- 2:8
N<-8
sem_results <- data.frame(
round  = integer(),
lhs    = character(),
rhs    = character(),
est    = numeric(),
se     = numeric(),
pvalue = numeric(),
stringsAsFactors = FALSE
)
for (R in round_vals) {
fit <- coef_TURF_T2_sem(df, R, N)
pe  <- parameterEstimates(fit)
sig <- subset(pe, op == "~" & pvalue < 0.05,
select = c("lhs","rhs","est","se","pvalue"))
if (nrow(sig) > 0) {
sig$round <- R
sig$endR<-N
sem_results <- rbind(sem_results, sig)
}
}
sem_results$label<-paste0("Mean rounds ",sem_results$round,"-",sem_results$endR)
# Split results by outcome
compliance_results <- subset(sem_results, lhs == "average_compliance_ini")
belief_results     <- subset(sem_results, lhs == "belief_compliance_amerb")
cols <- viridis(3, option = "D")
desired_cols <- cols[c(1,2)]  # purple & mid
# Plot compliance coefficients with 95% CIs
compliance_results$round <- factor(compliance_results$round, levels = rev(round_vals))
compliance_results$rhs   <- factor(compliance_results$rhs, levels = unique(compliance_results$rhs))
p <- ggplot(compliance_results, aes(x = est, y = label, color = rhs)) +
geom_vline(xintercept = 0, linetype = "dashed", size = 0.6) +
geom_point(position = position_dodge(width = 0.5), size = 2) +
geom_errorbarh(aes(xmin = est - 1.96 * se, xmax = est + 1.96 * se),
position = position_dodge(width = 0.5), height = 0.2, size = 0.8) +
scale_x_continuous(limits = c(-0.5, 1)) +
scale_color_viridis_d(name = "Predictor",
labels = c(
"belief_compliance_amerb" = "Prior Beliefs",
"average_compliance_ini" = "Compliance",
"survey1.1.player.conflicto_caleta" = "Conflict TURF",
"average_compliance_observed_ini_lag" = "Updated Beliefs"
), option = "D") +
labs(title = "Compliance in TURF Rounds 9 to 16",
y = "Round",
x = "Coefficient (95% CI)") +
theme_minimal() +
theme(panel.border = element_rect(color = "black", fill = NA, size = 0.5))
print(p)
ggsave(file = paste0(path_github, "Outputs/Multiple_Coef_SEM_T2_Turf.pdf"),
plot = p, device = "pdf", width = 10, height = 8)
library(lavaan)
library(semPlot)
library(ggplot2)
library(viridis)
library(patchwork) # For combining plots
library(RColorBrewer)
rm(list = ls())
# --- 1. Setup: Paths, Data, Colors, and Shapes ---
# Ensure these paths are correct for your system
path_github <- "C:/Users/DCCS2/Documents/GitHub/Multi-level-collective-action-in-small-scale-fisheries/Exptal Sessions/R/"
path_datos  <- "C:/Users/DCCS2/Dropbox/CICS/Experiments/Islitas/Data/Sessions"
# Load data
load(paste0(path_datos, "/Datos_islitas_recode.Rdata")) # expects object 'df'
load(paste0(path_datos, "/Datos_islitas_long.Rdata"))   # expects object 'df_long'
# Helper function
declare_get_columns <- function(prefix, suffix, start, end = NULL, data) {
if (is.null(end)) end <- start
rounds <- start:end
cols <- unlist(lapply(rounds, function(r) {
patt <- paste0("^", prefix, "\\.", r, "\\.player\\.", suffix, "$")
grep(patt, names(data), value = TRUE)
}))
if (length(cols) == 0) message("No matching columns for ", prefix, suffix, " rounds ", start, "-", end)
return(cols)
}
# Define consistent labels, colors, and shapes for all plots
all_predictor_labels <- c(
"Trust Insiders", "Conflict Insiders",
"Trust Outsiders", "Conflict Outsiders",
"Prior Beliefs Insiders", "Prior Beliefs Outsiders",
"Updated Beliefs"
)
high_contrast_palette <- brewer.pal(n = 8, name = "Paired")[c(1:4, 6:8)]
predictor_colors <- setNames(high_contrast_palette, all_predictor_labels)
predictor_shapes <- setNames(c(16, 17, 15, 18, 4, 3, 8), all_predictor_labels)
############################################
# ANALYSIS FOR T1 (Original Code)
############################################
# --- 2. T1 TURF Compliance (Rounds 2-8) ---
set.seed(53698)
coef_TURF_T1_sem <- function(data, R, N) {
cols_t1 <- declare_get_columns("T1juegoalgas", "T1_extraccion_amerb", R, N, data)
data$average_extraction_ini <- rowMeans(data[, cols_t1, drop = FALSE], na.rm = TRUE)
data$average_compliance_ini <- 1 - data$average_extraction_ini / 50
data$belief_compliance_amerb <- 1 - data$beliefsT1inicial.1.player.T1_belief_caleta_en_amerb_ini / 50
if (R > 1) {
cols_obs <- declare_get_columns("T1juegoalgas", "T1_extraccion_otros_amerb", R - 1, R - 1, data)
data$average_extraction_observed_ini <- rowMeans(data[, cols_obs, drop = FALSE], na.rm = TRUE)
data$average_compliance_observed_ini_lag <- 1 - data$average_extraction_observed_ini / (50 * length(cols_obs))
} else {
data$average_compliance_observed_ini_lag <- NA
}
sem_model <- '
belief_compliance_amerb ~ survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta
average_compliance_ini ~ belief_compliance_amerb + survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta + average_compliance_observed_ini_lag
average_compliance_observed_ini_lag ~~ 0*belief_compliance_amerb
'
fit <- sem(sem_model, data = data, estimator = "ML", se = "bootstrap", bootstrap = 200, parallel = "multicore", ncpus = 4)
return(fit)
}
round_vals_T1 <- 2:8
N_T1 <- 8
sem_results_TURF <- data.frame()
for (R in round_vals_T1) {
fit <- coef_TURF_T1_sem(df, R, N_T1)
pe <- parameterEstimates(fit)
all_coefs <- subset(pe, op == "~", select = c("lhs", "rhs", "est", "se", "pvalue"))
if (nrow(all_coefs) > 0) {
all_coefs$round <- R
all_coefs$endR <- N_T1
sem_results_TURF <- rbind(sem_results_TURF, all_coefs)
}
}
sem_results_TURF$label <- paste0("Mean rounds ", sem_results_TURF$round, "-", sem_results_TURF$endR)
compliance_results_TURF <- subset(sem_results_TURF, lhs == "average_compliance_ini")
label_order_T1 <- paste0("Mean rounds ", rev(round_vals_T1), "-", N_T1)
compliance_results_TURF$label <- factor(compliance_results_TURF$label, levels = label_order_T1)
compliance_results_TURF$Significance <- ifelse(compliance_results_TURF$pvalue < 0.05, "p < 0.05", "p >= 0.05")
turf_compliance_labels <- c("belief_compliance_amerb" = "Prior Beliefs Insiders", "survey1.1.player.conflicto_caleta" = "Conflict Insiders", "survey1.1.player.confianza_caleta" = "Trust Insiders", "average_compliance_observed_ini_lag" = "Updated Beliefs")
compliance_results_TURF$Predictor <- factor(turf_compliance_labels[compliance_results_TURF$rhs], levels = all_predictor_labels)
# PLOT for T1 TURF Compliance
p_compliance_TURF <- ggplot(compliance_results_TURF, aes(x = est, y = label, color = Predictor, shape = Predictor, alpha = Significance)) +
geom_vline(xintercept = 0, linetype = "dashed", size = 0.6) +
geom_point(position = position_dodge(width = 0.5), size = 2.5) +
geom_errorbarh(aes(xmin = est - 1.96 * se, xmax = est + 1.96 * se), position = position_dodge(width = 0.5), height = 0.2, size = 0.8) +
scale_x_continuous(limits = c(-0.4, 0.7)) +
scale_color_manual(values = predictor_colors, name = "Predictor", drop = FALSE) +
scale_shape_manual(values = predictor_shapes, name = "Predictor", drop = FALSE) +
scale_alpha_manual(values = c("p < 0.05" = 1.0, "p >= 0.05" = 0.4), guide = "none") +
labs(title = "Compliance in TURF (Rounds 2-8)", y = "Averaging Window", x = "Coefficient (95% CI)") +
theme_minimal() +
theme(panel.border = element_rect(color = "black", fill = NA, size = 0.5), plot.title = element_text(size = 14, face = "bold"), axis.title = element_text(size = 12), axis.text = element_text(size = 11), legend.title = element_text(face = "bold", size = 12))
# --- 3. T1 Shared Area Compliance (Rounds 2-8) ---
# (Assuming the original code for this section is unchanged and correct)
# For brevity, we'll assume the p_compliance_SA plot object is created just like in the original script.
# ... [Original code for coef_SA_T1_sem, the loop, and ggplot for p_compliance_SA] ...
# NOTE: The full code from the original prompt for this section would go here.
# --- 4. Belief Formation (Combined for T1 and T2) ---
# This section is now updated to include the T2 beliefs
parallel_type <- if (.Platform$OS.type == "windows") "snow" else "multicore"
# T1 Beliefs (original)
sem_model_beliefs_SA <- '
belief_compliance_pm    ~ survey1.1.player.confianza_pm + survey1.1.player.conflicto_pm
belief_compliance_union ~ survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta
'
df$belief_compliance_pm <- 1 - df$beliefsT1inicial.1.player.T1_belief_pm_en_libre_ini / 50
df$belief_compliance_union <- 1 - df$beliefsT1inicial.1.player.T1_belief_caleta_en_libre_ini / 50
fit_bel_SA <- sem(sem_model_beliefs_SA, data = df, estimator = "ML", se = "bootstrap", bootstrap = 200, parallel = parallel_type, ncpus = 4)
pe_bel_SA <- parameterEstimates(fit_bel_SA)
bel_SA <- subset(pe_bel_SA, op == "~", select = c("lhs", "rhs", "est", "se", "pvalue"))
# ... [Original code for bel_TURF] ...
# ### MODIFICATION: ADDED BELIEF MODEL FOR T2 PRIORS ###
sem_model_beliefs_TURF_T2 <- '
belief_compliance_amerb_fin ~ survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta
'
df$belief_compliance_amerb_fin <- 1 - df$beliefsT1final.1.player.T1_belief_caleta_en_amerb_fin / 50
fit_bel_TURF_T2 <- sem(sem_model_beliefs_TURF_T2, data = df, estimator = "ML", se = "bootstrap", bootstrap = 200, parallel = parallel_type, ncpus = 4)
pe_bel_TURF_T2 <- parameterEstimates(fit_bel_TURF_T2)
bel_TURF_T2 <- subset(pe_bel_TURF_T2, op == "~", select = c("lhs", "rhs", "est", "se", "pvalue"))
# Assign labels
pred_labs_TURF <- c("survey1.1.player.confianza_caleta" = "Trust Insiders", "survey1.1.player.conflicto_caleta" = "Conflict Insiders")
bel_TURF_T2$Predictor <- factor(pred_labs_TURF[bel_TURF_T2$rhs], levels = all_predictor_labels)
bel_TURF_T2$Outcome <- "Beliefs for TURF T2 (End of T1)"
# Combine all belief results
# We assume bel_TURF and bel_SA are created as in the original script
# all_beliefs <- rbind(bel_TURF, bel_SA, bel_TURF_T2)
# ... [rest of the belief plot code from original script] ...
######################################################################
# ### NEW SECTION: ANALYSIS FOR T2 TURF (ROUNDS 9-16) ###
######################################################################
set.seed(53698)
# SEM fit function for T2 TURF
coef_TURF_T2_sem <- function(data, R, N) {
cols_t2 <- declare_get_columns("T2juegoalgas", "T2_extraccion_amerb", R, N, data)
data$average_extraction_ini <- rowMeans(data[, cols_t2, drop = FALSE], na.rm = TRUE)
data$average_compliance_ini <- 1 - data$average_extraction_ini / 50
# Note the belief variable used here is from the end of T1
data$belief_compliance_amerb <- 1 - data$beliefsT1final.1.player.T1_belief_caleta_en_amerb_fin / 50
# Lagged observed compliance from the previous T2 round
if (R > 9) { # Lag must be within T2, so R must be > starting round (9)
cols_obs <- declare_get_columns("T2juegoalgas", "T2_extraccion_otros_amerb", R - 1, R - 1, data)
data$average_extraction_observed_ini <- rowMeans(data[, cols_obs, drop = FALSE], na.rm = TRUE)
data$average_compliance_observed_ini_lag <- 1 - data$average_extraction_observed_ini / (50 * length(cols_obs))
} else {
data$average_compliance_observed_ini_lag <- NA
}
sem_model <- '
belief_compliance_amerb ~ survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta
average_compliance_ini ~ belief_compliance_amerb + survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta + average_compliance_observed_ini_lag
average_compliance_observed_ini_lag ~~ 0*belief_compliance_amerb
'
fit <- sem(sem_model, data = data, estimator = "ML", se = "bootstrap", bootstrap = 200, parallel = "multicore", ncpus = 4)
return(fit)
}
# CORRECTED Loop over rounds 9:16 and collect ALL coefficients
round_vals_T2 <- 10:16 # Start from 10 to have at least one lagged observation
N_T2 <- 16
sem_results_TURF_T2 <- data.frame()
for (R in round_vals_T2) {
fit <- coef_TURF_T2_sem(df, R, N_T2)
pe <- parameterEstimates(fit)
# MODIFICATION: Collect ALL coefficients, not just significant ones
all_coefs <- subset(pe, op == "~", select = c("lhs", "rhs", "est", "se", "pvalue"))
if (nrow(all_coefs) > 0) {
all_coefs$round <- R
all_coefs$endR <- N_T2
sem_results_TURF_T2 <- rbind(sem_results_TURF_T2, all_coefs)
}
}
set.seed(53698)
# SEM fit function for T2 TURF
coef_TURF_T2_sem <- function(data, R, N) {
cols_t2 <- declare_get_columns("T2juegoalgas", "T2_extraccion_amerb", R, N, data)
data$average_extraction_ini <- rowMeans(data[, cols_t2, drop = FALSE], na.rm = TRUE)
data$average_compliance_ini <- 1 - data$average_extraction_ini / 50
# Note the belief variable used here is from the end of T1
data$belief_compliance_amerb <- 1 - data$beliefsT1final.1.player.T1_belief_caleta_en_amerb_fin / 50
# Lagged observed compliance from the previous T2 round
if (R > 8) { # Lag must be within T2, so R must be > starting round (9)
cols_obs <- declare_get_columns("T2juegoalgas", "T2_extraccion_otros_amerb", R - 1, R - 1, data)
data$average_extraction_observed_ini <- rowMeans(data[, cols_obs, drop = FALSE], na.rm = TRUE)
data$average_compliance_observed_ini_lag <- 1 - data$average_extraction_observed_ini / (50 * length(cols_obs))
} else {
data$average_compliance_observed_ini_lag <- NA
}
sem_model <- '
belief_compliance_amerb ~ survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta
average_compliance_ini ~ belief_compliance_amerb + survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta + average_compliance_observed_ini_lag
average_compliance_observed_ini_lag ~~ 0*belief_compliance_amerb
'
fit <- sem(sem_model, data = data, estimator = "ML", se = "bootstrap", bootstrap = 200, parallel = "multicore", ncpus = 4)
return(fit)
}
# CORRECTED Loop over rounds 9:16 and collect ALL coefficients
round_vals_T2 <- 2:8 # Start from 10 to have at least one lagged observation
N_T2 <- 8
sem_results_TURF_T2 <- data.frame()
for (R in round_vals_T2) {
fit <- coef_TURF_T2_sem(df, R, N_T2)
pe <- parameterEstimates(fit)
# MODIFICATION: Collect ALL coefficients, not just significant ones
all_coefs <- subset(pe, op == "~", select = c("lhs", "rhs", "est", "se", "pvalue"))
if (nrow(all_coefs) > 0) {
all_coefs$round <- R
all_coefs$endR <- N_T2
sem_results_TURF_T2 <- rbind(sem_results_TURF_T2, all_coefs)
}
}
# --- 1. Setup and Libraries ---
l########################################
set.seed(53698)
# SEM fit function, returns lavaan fit
coef_TURF_T2_sem <- function(data, R, N) {
# compute averages and compliance
cols_t1 <- declare_get_columns("T2juegoalgas", "T2_extraccion_amerb", R, N, data)
subset_ini <- data[, cols_t1, drop = FALSE]
data$average_extraction_ini   <- rowMeans(subset_ini, na.rm = TRUE)
data$average_compliance_ini   <- 1 - data$average_ex0traction_ini / 50
data$belief_compliance_amerb  <- 1 - data$beliefsT1inicial.1.player.T1_belief_caleta_en_amerb_ini / 50
# lagged observed compliance
if (R > 1) {
cols_obs <- declare_get_columns("T2juegoalgas", "T2_extraccion_otros_amerb", R - 1, R - 1, data)
subset_obs <- data[, cols_obs, drop = FALSE]
data$average_extraction_observed_ini     <- rowMeans(subset_obs, na.rm = TRUE)
data$average_compliance_observed_ini_lag <- 1 - data$average_extraction_observed_ini / (50 * length(cols_obs))
} else {
data$average_compliance_observed_ini_lag <- NA
}
# specify SEM
sem_model <- '
belief_compliance_amerb ~ survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta
average_compliance_ini    ~ belief_compliance_amerb + survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta + average_compliance_observed_ini_lag
average_compliance_observed_ini_lag ~~ 0*belief_compliance_amerb
'
# fit
fit <- sem(sem_model,
data      = data,
estimator = "ML",
se        = "bootstrap",
bootstrap = 200,
parallel  = "multicore",
ncpus     = 4)
return(fit)
}
# Loop over rounds 2:8, collect significant coefficients
round_vals  <- 2:8
N<-8
sem_results <- data.frame(
round  = integer(),
lhs    = character(),
rhs    = character(),
est    = numeric(),
se     = numeric(),
pvalue = numeric(),
stringsAsFactors = FALSE
)
for (R in round_vals) {
fit <- coef_TURF_T2_sem(df, R, N)
pe  <- parameterEstimates(fit)
sig <- subset(pe, op == "~" & pvalue < 0.05,
select = c("lhs","rhs","est","se","pvalue"))
if (nrow(sig) > 0) {
sig$round <- R
sig$endR<-N
sem_results <- rbind(sem_results, sig)
}
}
set.seed(53698)
# SEM fit function, returns lavaan fit
coef_TURF_T2_sem <- function(data, R, N) {
# compute averages and compliance
cols_t1 <- declare_get_columns("T2juegoalgas", "T2_extraccion_amerb", R, N, data)
subset_ini <- data[, cols_t1, drop = FALSE]
data$average_extraction_ini   <- rowMeans(subset_ini, na.rm = TRUE)
data$average_compliance_ini   <- 1 - data$average_extraction_ini / 50
data$belief_compliance_amerb  <- 1 - data$beliefsT1inicial.1.player.T1_belief_caleta_en_amerb_ini / 50
# lagged observed compliance
if (R > 1) {
cols_obs <- declare_get_columns("T2juegoalgas", "T2_extraccion_otros_amerb", R - 1, R - 1, data)
subset_obs <- data[, cols_obs, drop = FALSE]
data$average_extraction_observed_ini     <- rowMeans(subset_obs, na.rm = TRUE)
data$average_compliance_observed_ini_lag <- 1 - data$average_extraction_observed_ini / (50 * length(cols_obs))
} else {
data$average_compliance_observed_ini_lag <- NA
}
# specify SEM
sem_model <- '
belief_compliance_amerb ~ survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta
average_compliance_ini    ~ belief_compliance_amerb + survey1.1.player.confianza_caleta + survey1.1.player.conflicto_caleta + average_compliance_observed_ini_lag
average_compliance_observed_ini_lag ~~ 0*belief_compliance_amerb
'
# fit
fit <- sem(sem_model,
data      = data,
estimator = "ML",
se        = "bootstrap",
bootstrap = 200,
parallel  = "multicore",
ncpus     = 4)
return(fit)
}
# Loop over rounds 2:8, collect significant coefficients
round_vals  <- 2:8
N<-8
sem_results <- data.frame(
round  = integer(),
lhs    = character(),
rhs    = character(),
est    = numeric(),
se     = numeric(),
pvalue = numeric(),
stringsAsFactors = FALSE
)
for (R in round_vals) {
fit <- coef_TURF_T2_sem(df, R, N)
pe  <- parameterEstimates(fit)
sig <- subset(pe, op == "~" & pvalue < 0.05,
select = c("lhs","rhs","est","se","pvalue"))
if (nrow(sig) > 0) {
sig$round <- R
sig$endR<-N
sem_results <- rbind(sem_results, sig)
}
}
sem_results$label<-paste0("Mean rounds ",sem_results$round,"-",sem_results$endR)
# Split results by outcome
compliance_results <- subset(sem_results, lhs == "average_compliance_ini")
belief_results     <- subset(sem_results, lhs == "belief_compliance_amerb")
cols <- viridis(3, option = "D")
desired_cols <- cols[c(1,2)]  # purple & mid
# Plot compliance coefficients with 95% CIs
compliance_results$round <- factor(compliance_results$round, levels = rev(round_vals))
compliance_results$rhs   <- factor(compliance_results$rhs, levels = unique(compliance_results$rhs))
p <- ggplot(compliance_results, aes(x = est, y = label, color = rhs)) +
geom_vline(xintercept = 0, linetype = "dashed", size = 0.6) +
geom_point(position = position_dodge(width = 0.5), size = 2) +
geom_errorbarh(aes(xmin = est - 1.96 * se, xmax = est + 1.96 * se),
position = position_dodge(width = 0.5), height = 0.2, size = 0.8) +
scale_x_continuous(limits = c(-0.5, 1)) +
scale_color_viridis_d(name = "Predictor",
labels = c(
"belief_compliance_amerb" = "Prior Beliefs",
"average_compliance_ini" = "Compliance",
"survey1.1.player.conflicto_caleta" = "Conflict TURF",
"average_compliance_observed_ini_lag" = "Updated Beliefs"
), option = "D") +
labs(title = "Compliance in TURF Rounds 9 to 16",
y = "Round",
x = "Coefficient (95% CI)") +
theme_minimal() +
theme(panel.border = element_rect(color = "black", fill = NA, size = 0.5))
print(p)
ggsave(file = paste0(path_github, "Outputs/Multiple_Coef_SEM_T2_Turf.pdf"),
plot = p, device = "pdf", width = 10, height = 8)
