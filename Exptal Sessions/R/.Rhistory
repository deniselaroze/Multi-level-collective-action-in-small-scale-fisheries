for (j in 1:K) {
plot(ne.power[, j], N / 2, col = colors[j], main = paste("Effect =", effects[j]),
xlim = c(0, 1), ylab = "Number of obs per group", xlab = "Power")
abline(v = 0.8, col = "red", lty = 2)  # Add a red vertical dashed line at x = 0.8
}
rm(list=ls())
#path_github <- "C:/Users/DCCS2/Documents/GitHub/Pensions-Website-Design/Data and analysis/Lab/"
path_datos<-"C:-/Users/DCCS2/Dropbox/R&R Chilean pensions paper/"
#path_datos <- "C:/Users/DCCS2/Dropbox/Sitios web/Datos Laboratorio/Videos/"
path_github <- "C:/Users/DCCS2/Documents/GitHub/Pensions-Website-Design/"
df<-read.csv(paste0(path_datos,"dataset_con_columnas.csv"))
rm(list=ls())
#path_github <- "C:/Users/DCCS2/Documents/GitHub/Pensions-Website-Design/Data and analysis/Lab/"
path_datos<-"C:/Users/DCCS2/Dropbox/R&R Chilean pensions paper/"
#path_datos <- "C:/Users/DCCS2/Dropbox/Sitios web/Datos Laboratorio/Videos/"
path_github <- "C:/Users/DCCS2/Documents/GitHub/Pensions-Website-Design/"
df<-read.csv(paste0(path_datos,"dataset_con_columnas.csv"))
df$Profile_Video<-ifelse(df$sitio=="VideoPerfil", "Profile_Video", "Other")
df$t_perfil <- factor(df$t_perfil, levels = c("producto", "perfil"))
#####################
### Balance
####################
table(df$t_perfil, df$video)
table(df$treatment)
table(df$video)
names(df)
lm1<-lm(Valence2 ~ t_perfil + t_video + Profile_Video , data = df)
lm2<-lm(Arousal2 ~ t_perfil + t_video + Profile_Video , data = df)
lm3<-lm(Happy2 ~ t_perfil + t_video + Profile_Video , data = df)
lm4<-lm(Sad2 ~ t_perfil + t_video + Profile_Video , data = df)
lm5<-lm(Angry2 ~ t_perfil + t_video + Profile_Video , data = df)
lm6<-lm(Surprised2 ~ t_perfil + t_video + Profile_Video , data = df)
lm7<-lm(Scared2 ~ t_perfil + t_video + Profile_Video , data = df)
lm8<-lm(Disgusted2 ~ t_perfil + t_video + Profile_Video , data = df)
stargazer(lm1, lm2, lm3, lm4, lm5, lm6, lm7, lm8)
library(stargazer)
stargazer(lm1, lm2, lm3, lm4, lm5, lm6, lm7, lm8)
stargazer(lm1, lm2, lm3, lm4, lm5, lm6, lm7, lm8, out=paste0(path_datos,"emotions.html"), type="html")
lm1<-lm(Valence1 ~ t_perfil + t_video + Profile_Video , data = df)
lm2<-lm(Arousal1 ~ t_perfil + t_video + Profile_Video , data = df)
lm3<-lm(Happy1 ~ t_perfil + t_video + Profile_Video , data = df)
lm4<-lm(Sad1 ~ t_perfil + t_video + Profile_Video , data = df)
lm5<-lm(Angry1 ~ t_perfil + t_video + Profile_Video , data = df)
lm6<-lm(Surprised1 ~ t_perfil + t_video + Profile_Video , data = df)
lm7<-lm(Scared1 ~ t_perfil + t_video + Profile_Video , data = df)
lm8<-lm(Disgusted1 ~ t_perfil + t_video + Profile_Video , data = df)
stargazer(lm1, lm2, lm3, lm4, lm5, lm6, lm7, lm8)
stargazer(lm1, lm2, lm3, lm4, lm5, lm6, lm7, lm8, out=paste0(path_datos,"emotions.html"), type="html")
lm1<-lm(ValenceX2 ~ t_perfil + t_video + Profile_Video , data = df)
lm2<-lm(ArousalX2 ~ t_perfil + t_video + Profile_Video , data = df)
lm3<-lm(Happy2 ~ t_perfil + t_video + Profile_Video , data = df)
lm4<-lm(Sad2 ~ t_perfil + t_video + Profile_Video , data = df)
lm5<-lm(Angry2 ~ t_perfil + t_video + Profile_Video , data = df)
lm6<-lm(Surprised2 ~ t_perfil + t_video + Profile_Video , data = df)
lm7<-lm(Scared2 ~ t_perfil + t_video + Profile_Video , data = df)
lm8<-lm(Disgusted2 ~ t_perfil + t_video + Profile_Video , data = df)
#stargazer(lm1, lm2, lm3, lm4, lm5, lm6, lm7, lm8)
stargazer(lm1, lm2, lm3, lm4, lm5, lm6, lm7, lm8, out=paste0(path_datos,"emotions.html"), type="html")
,
################################
library(stargazer)
library(MASS)
library(broom)
library(ggpubr)
library(naniar)
library(nnet)
library(lmtest)
library(sandwich)
library(lubridate)
library(dplyr)
library(tidyr)
library(xtable)
#rm(list=ls())
path_github <- "C:/Users/DCCS2/Documents/GitHub/Pensions-Website-Design/Data and analysis/Online/"
path_datos<-"C:/Users/DCCS2/Documents/GitHub/Pensions-Website-Design/Data and analysis/Online/Online Data/"
df <- readRDS(paste0(path_datos, "online_data.rds"))
df.f<-df[!is.na(df$correct_response),]
df.en <- readRDS(paste0(path_datos, "encuestas_clean.rds"))
### Correct Response
lm_CR <- lm(correct_response/7 ~ Profile + Video + Profile_Video + as.factor(financial_lit_b) ,
data = df)
lm_CR2<-coeftest(lm_CR, vcov = vcovHC(lm_CR, type = 'HC0'))
lm_CR_pv <- lm(correct_response/7 ~ Profile + Video + Profile_Video + as.factor(financial_lit_b),
data = df[df$Pension_Type=="Public",])
lm_CR_pv2<-coeftest(lm_CR_pv, vcov = vcovHC(lm_CR_pv, type = 'HC0'))
lm_CR_pp <- lm(correct_response/7 ~ Profile + Video + Profile_Video + as.factor(financial_lit_b),
data = df[df$Pension_Type=="Private",])
lm_CR_pp2<-coeftest(lm_CR_pp, vcov = vcovHC(lm_CR_pp, type = 'HC0'))
lm_CR_F <- lm(correct_response/7 ~ Profile + Video + Profile_Video + as.factor(financial_lit_b),
data = df[df$Gender=="F",])
lm_CR_F2<-coeftest(lm_CR_F, vcov = vcovHC(lm_CR_F, type = 'HC0'))
lm_CR_M <- lm(correct_response/7 ~ Profile + Video + Profile_Video + as.factor(financial_lit_b),
data = df[df$Gender=="M",])
lm_CR_M2<-coeftest(lm_CR_M, vcov = vcovHC(lm_CR_M, type = 'HC0'))
lm_CR_ns <- lm(correct_response/7 ~ Profile + Video + Profile_Video + as.factor(financial_lit_b),
data = df[df$PlanJubi=="No sabe",])
lm_CR_ns2<-coeftest(lm_CR_ns, vcov = vcovHC(lm_CR_ns, type = 'HC0'))
stargazer(lm_CR, lm_CR_pv, lm_CR_pp, lm_CR_F, lm_CR_M, lm_CR_ns)
stargazer(lm_CR2, lm_CR_pv2, lm_CR_pp2, lm_CR_F2, lm_CR_M2, lm_CR_ns2, out=paste0(path_github,"online/Outputs/prop_correct_response.html"), type="html",
#covariate.labels = c("Profile$\\_i$", "Video$\\_j$", "Profile$\\_i$xVideo$\\_j$", "Mid Fin. Lit.", "High Fin. Lit.", "Constant"),
#dep.var.labels = c("Number of correct responses"), # keep.stat=c("n", "ll"),7
column.labels = c("Full Online", "Private", "Public", "Female", "Male", "Doesn't know"),
add.lines=list(c("Observations", nobs(lm_CR),nobs(lm_CR_pv), nobs(lm_CR_pp), nobs(lm_CR_F), nobs(lm_CR_M), nobs(lm_CR_ns)),
c("R\\^2", round(summary(lm_CR)$r.squared, 3), round(summary(lm_CR_pv)$r.squared, 3), round(summary(lm_CR_pp)$r.squared, 3),
round(summary(lm_CR_F)$r.squared, 3) , round(summary(lm_CR_M)$r.squared, 3) , round( summary(lm_CR_ns)$r.squared, 3)),
c("Adjusted R\\^2", round(summary(lm_CR)$adj.r.squared, 3), round(summary(lm_CR_pv)$adj.r.squared, 3),
round(summary(lm_CR_pp)$adj.r.squared, 3), round(summary(lm_CR_F)$adj.r.squared, 3) , round(summary(lm_CR_M)$adj.r.squared,3),
round( summary(lm_CR_ns)$adj.r.squared, 3)))
)
stargazer(lm_CR2, lm_CR_pv2, lm_CR_pp2, lm_CR_F2, lm_CR_M2, lm_CR_ns2, out=paste0(path_github,"Outputs/prop_correct_response.html"), type="html",
#covariate.labels = c("Profile$\\_i$", "Video$\\_j$", "Profile$\\_i$xVideo$\\_j$", "Mid Fin. Lit.", "High Fin. Lit.", "Constant"),
#dep.var.labels = c("Number of correct responses"), # keep.stat=c("n", "ll"),7
column.labels = c("Full Online", "Private", "Public", "Female", "Male", "Doesn't know"),
add.lines=list(c("Observations", nobs(lm_CR),nobs(lm_CR_pv), nobs(lm_CR_pp), nobs(lm_CR_F), nobs(lm_CR_M), nobs(lm_CR_ns)),
c("R\\^2", round(summary(lm_CR)$r.squared, 3), round(summary(lm_CR_pv)$r.squared, 3), round(summary(lm_CR_pp)$r.squared, 3),
round(summary(lm_CR_F)$r.squared, 3) , round(summary(lm_CR_M)$r.squared, 3) , round( summary(lm_CR_ns)$r.squared, 3)),
c("Adjusted R\\^2", round(summary(lm_CR)$adj.r.squared, 3), round(summary(lm_CR_pv)$adj.r.squared, 3),
round(summary(lm_CR_pp)$adj.r.squared, 3), round(summary(lm_CR_F)$adj.r.squared, 3) , round(summary(lm_CR_M)$adj.r.squared,3),
round( summary(lm_CR_ns)$adj.r.squared, 3)))
)
rm(list=ls())
#path_github <- "C:/Users/DCCS2/Documents/GitHub/Pensions-Website-Design/Data and analysis/Lab/"
path_datos<-"C:/Users/DCCS2/Dropbox/R&R Chilean pensions paper/"
#path_datos <- "C:/Users/DCCS2/Dropbox/Sitios web/Datos Laboratorio/Videos/"
path_github <- "C:/Users/DCCS2/Documents/GitHub/Pensions-Website-Design/"
df<-read.csv(paste0(path_datos,"dataset_con_columnas.csv"))
View(df)
df$Profile_Video<-ifelse(df$sitio=="VideoPerfil", "Profile_Video", "Other")
View(df)
df<-read.csv2(paste0(path_datos,"dataset_con_columnas.csv"))
###############################
##### Data Management #########
###############################
df$Profile_Video<-ifelse(df$sitio=="VideoPerfil", "Profile_Video", "Other")
df$t_perfil <- factor(df$t_perfil, levels = c("producto", "perfil"))
#####################
library(stargazer)
lm1<-lm(ValenceX2 ~ t_perfil + t_video + Profile_Video , data = df)
lm2<-lm(ArousalX2 ~ t_perfil + t_video + Profile_Video , data = df)
lm3<-lm(Happy2 ~ t_perfil + t_video + Profile_Video , data = df)
lm4<-lm(Sad2 ~ t_perfil + t_video + Profile_Video , data = df)
lm5<-lm(Angry2 ~ t_perfil + t_video + Profile_Video , data = df)
lm6<-lm(Surprised2 ~ t_perfil + t_video + Profile_Video , data = df)
lm7<-lm(Scared2 ~ t_perfil + t_video + Profile_Video , data = df)
lm8<-lm(Disgusted2 ~ t_perfil + t_video + Profile_Video , data = df)
#stargazer(lm1, lm2, lm3, lm4, lm5, lm6, lm7, lm8)
stargazer(lm1, lm2, lm3, lm4, lm5, lm6, lm7, lm8, out=paste0(path_datos,"emotions.html"), type="html")
library(shiny); runApp('C:/Users/DCCS2/Dropbox/CICS/Experiments/Islitas/Shiny_SEM/app_dl4.R')
runApp('C:/Users/DCCS2/Dropbox/CICS/Experiments/Islitas/Shiny_SEM/app_dl4.R')
runApp('C:/Users/DCCS2/Dropbox/CICS/Experiments/Islitas/Shiny_SEM/app_dl4.R')
runApp('C:/Users/DCCS2/Dropbox/CICS/Experiments/Islitas/Shiny_SEM/app_dl5.R')
runApp('C:/Users/DCCS2/Dropbox/CICS/Experiments/Islitas/Shiny_SEM/app_dl5.R')
runApp('C:/Users/DCCS2/Dropbox/CICS/Experiments/Islitas/Shiny_SEM/app_dl5.R')
library(shiny); runApp('C:/Users/DCCS2/Dropbox/CICS/Experiments/Islitas/Shiny_SEM/app2.2.R')
runApp('C:/Users/DCCS2/Dropbox/CICS/Experiments/Islitas/Shiny_SEM/app2.2.R')
runApp('C:/Users/DCCS2/Dropbox/CICS/Experiments/Islitas/Shiny_SEM/app2.2.R')
runApp('C:/Users/DCCS2/Dropbox/CICS/Experiments/Islitas/Shiny_SEM/app2.2.R')
# 1. Preparar
set.seed(2025)
n <- 1000
# Covariables
X1 <- rnorm(n)                 # p.ej., puntaje de mérito estandarizado
X2 <- rbinom(n, 1, 0.5)        # p.ej., indicador de experiencia previa
# 2. Definir parámetros de la DGP
# Para multinomial: definimos betas para cada categoría 1 y 2 (base = 0)
beta1 <- c(intercept = -1, X1 =  0.8, X2 =  0.5)
beta2 <- c(intercept =  0, X1 =  1.2, X2 = -0.3)
# 3. Calcular utilidades y probabilidades
# matriz de diseño
X <- cbind(1, X1, X2)
# utilidades lineales
eta1 <- X %*% beta1
eta2 <- X %*% beta2
# probabilidades multinomiales con base categoría 0
exp1 <- exp(eta1)
exp2 <- exp(eta2)
denom <- 1 + exp1 + exp2
p0 <- 1 / denom
p1 <- exp1 / denom
p2 <- exp2 / denom
# 4. Simular la categoría observada
U <- runif(n)
y_mul <- ifelse(U < p0, 0, ifelse(U < p0 + p1, 1, 2))
# 5. Montar el data.frame
df <- data.frame(
outcome = factor(y_mul, levels = 0:2, labels = c("Rechazado","Espera","Gana")),
X1 = X1,
X2 = X2
)
# 6. Estimación del modelo multinomial (mlogit)
library(nnet)
mlogit_mod <- multinom(outcome ~ X1 + X2, data = df)
summary(mlogit_mod)
stargazer(mlogit_mod)
library(stargazer)
stargazer(mlogit_mod)
stargazer(mlogit_mod, type="text")
df$outcome_ord <- ordered(df$outcome,
levels = c("Rechazado","Espera","Gana"))
ologit_mod <- polr(outcome_ord ~ X1 + X2, data = df, Hess = TRUE)
library(MASS)
# Convertimos outcome a ordered factor
df$outcome_ord <- ordered(df$outcome,
levels = c("Rechazado","Espera","Gana"))
ologit_mod <- polr(outcome_ord ~ X1 + X2, data = df, Hess = TRUE)
summary(ologit_mod)
stargazer(ologit_mod, type="text")
effect_size <- 100
# Standard deviation
sd <- 150
# Cohen's d = mean difference / SD
d <- effect_size / sd
# Sample size calculation
power.t.test(power = 0.8, sig.level = 0.05, delta = effect_size,
sd = sd, type = "two.sample", alternative = "two.sided")
effect_size <- 50
# Standard deviation
sd <- 150
# Cohen's d = mean difference / SD
d <- effect_size / sd
# Sample size calculation
power.t.test(power = 0.8, sig.level = 0.05, delta = effect_size,
sd = sd, type = "two.sample", alternative = "two.sided")
effect_size <- 75
# Standard deviation
sd <- 150
# Cohen's d = mean difference / SD
d <- effect_size / sd
# Sample size calculation
power.t.test(power = 0.8, sig.level = 0.05, delta = effect_size,
sd = sd, type = "two.sample", alternative = "two.sided")
# Load necessary libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(stargazer)
library(sandwich)   # For robust and clustered standard errors
library(lmtest)
library(lme4)
library(modelsummary)
library(tinytable)
#####################
### Presentation ESA
####################
oa_m1 <- compliance_extraction_OA ~
compliance_lag_extraction_others_OA_mean +
treatment*confianza_pm_scaled + treatment*conflicto_pm_scaled +
confianza_caleta_scaled + conflicto_caleta_scaled +
(1 | participant.code.plm)
#oa_m2 <- compliance_extraction_OA ~
#  compliance_lag_extraction_others_OA_mean +
#  compliance_beliefs_OA_caleta + compliance_beliefs_OA_others +
#  treatment +
#  (1 | participant.code.plm)
oa_m3 <- compliance_extraction_OA ~
compliance_lag_extraction_others_OA_mean +
#treatment*confianza_pm_scaled + treatment*conflicto_pm_scaled +
compliance_beliefs_OA_caleta + compliance_beliefs_OA_others*treatment +
(1 | participant.code.plm)
# oa_m4 <- compliance_extraction_OA ~
#   compliance_lag_extraction_others_OA_mean +
#   compliance_beliefs_OA_caleta + compliance_beliefs_OA_others +
#   treatment + minority + n_identities +
#   confianza_pm_scaled + conflicto_pm_scaled +
#   confianza_caleta_scaled + conflicto_caleta_scaled +
#   (1 | participant.code.plm)
oa_m4 <- compliance_extraction_OA ~
compliance_lag_extraction_others_OA_mean +
treatment*confianza_pm_scaled + treatment*conflicto_pm_scaled +
compliance_beliefs_OA_caleta + compliance_beliefs_OA_others*treatment +
minority + n_identities +
confianza_caleta_scaled + conflicto_caleta_scaled +
survey3.1.player.sexo + survey3.1.player.horas_trabajo +
survey3.1.player.estudios + survey3.1.player.liderazgo +
(1 | participant.code.plm)
ctrl <- lmerControl(optimizer = "bobyqa", optCtrl = list(maxfun = 1e5))
library(dplyr)
library(tidyr)
library(lme4)
library(boot)
library(modelsummary)
library(broom.mixed)
library(tinytable)
library(rlang)
library(flextable)     # for DOCX
library(officer)       # for DOCX
options(modelsummary_factory_default = "flextable")  # force DOCX via flextable
rm(list=ls())
path_github <-"C:/Users/DCCS2/Documents/GitHub/Multi-level-collective-action-in-small-scale-fisheries/Exptal Sessions/R/"
path_datos<-"C:/Users/DCCS2/Dropbox/CICS/Experiments/Islitas/Data/Sessions"
#path_github <-"C:/Users/Denise Laroze/Documents/GitHub/Multi-level-collective-action-in-small-scale-fisheries/Exptal Sessions/R/"
#path_datos<-"C:/Users/Denise Laroze/Dropbox/CICS/Experiments/Islitas/Data/Sessions"
setwd(path_github)
#load(paste0(path_datos, "/Datos_islitas.Rdata"))
load(paste0(path_datos, "/Datos_islitas_recode.Rdata"))
load(paste0(path_datos, "/Datos_islitas_long.Rdata"))
### Data management
dfs_long <- dfs_long %>%
mutate(
confianza_pm_scaled      = (survey1.1.player.confianza_pm- 1) / 3,
conflicto_pm_scaled      = (survey1.1.player.conflicto_pm- 1) / 3,
confianza_caleta_scaled  = (survey1.1.player.confianza_caleta- 1) / 3,
conflicto_caleta_scaled  = (survey1.1.player.conflicto_caleta- 1) / 3
)
dfs_long$round.plm<-ifelse(dfs_long$treatment=="T2", as.numeric(dfs_long$round)+8, as.numeric(dfs_long$round))
dfs_long$participant.code.plm<-ifelse(dfs_long$treatment=="T2", paste0(dfs_long$participant.code, ".T2"), dfs_long$participant.code)
# --- Clustered bootstrap helper --------------------------------------------
bootstrap_lmer <- function(model_formula, data, cluster_var, B = 100, seed = 62354234) {
# coefficient skeleton
coef_names <- names(fixef(lmer(model_formula, data = data, control = ctrl, REML = FALSE)))
# one bootstrap replication (cluster resampling with replacement)
one_rep <- function(d, i_unused) {
clusters <- unique(stats::na.omit(d[[cluster_var]]))   # <-- drop NA clusters
if (length(clusters) < 2L) return(setNames(rep(NA_real_, length(coef_names)), coef_names))
samp <- sample(clusters, length(clusters), replace = TRUE)
d_b <- dplyr::bind_rows(lapply(samp, function(cl) d[d[[cluster_var]] == cl, , drop = FALSE]))
fit <- try(lmer(model_formula, data = d_b, control = ctrl, REML = FALSE), silent = TRUE)
out <- setNames(rep(NA_real_, length(coef_names)), coef_names)
if (inherits(fit, "try-error")) return(out)
cf <- try(fixef(fit), silent = TRUE)
if (!inherits(cf, "try-error")) out[names(cf)] <- cf
out
}
set.seed(seed)
bt <- boot::boot(data = data,
statistic = function(d, i) one_rep(d, i),
R = B)
draws <- bt$t
colnames(draws) <- coef_names
V <- stats::cov(draws, use = "pairwise.complete.obs")
se <- sqrt(diag(V))
list(boot = bt, V = V, se = se, coef_names = coef_names)
}
oa_m1 <- compliance_extraction_OA ~
compliance_lag_extraction_others_OA_mean +
treatment*confianza_pm_scaled + treatment*conflicto_pm_scaled +
confianza_caleta_scaled + conflicto_caleta_scaled +
(1 | participant.code.plm)
#oa_m2 <- compliance_extraction_OA ~
#  compliance_lag_extraction_others_OA_mean +
#  compliance_beliefs_OA_caleta + compliance_beliefs_OA_others +
#  treatment +
#  (1 | participant.code.plm)
oa_m3 <- compliance_extraction_OA ~
compliance_lag_extraction_others_OA_mean +
#treatment*confianza_pm_scaled + treatment*conflicto_pm_scaled +
compliance_beliefs_OA_caleta + compliance_beliefs_OA_others*treatment +
(1 | participant.code.plm)
# oa_m4 <- compliance_extraction_OA ~
#   compliance_lag_extraction_others_OA_mean +
#   compliance_beliefs_OA_caleta + compliance_beliefs_OA_others +
#   treatment + minority + n_identities +
#   confianza_pm_scaled + conflicto_pm_scaled +
#   confianza_caleta_scaled + conflicto_caleta_scaled +
#   (1 | participant.code.plm)
oa_m4 <- compliance_extraction_OA ~
compliance_lag_extraction_others_OA_mean +
treatment*confianza_pm_scaled + treatment*conflicto_pm_scaled +
compliance_beliefs_OA_caleta + compliance_beliefs_OA_others*treatment +
minority + n_identities +
confianza_caleta_scaled + conflicto_caleta_scaled +
survey3.1.player.sexo + survey3.1.player.horas_trabajo +
survey3.1.player.estudios + survey3.1.player.liderazgo +
(1 | participant.code.plm)
ctrl <- lmerControl(optimizer = "bobyqa", optCtrl = list(maxfun = 1e5))
# --- Fit full-sample models (point estimates) ---
oaplm1 <- lmer(oa_m1, data = dfs_long, control = ctrl, REML = FALSE)
#oaplm2 <- lmer(oa_m2, data = dfs_long, control = ctrl, REML = FALSE)
oaplm3 <- lmer(oa_m3, data = dfs_long, control = ctrl, REML = FALSE)
oaplm4 <- lmer(oa_m4, data = dfs_long, control = ctrl, REML = FALSE)
# --- Clustered bootstrap (by OA cluster) ---
B <- 2000 # bump to 500–1000 for the paper
oa1 <- bootstrap_lmer(oa_m1, dfs_long, "gid.treat", B = B)
#oa2 <- bootstrap_lmer(oa_m2, dfs_long, "gid.treat", B = B)
oa3 <- bootstrap_lmer(oa_m3, dfs_long, "gid.treat", B = B)
oa4 <- bootstrap_lmer(oa_m4, dfs_long, "gid.treat", B = B)
# --- Export a single DOCX table with bootstrapped SEs ---
# A dictionary that renames but never drops terms.
# Include both ':' and ' × ' versions for interactions so it works regardless of pretty rewriting.
coef_dict <- c(
"(Intercept)"                                  = "(Intercept)",
"compliance_lag_extraction_others_OA_mean"     = "Mean observed compliance (t-1)",
"treatmentT2"                                  = "Stage (Known out-group)",
"confianza_pm_scaled"                          = "Trust (out-group)",
"conflicto_pm_scaled"                          = "Conflict (out-group)",
"treatmentT2:confianza_pm_scaled"              = "Stage × Trust (out-group)",
"treatmentT2:conflicto_pm_scaled"              = "Stage × Conflict (out-group)",
"treatmentT2 × confianza_pm_scaled"            = "Stage × Trust (out-group)",
"treatmentT2 × conflicto_pm_scaled"            = "Stage × Conflict (out-group)",
"compliance_beliefs_OA_others:treatmentT2"     = "Stage x Beliefs (out-group)",
"treatmentT2:compliance_beliefs_OA_others"     = "Stage x Beliefs (out-group)",
"confianza_caleta_scaled"                      = "Trust (Union)",
"conflicto_caleta_scaled"                      = "Conflict (in-group)",
"compliance_beliefs_OA_caleta"                 = "Prior beliefs (in-group)",
"compliance_beliefs_OA_others"                 = "Prior beliefs (out-group)",
"minority"                                     = "Minority in round",
"n_identities"                                 = "Three unions",
"survey3.1.player.sexo"                        = "Female",
"survey3.1.player.horas_trabajo"               = "Hours worked per week",
"survey3.1.player.estudios"                    = "Education level",
"survey3.1.player.liderazgoSí"                 = "Held leadership role",
"SD (Intercept participant.code.plm)"          = "SD (Intercept participant)",
"SD (Observations)"                            = "SD (Residual)"
)
# Optional: if you’d rather *stop* the automatic '×' rewrite entirely, uncomment:
# options(modelsummary_rewrite_terms = FALSE)
mods <- list(
"(1)"                        = oaplm1,
"(2)"                        = oaplm3,
"(3)"                        = oaplm4
)
vcvs <- list(oa1$V, oa3$V, oa4$V)
out_file_oa <- paste0(path_github, "Outputs/LMM_boot_H3_SharedArea_presentation.docx")
modelsummary(
mods,
vcov        = vcvs,
coef_rename = coef_dict,                 # rename without dropping anything
statistic   = "({std.error})",
stars       = c("*"=.05,"**"=.01,"***"=.001),
gof_omit    = "^(AIC|BIC|ICC|RMSE)$",
output      = out_file_oa
)
oa_m1 <- compliance_extraction_OA ~
compliance_lag_extraction_others_OA_mean +
treatment*confianza_pm_scaled + treatment*conflicto_pm_scaled +
confianza_caleta_scaled + conflicto_caleta_scaled +
(1 | participant.code.plm)
#oa_m2 <- compliance_extraction_OA ~
#  compliance_lag_extraction_others_OA_mean +
#  compliance_beliefs_OA_caleta + compliance_beliefs_OA_others +
#  treatment +
#  (1 | participant.code.plm)
oa_m3 <- compliance_extraction_OA ~
compliance_lag_extraction_others_OA_mean +
#treatment*confianza_pm_scaled + treatment*conflicto_pm_scaled +
compliance_beliefs_OA_caleta + compliance_beliefs_OA_others*treatment +
(1 | participant.code.plm)
# oa_m4 <- compliance_extraction_OA ~
#   compliance_lag_extraction_others_OA_mean +
#   compliance_beliefs_OA_caleta + compliance_beliefs_OA_others +
#   treatment + minority + n_identities +
#   confianza_pm_scaled + conflicto_pm_scaled +
#   confianza_caleta_scaled + conflicto_caleta_scaled +
#   (1 | participant.code.plm)
oa_m4 <- compliance_extraction_OA ~
compliance_lag_extraction_others_OA_mean +
treatment*confianza_pm_scaled + treatment*conflicto_pm_scaled +
compliance_beliefs_OA_caleta + compliance_beliefs_OA_others*treatment +
minority + n_identities +
confianza_caleta_scaled + conflicto_caleta_scaled +
survey3.1.player.sexo + survey3.1.player.horas_trabajo +
survey3.1.player.estudios + survey3.1.player.liderazgo +
(1 | participant.code.plm)
ctrl <- lmerControl(optimizer = "bobyqa", optCtrl = list(maxfun = 1e5))
# --- Fit full-sample models (point estimates) ---
oaplm1 <- lmer(oa_m1, data = dfs_long, control = ctrl, REML = FALSE)
#oaplm2 <- lmer(oa_m2, data = dfs_long, control = ctrl, REML = FALSE)
oaplm3 <- lmer(oa_m3, data = dfs_long, control = ctrl, REML = FALSE)
oaplm4 <- lmer(oa_m4, data = dfs_long, control = ctrl, REML = FALSE)
# --- Clustered bootstrap (by OA cluster) ---
B <- 2000 # bump to 500–1000 for the paper
set.seed(2365)
oa1 <- bootstrap_lmer(oa_m1, dfs_long, "gid.treat", B = B)
#oa2 <- bootstrap_lmer(oa_m2, dfs_long, "gid.treat", B = B)
oa3 <- bootstrap_lmer(oa_m3, dfs_long, "gid.treat", B = B)
oa4 <- bootstrap_lmer(oa_m4, dfs_long, "gid.treat", B = B)
# --- Export a single DOCX table with bootstrapped SEs ---
# A dictionary that renames but never drops terms.
# Include both ':' and ' × ' versions for interactions so it works regardless of pretty rewriting.
coef_dict <- c(
"(Intercept)"                                  = "(Intercept)",
"compliance_lag_extraction_others_OA_mean"     = "Mean observed compliance (t-1)",
"treatmentT2"                                  = "Stage (Known out-group)",
"confianza_pm_scaled"                          = "Trust (out-group)",
"conflicto_pm_scaled"                          = "Conflict (out-group)",
"treatmentT2:confianza_pm_scaled"              = "Stage × Trust (out-group)",
"treatmentT2:conflicto_pm_scaled"              = "Stage × Conflict (out-group)",
"treatmentT2 × confianza_pm_scaled"            = "Stage × Trust (out-group)",
"treatmentT2 × conflicto_pm_scaled"            = "Stage × Conflict (out-group)",
"compliance_beliefs_OA_others:treatmentT2"     = "Stage x Beliefs (out-group)",
"treatmentT2:compliance_beliefs_OA_others"     = "Stage x Beliefs (out-group)",
"confianza_caleta_scaled"                      = "Trust (Union)",
"conflicto_caleta_scaled"                      = "Conflict (in-group)",
"compliance_beliefs_OA_caleta"                 = "Prior beliefs (in-group)",
"compliance_beliefs_OA_others"                 = "Prior beliefs (out-group)",
"minority"                                     = "Minority in round",
"n_identities"                                 = "Three unions",
"survey3.1.player.sexo"                        = "Female",
"survey3.1.player.horas_trabajo"               = "Hours worked per week",
"survey3.1.player.estudios"                    = "Education level",
"survey3.1.player.liderazgoSí"                 = "Held leadership role",
"SD (Intercept participant.code.plm)"          = "SD (Intercept participant)",
"SD (Observations)"                            = "SD (Residual)"
)
# Optional: if you’d rather *stop* the automatic '×' rewrite entirely, uncomment:
# options(modelsummary_rewrite_terms = FALSE)
mods <- list(
"(Trust/Conflict)"                        = oaplm1,
"(Beliefs)"                        = oaplm3,
"(Beliefs +)"                        = oaplm4
)
vcvs <- list(oa1$V, oa3$V, oa4$V)
out_file_oa <- paste0(path_github, "Outputs/LMM_boot_H3_SharedArea_presentation.docx")
modelsummary(
mods,
vcov        = vcvs,
coef_rename = coef_dict,                 # rename without dropping anything
statistic   = "({std.error})",
stars       = c("*"=.05,"**"=.01,"***"=.001),
gof_omit    = "^(AIC|BIC|ICC|RMSE)$",
output      = out_file_oa
)
