names(df)
rounds <- 1:10  # Sequence from 1 to 10
treats <- c("T1", "T2")  # Time periods T1 and T2
vars <- c("amerb", "libre")  # Extraction types
# Generate the list of variables using expand.grid to generate all combinations
combinations <- expand.grid(rounds, treats, vars)
# Create the final object with formatted strings
variable_names <- paste0(
"df$", combinations$Var1, "juegoalgas.", combinations$Var2,
".player.", combinations$Var1, "_extraccion_", combinations$Var3
)
# Print or use the variable_names
variable_names
View(df[, variable_names])
names(df)
variable_names
rounds <- 1:10  # Sequence from 1 to 10
treats <- c("T1")  # Time periods T1 and T2
vars <- c("amerb", "libre")  # Extraction types
# Generate the list of variables using expand.grid to generate all combinations
combinations <- expand.grid(rounds, treats, vars)
# Create the final object with formatted strings
variable_names <- paste0(
"df$", combinations$Var1, "juegoalgas.", combinations$Var2,
".player.", combinations$Var1, "_extraccion_", combinations$Var3
)
# Print or use the variable_names
variable_names
rm(list=ls())
#path_github <- "C:/Users/Denise Laroze/Documents/GitHub/Pensions Website Design/Data and analysis/Online/"
path_datos<-"C:/Users/Denise Laroze/Dropbox/CICS/Experiments/Islitas/Data/Pilotaje/"
setwd(path_datos)
nombre_archivo<-"datos_piloto_islitas.csv"
df<- read.csv(paste0(path_datos, nombre_archivo))[-1,]
# T1
rounds <- 1:10  # Sequence from 1 to 10
treats <- c("T1")  # Time periods T1 and T2
vars <- c("amerb", "libre")  # Extraction types
# Generate the list of variables using expand.grid to generate all combinations
combinations <- expand.grid(rounds, treats, vars)
# Create the final object with formatted strings
variable_names1 <- paste0(
"df$", combinations$Var1, "juegoalgas.", combinations$Var2,
".player.", combinations$Var1, "_extraccion_", combinations$Var3
)
# T"
rounds <- 1:10  # Sequence from 1 to 10
treats <- c("T2")  # Time periods T1 and T2
vars <- c("amerb", "metat")  # Extraction types
# Generate the list of variables using expand.grid to generate all combinations
combinations <- expand.grid(rounds, treats, vars)
# Create the final object with formatted strings
variable_names2 <- paste0(
"df$", combinations$Var1, "juegoalgas.", combinations$Var2,
".player.", combinations$Var1, "_extraccion_", combinations$Var3
)
# Print or use the variable_names
variable_names<-c(variable_names1, variable_names2)
View(df[, variable_names])
variable_names
names(df)
variable_names
combinations <- expand.grid(treats, rounds, vars)
combinations
rm(list=ls())
#path_github <- "C:/Users/Denise Laroze/Documents/GitHub/Pensions Website Design/Data and analysis/Online/"
path_datos<-"C:/Users/Denise Laroze/Dropbox/CICS/Experiments/Islitas/Data/Pilotaje/"
setwd(path_datos)
nombre_archivo<-"datos_piloto_islitas.csv"
df<- read.csv(paste0(path_datos, nombre_archivo))[-1,]
# T1
rounds <- 1:10  # Sequence from 1 to 10
treats <- c("T1")  # Time periods T1 and T2
vars <- c("amerb", "libre")  # Extraction types
# Generate the list of variables using expand.grid to generate all combinations
combinations <- expand.grid(treats, rounds, vars)
# Create the final object with formatted strings
variable_names1 <- paste0(
"df$", combinations$Var1, "juegoalgas.", combinations$Var2,
".player.", combinations$Var1, "T1_extraccion_", combinations$Var3
)
# T"
rounds <- 1:10  # Sequence from 1 to 10
treats <- c("T2")  # Time periods T1 and T2
vars <- c("amerb", "metat")  # Extraction types
# Generate the list of variables using expand.grid to generate all combinations
combinations <- expand.grid(treats, rounds, vars)
# Create the final object with formatted strings
variable_names2 <- paste0(
"df$", combinations$Var1, "juegoalgas.", combinations$Var2,
".player.", combinations$Var1, "T2_extraccion_", combinations$Var3
)
# Print or use the variable_names
variable_names<-c(variable_names1, variable_names2)
variable_names
View(df[, variable_names])
rm(list=ls())
#path_github <- "C:/Users/Denise Laroze/Documents/GitHub/Pensions Website Design/Data and analysis/Online/"
path_datos<-"C:/Users/Denise Laroze/Dropbox/CICS/Experiments/Islitas/Data/Pilotaje/"
setwd(path_datos)
nombre_archivo<-"datos_piloto_islitas.csv"
df<- read.csv(paste0(path_datos, nombre_archivo))[-1,]
# T1
rounds <- 1:10  # Sequence from 1 to 10
treats <- c("T1")  # Time periods T1 and T2
vars <- c("amerb", "libre")  # Extraction types
# Generate the list of variables using expand.grid to generate all combinations
combinations <- expand.grid(treats, rounds, vars)
# Create the final object with formatted strings
variable_names1 <- paste0(
"df$", combinations$Var1, "juegoalgas.", combinations$Var2,
".player.", combinations$Var1, "_extraccion_", combinations$Var3
)
# T"
rounds <- 1:10  # Sequence from 1 to 10
treats <- c("T2")  # Time periods T1 and T2
vars <- c("amerb", "metat")  # Extraction types
# Generate the list of variables using expand.grid to generate all combinations
combinations <- expand.grid(treats, rounds, vars)
# Create the final object with formatted strings
variable_names2 <- paste0(
"df$", combinations$Var1, "juegoalgas.", combinations$Var2,
".player.", combinations$Var1, "_extraccion_", combinations$Var3
)
# Print or use the variable_names
variable_names<-c(variable_names1, variable_names2)
variable_names
View(df[, variable_names])
View(df[, variable_names1])
rounds <- 1:1  # Sequence from 1 to 10
treats <- c("T1")  # Time periods T1 and T2
vars <- c("amerb", "libre")  # Extraction types
# Generate the list of variables using expand.grid to generate all combinations
combinations <- expand.grid(treats, rounds, vars)
# Create the final object with formatted strings
variable_names1 <- paste0(
"df$", combinations$Var1, "juegoalgas.", combinations$Var2,
".player.", combinations$Var1, "_extraccion_", combinations$Var3
)
# T"
rounds <- 1:10  # Sequence from 1 to 10
treats <- c("T2")  # Time periods T1 and T2
vars <- c("amerb", "metat")  # Extraction types
# Generate the list of variables using expand.grid to generate all combinations
combinations <- expand.grid(treats, rounds, vars)
# Create the final object with formatted strings
variable_names2 <- paste0(
"df$", combinations$Var1, "juegoalgas.", combinations$Var2,
".player.", combinations$Var1, "_extraccion_", combinations$Var3
)
# Print or use the variable_names
variable_names<-c(variable_names1, variable_names2)
variable_names
View(df[, variable_names1])
names(df)
rounds <- 1:2  # Sequence from 1 to 10
treats <- c("T1")  # Time periods T1 and T2
vars <- c("amerb", "libre")  # Extraction types
# Generate the list of variables using expand.grid to generate all combinations
combinations <- expand.grid(treats, rounds, vars)
# Create the final object with formatted strings
variable_names1 <- paste0(
"df$", combinations$Var1, "juegoalgas.", combinations$Var2,
".player.", combinations$Var1, "_extraccion_", combinations$Var3
)
rounds <- 1:2  # Sequence from 1 to 10
treats <- c("T1")  # Time periods T1 and T2
vars <- c("amerb", "libre")  # Extraction types
# Generate the list of variables using expand.grid to generate all combinations
combinations <- expand.grid(treats, rounds, vars)
# Create the final object with formatted strings
variable_names1 <- paste0(
"df$", combinations$Var1, "juegoalgas.", combinations$Var2,
".player.", combinations$Var1, "_extraccion_", combinations$Var3
)
View(df[, variable_names1])
rounds <- 1:1  # Sequence from 1 to 10
treats <- c("T1")  # Time periods T1 and T2
vars <- c("amerb", "libre")  # Extraction types
# Generate the list of variables using expand.grid to generate all combinations
combinations <- expand.grid(treats, rounds, vars)
# Create the final object with formatted strings
variable_names1 <- paste0(
"df$", combinations$Var1, "juegoalgas.", combinations$Var2,
".player.", combinations$Var1, "_extraccion_", combinations$Var3
)
View(df[, variable_names1])
View(df[, variable_names1])
rounds <- 1:1  # Sequence from 1 to 10
treats <- c("T1")  # Time periods T1 and T2
vars <- c("amerb", "libre")  # Extraction types
# Generate the list of variables using expand.grid to generate all combinations
combinations <- expand.grid(treats, rounds, vars)
# Create the final object with formatted strings
variable_names1 <- paste0(
"df$", combinations$Var1, "juegoalgas.", combinations$Var2,
".player.", combinations$Var1, "_extraccion_", combinations$Var3
)
variable_names1
View(df[, "T1juegoalgas.1.player.T1_extraccion_amerb"])
library(dplyr)
df2 <- df %>%
select(all_of(variable_names1))
# T1
rounds <- 1:1  # Sequence from 1 to 10
treats <- c("T1")  # Time periods T1 and T2
vars <- c("amerb", "libre")  # Extraction types
# Generate the list of variables using expand.grid to generate all combinations
combinations <- expand.grid(treats, rounds, vars)
# Create the final object with formatted strings
variable_names1 <- paste0(
"", combinations$Var1, "juegoalgas.", combinations$Var2,
".player.", combinations$Var1, "_extraccion_", combinations$Var3
)
# T2"
rounds <- 1:10  # Sequence from 1 to 10
treats <- c("T2")  # Time periods T1 and T2
vars <- c("amerb", "metat")  # Extraction types
# Generate the list of variables using expand.grid to generate all combinations
combinations <- expand.grid(treats, rounds, vars)
# Create the final object with formatted strings
variable_names2 <- paste0(
"", combinations$Var1, "juegoalgas.", combinations$Var2,
".player.", combinations$Var1, "_extraccion_", combinations$Var3
)
# Print or use the variable_names
variable_names<-c(variable_names1, variable_names2)
variable_names
View(df[, variable_names1])
names(df)
rm(list=ls())
#path_github <- "C:/Users/Denise Laroze/Documents/GitHub/Pensions Website Design/Data and analysis/Online/"
path_datos<-"C:/Users/Denise Laroze/Dropbox/CICS/Experiments/Islitas/Data/Pilotaje/"
setwd(path_datos)
nombre_archivo<-"datos_piloto_islitas.csv"
df<- read.csv(paste0(path_datos, nombre_archivo))[-1,]
# T1
rounds <- 1:10  # Sequence from 1 to 10
treats <- c("T1")  # Time periods T1 and T2
vars <- c("amerb", "libre")  # Extraction types
# Generate the list of variables using expand.grid to generate all combinations
combinations <- expand.grid(treats, rounds, vars)
# Create the final object with formatted strings
variable_names1 <- paste0(
"", combinations$Var1, "juegoalgas.", combinations$Var2,
".player.", combinations$Var1, "_extraccion_", combinations$Var3
)
# T2"
rounds <- 1:10  # Sequence from 1 to 10
treats <- c("T2")  # Time periods T1 and T2
vars <- c("amerb", "metat")  # Extraction types
# Generate the list of variables using expand.grid to generate all combinations
combinations <- expand.grid(treats, rounds, vars)
# Create the final object with formatted strings
variable_names2 <- paste0(
"", combinations$Var1, "juegoalgas.", combinations$Var2,
".player.", combinations$Var1, "_extraccion_", combinations$Var3
)
# Print or use the variable_names
variable_names<-c(variable_names1, variable_names2)
variable_names
View(df[, variable_names])
View(df[, variable_names])
names(df)
mean(pago_final.1.player.payoff, na.rm=T)
mean(df$pago_final.1.player.payoff, na.rm=T)
summary(pago_final.1.player.payoff)
summary(df$pago_final.1.player.payoff)
View(df)
mean(df$participant.payoff, na.rm=T)
9000+mean(df$participant.payoff, na.rm=T)
rm(list=ls())
path_github <- "C:/Users/Denise Laroze/Documents/GitHub/Multi-level-collective-action-in-small-scale-fisheries/Pilotaje/R/"
#path_datos<-"C:/Users/Denise Laroze/Dropbox/CICS/Experiments/Islitas/Data/Pilotaje/"
path_datos<-"C:/Users/DCCS2/Dropbox/CICS/Experiments/Islitas/Data/Pilotaje/"
setwd(path_datos)
library(foreign)
library(dplyr)
library(stringr)
library(ggplot2)
library(gridExtra)
library(tidyr)
rm(list=ls())
path_github <- "C:/Users/Denise Laroze/Documents/GitHub/Multi-level-collective-action-in-small-scale-fisheries/Pilotaje/R/"
path_datos<-"C:/Users/Denise Laroze/Dropbox/CICS/Experiments/Islitas/Data/Pilotaje/"
#path_datos<-"C:/Users/DCCS2/Dropbox/CICS/Experiments/Islitas/Data/Pilotaje/"
setwd(path_github)
datos_csv<-"datos_piloto_islitas.csv"
df<- read.csv(paste0(path_datos, datos_csv))
##################################################
############ recode ##############################
##################################################
df$gid.amerb<-paste0(df$participant.zonaT2, ".",df$participant.id_caleta)
df$gid.treat<-df$participant.zonaT2
table(df$gid.amerb)
### Regid.amerb### Review decisions by each person over the 10 rounds
names(df)
#################################################
################# Subsets #######################
#################################################
# T1
rounds <- 1:10  # Sequence from 1 to 10
treats <- c("T1")  # Time periods T1 and T2
vars <- c("amerb", "libre")  # Extraction types
# Generate the list of variables using expand.grid to generate all combinations
combinations <- expand.grid(treats, rounds, vars)
# Create the final object with formatted strings
variable_names1 <- paste0(
"", combinations$Var1, "juegoalgas.", combinations$Var2,
".player.", combinations$Var1, "_extraccion_", combinations$Var3
)
# T2"
rounds <- 1:10  # Sequence from 1 to 10
treats <- c("T2")  # Time periods T1 and T2
vars <- c("amerb", "metat")  # Extraction types
# Generate the list of variables using expand.grid to generate all combinations
combinations <- expand.grid(treats, rounds, vars)
# Create the final object with formatted strings
variable_names2 <- paste0(
"", combinations$Var1, "juegoalgas.", combinations$Var2,
".player.", combinations$Var1, "_extraccion_", combinations$Var3
)
# Print or use the variable_names
variable_names<-c(variable_names1, variable_names2, "gid.amerb", "gid.treat")
dfs<-(df[, variable_names])
names(df)
df$beliefsT1inicial.1.player.T1_belief_caleta_en_amerb_ini
df$beliefsT1final.1.player.T1_belief_caleta_en_libre_fin
df$beliefsT1final.1.player.T1_belief_pm_en_libre_fin
df$beliefsT1inicial.1.player.T1_belief_caleta_en_libre_ini
#
belief_columns <- grep("belief", colnames(df), value = TRUE, ignore.case = TRUE)
# Now filter to keep only the ones that end in "_ini" or "_fin"
filtered_belief_columns <- grep("_ini$|_fin$|id", belief_columns, value = TRUE, ignore.case = TRUE)
# View the result
print(filtered_belief_columns)
View(df[,c(filtered_belief_columns,  "gid.amerb", "gid.treat" )])
#################################################
############### Data Analysis ###################
#################################################
#Descriptive statistics
9000+mean(df$participant.payoff, na.rm=T)
summary(df$pago_final.1.player.payoff)
table(df$T2juegoalgas.1.player.T2_grupo_mixto)
table(df$participant.grupo_amerb)
#############
### Graphs
##############
#### means per groups in each
### var selection
rounds <- 1:10  # Sequence from 1 to 10
treats <- c("T1")  # Time periods T1 and T2
vars <- c("amerb")  # Extraction types
# Generate the list of variables using expand.grid to generate all combinations
combinations <- expand.grid(treats, rounds, vars)
vars <- paste0(
"", combinations$Var1, "juegoalgas.", combinations$Var2,
".player.", combinations$Var1, "_extraccion_", combinations$Var3
)
# Fuction: calculate means for each variable by group
calculate_means_by_group <- function(df, group_var, variable_names) {
means_list <- list()
for (var in variable_names) {
if (var %in% colnames(df)) {
# Calculate the mean by group for the current variable
means <- df %>%
group_by(!!sym(group_var)) %>%
summarise(mean_extraction = mean(!!sym(var), na.rm = TRUE)) %>%
mutate(variable = var)
# Append the result to the list
means_list[[var]] <- means
} else {
warning(paste("Variable", var, "not found in the data frame."))
}
}
# Combine all the results into one data frame
result <- bind_rows(means_list)
return(result)
}
# Run the function to calculate the means
gid.means.amerb.t1 <- calculate_means_by_group(df, "gid.amerb", vars)
gid.means.amerb.t1$round <- str_extract(gid.means.amerb.t1$variable, "(?<=\\.)\\d+(?=\\.)")
# Mean payoff per round T1 amerb
gid.means.amerb.t1$round <- as.numeric(gid.means.amerb.t1$round)
# Create the line plot 1
p1<-ggplot(gid.means.amerb.t1, aes(x = round, y = mean_extraction, color = as.factor(gid.amerb), group = gid.amerb)) +
geom_line() +  # Line for each gid.amerb group
scale_y_continuous(breaks = seq(0, 50, by = 10), limits = c(0, 50)) +
geom_point() +  # Optional: Add points on the lines for clarity
labs(
title = "T1 AMERB",
x = "Round",
y = "Mean extraction by group amerb T1",
color = "Group (gid.amerb)"
) +
theme_minimal() +  # Use a clean theme for better visualization
theme(legend.position = "none")
p1
#### Graph amerb t2
rounds <- 1:10  # Sequence from 1 to 10
treats <- c("T2")  # Time periods T1 and T2
vars <- c("amerb")  # Extraction types
# Generate the list of variables using expand.grid to generate all combinations
combinations <- expand.grid(treats, rounds, vars)
vars <- paste0(
"", combinations$Var1, "juegoalgas.", combinations$Var2,
".player.", combinations$Var1, "_extraccion_", combinations$Var3
)
gid.means.amerb.t2 <- calculate_means_by_group(df, "gid.amerb", vars)
gid.means.amerb.t2$round <- str_extract(gid.means.amerb.t2$variable, "(?<=\\.)\\d+(?=\\.)")
gid.means.amerb.t2$round <- as.numeric(gid.means.amerb.t2$round)
# Create the line plot 1
p2<-ggplot(gid.means.amerb.t2, aes(x = round, y = mean_extraction, color = as.factor(gid.amerb), group = gid.amerb)) +
geom_line() +  # Line for each gid.amerb group
scale_y_continuous(breaks = seq(0, 50, by = 10), limits = c(0, 50)) +
geom_point() +  # Optional: Add points on the lines for clarity
labs(
title = "T2 - AMERB",
x = "Round",
y = "Mean extraction by group amerb T2",
color = "Group (gid.amerb)"
) +
theme_minimal()  # Use a clean theme for better visualization
p2
grid.arrange(p1, p2, ncol = 2)
#### means per groups in each
### var selection
rounds <- 1:10  # Sequence from 1 to 10
treats <- c("T1")  # Time periods T1 and T2
vars <- c("libre")  # Extraction types
# Generate the list of variables using expand.grid to generate all combinations
combinations <- expand.grid(treats, rounds, vars)
vars <- paste0(
"", combinations$Var1, "juegoalgas.", combinations$Var2,
".player.", combinations$Var1, "_extraccion_", combinations$Var3
)
# Run the function to calculate the means
gid.means.zl.t1 <- calculate_means_by_group(df, "participant.zonaT2", vars)
gid.means.zl.t1$round <- str_extract(gid.means.zl.t1$variable, "(?<=\\.)\\d+(?=\\.)")
# Mean payoff per round T1 zl
gid.means.zl.t1$round <- as.numeric(gid.means.zl.t1$round)
# Create the line plot 1
p3<-ggplot(gid.means.zl.t1, aes(x = round, y = mean_extraction, color = as.factor(participant.zonaT2), group = participant.zonaT2)) +
geom_line() +  # Line for each gid.zl group
scale_y_continuous(breaks = seq(0, 50, by = 10), limits = c(0, 50)) +
geom_point() +  # Optional: Add points on the lines for clarity
labs(
title = "T1 Zona Libre",
x = "Round",
y = "Mean extraction by group zona libre T1",
color = "Group (gid.zl)"
) +
theme_minimal() + # Use a clean theme for better visualization
theme(legend.position = "none")
p3
#### Graph amerb t2
rounds <- 1:10  # Sequence from 1 to 10
treats <- c("T2")  # Time periods T1 and T2
vars <- c("metat")  # Extraction types
# Generate the list of variables using expand.grid to generate all combinations
combinations <- expand.grid(treats, rounds, vars)
vars <- paste0(
"", combinations$Var1, "juegoalgas.", combinations$Var2,
".player.", combinations$Var1, "_extraccion_", combinations$Var3
)
gid.means.zl.t2 <- calculate_means_by_group(df, "participant.zonaT2", vars)
gid.means.zl.t2$round <- str_extract(gid.means.zl.t2$variable, "(?<=\\.)\\d+(?=\\.)")
gid.means.zl.t2$round <- as.numeric(gid.means.zl.t2$round)
# Create the line plot 1
p4<-ggplot(gid.means.zl.t2, aes(x = round, y = mean_extraction, color = as.factor(participant.zonaT2), group = participant.zonaT2)) +
geom_line() +  # Line for each gid.amerb group
scale_y_continuous(breaks = seq(0, 50, by = 10), limits = c(0, 50)) +
geom_point() +  # Optional: Add points on the lines for clarity
labs(
title = "T2 - Meta-Turf",
x = "Round",
y = "Mean extraction by group Meta-Turf T2",
color = "Group (gid.amerb)"
) +
theme_minimal()  # Use a clean theme for better visualization
p4
grid.arrange(p1, p2, p3, p4, ncol = 2, nrow= 2)
ggsave( file=paste0(path_github, "outputs/group_means.pdf") , plot = p4, device = "pdf", width = 8, height = 6)
##################
### diff in diff
##################
diff_amerb_libre <- rm %>%
filter(treatment == "T1") %>%
pivot_wider(
names_from = extraction_type,  # Spread T1 and T2 into separate columns
values_from = mean_value  # The mean values for amerb
) %>%
arrange(round)
diff_amerb_libre <- rm %>%
filter(treatment == "T1") %>%
pivot_wider(
names_from = extraction_type,  # Spread T1 and T2 into separate columns
values_from = mean_value  # The mean values for amerb
) %>%
arrange(round)
View(dfs)
diff_amerb_libre <- dfs %>%
filter(treatment == "T1") %>%
pivot_wider(
names_from = extraction_type,  # Spread T1 and T2 into separate columns
values_from = mean_value  # The mean values for amerb
) %>%
arrange(round)
View(p1)
View(gid.means.amerb.t1)
View(gid.means.amerb.t2)
View(dfs)
